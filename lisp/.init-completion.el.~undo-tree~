(undo-tree-save-format-version . 1)
"083271698a19a444a2d760ce928a627f39e34963"
[nil nil nil nil (25292 14229 600956 0) 0 nil]
([nil nil ((#(";; ---------------------------------------------------------------------------" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 78 (face font-lock-comment-face fontified t)) . 179) (t 25285 12837 273928 910000)) nil (25294 52321 750924 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 179) (undo-tree-id58 . -1)) nil (25294 52321 750923 0) 0 nil])
([nil nil ((#(";; ---------------------------------------------------------------------------" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 78 (face font-lock-comment-face fontified t)) . 393)) nil (25294 52321 750922 0) 0 nil])
([nil nil ((394 . 403) (393 . 395)) nil (25294 52321 750921 0) 0 nil])
([nil nil ((403 . 405)) nil (25294 52321 750920 0) 0 nil])
([nil nil ((405 . 406)) nil (25294 52321 750919 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 421 . 422) (nil fontified nil 406 . 422) (406 . 422)) nil (25294 52321 750919 0) 0 nil])
([nil nil ((422 . 425)) nil (25294 52321 750918 0) 0 nil])
([nil nil ((425 . 428)) nil (25294 52321 750917 0) 0 nil])
([nil nil ((425 . 430) (#(":ho" 0 3 (face font-lock-builtin-face fontified t)) . -425) (undo-tree-id57 . -3) 428) nil (25294 52321 750916 0) 0 nil])
([nil nil ((432 . 437) (430 . 433)) nil (25294 52321 750915 0) 0 nil])
([nil nil ((437 . 440)) nil (25294 52321 750914 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -439) (undo-tree-id56 . -1) 440) nil (25294 52321 750913 0) 0 nil])
([nil nil ((439 . 442)) nil (25294 52321 750912 0) 0 nil])
([nil nil ((432 . 444) (#("company-mo" 0 10 (fontified t)) . -432) (undo-tree-id55 . -10) 442) nil (25294 52321 750911 0) 0 nil])
([nil nil ((444 . 458)) nil (25294 52321 750909 0) 0 nil])
([nil nil ((458 . 466)) nil (25294 52321 750909 0) 0 nil])
([nil nil ((#("," 0 1 (fontified t)) . -464) (undo-tree-id53 . -1) (#("p" 0 1 (fontified t)) . -465) (undo-tree-id54 . -1) 466) nil (25294 52321 750908 0) 0 nil])
([nil nil ((464 . 468)) nil (25294 52321 750906 0) 0 nil])
([nil nil ((470 . 471)) nil (25294 52321 750905 0) 0 nil])
([nil nil ((471 . 474)) nil (25294 52321 750904 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -471) (undo-tree-id50 . -1) (#("s" 0 1 (fontified t)) . -472) (undo-tree-id51 . -1) (#("d" 0 1 (fontified t)) . -473) (undo-tree-id52 . -1) 474) nil (25294 52321 750904 0) 0 nil])
([nil nil ((471 . 472)) nil (25294 52321 750901 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -471) (undo-tree-id49 . -1) 472) nil (25294 52321 750900 0) 0 nil])
([nil nil ((472 . 474) (471 . 473)) nil (25294 52321 750899 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -472) (undo-tree-id47 . -1) (#("s" 0 1 (fontified t)) . -473) (undo-tree-id48 . -1) 474) nil (25294 52321 750898 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil)) . -471) (undo-tree-id41 . -1) (undo-tree-id42 . 1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (#(")" 0 1 (fontified t)) . 472) (undo-tree-id45 . 1) (undo-tree-id46 . -1)) nil (25294 52321 750895 0) 0 nil])
([nil nil ((472 . 474) (471 . 473)) nil (25294 52321 750891 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -472) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (#("s" 0 1 (fontified t)) . -473) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) 474) nil (25294 52321 750890 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil)) . -471) (undo-tree-id27 . 1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#(")" 0 1 (fontified t)) . 472) (undo-tree-id33 . 1) (undo-tree-id34 . -1)) nil (25294 52321 750885 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 470) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) 471) nil (25294 52321 750880 0) 0 nil])
([nil nil ((469 . 472)) nil (25294 52321 750876 0) 0 nil])
([nil nil ((472 . 477)) nil (25294 52321 750875 0) 0 nil])
([nil nil ((472 . 479) (#(":conf" 0 5 (face font-lock-builtin-face fontified t)) . -472) (undo-tree-id19 . -5) (undo-tree-id20 . -5) 477) nil (25294 52321 750874 0) 0 nil])
([nil nil ((479 . 482)) nil (25294 52321 750872 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 520 . 521) (nil fontified nil 482 . 521) (482 . 521)) nil (25294 52321 750871 0) 0 nil])
([nil nil ((522 . 524)) nil (25294 52321 750870 0) 0 nil])
([nil nil ((525 . 527) (524 . 526)) nil (25294 52321 750870 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -525) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (#("s" 0 1 (fontified t)) . -526) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 527) nil (25294 52321 750869 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil)) . -524) (undo-tree-id8 . 1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#(")" 0 1 (fontified t)) . 525) (undo-tree-id13 . 1) (undo-tree-id14 . -1)) nil (25294 52321 750865 0) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 522) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) 524) nil (25294 52321 750860 0) 0 nil])
([nil nil ((392 . 393)) nil (25294 52321 750857 0) 0 nil])
([nil nil ((393 . 405)) nil (25294 52321 750856 0) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -403) (undo-tree-id3 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -404) (undo-tree-id4 . -1) 405) nil (25294 52321 750856 0) 0 nil])
([nil nil ((403 . 404)) nil (25294 52321 750853 0) 0 nil])
([nil nil ((404 . 412)) nil (25294 52321 750853 0) 0 nil])
([nil nil ((#("用" 0 1 (face font-lock-comment-face fontified t)) . -411) (undo-tree-id2 . -1) 412) nil (25294 52321 750852 0) 0 nil])
([nil nil ((411 . 423)) nil (25294 52321 750850 0) 0 nil])
([nil nil ((423 . 435)) nil (25294 52321 750850 0) 0 nil])
([nil nil ((435 . 437)) nil (25294 52321 750849 0) 0 nil])
([nil nil ((437 . 444)) nil (25294 52321 750848 0) 0 nil])
([nil nil ((#("，" 0 1 (face font-lock-comment-face fontified t)) . -443) (undo-tree-id1 . -1) 444) nil (25294 52321 750848 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . 442) (undo-tree-id0 . -1) 443) nil (25294 52321 750846 0) 0 nil])
([nil nil ((442 . 448)) nil (25294 52321 750826 0) 0 nil])
([nil nil ((448 . 454)) nil (25294 52321 750826 0) 0 nil])
([nil nil ((454 . 459)) nil (25294 52321 750825 0) 0 nil])
([nil nil ((#("d" 0 1 (face font-lock-comment-face fontified nil)) . -459) (459 . 460)) nil (25294 52321 750823 0) 0 nil])
([nil nil ((459 . 464)) nil (25294 52321 750818 0) 0 nil])
([nil nil ((389 . 390) (t 25294 52321 754758 235000)) nil (25300 9496 949429 0) 0 nil])
([nil nil ((#("。" 0 1 (fontified t)) . -389) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 390) nil (25300 9496 949428 0) 0 nil])
([nil nil ((389 . 391)) nil (25300 9496 949409 0) 0 nil])
([nil nil ((392 . 395)) nil (25300 9496 949483 0) 0 nil])
([nil nil ((394 . 396) (#("  " 0 2 (fontified nil)) . 393) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (395 . 396)) nil (25300 9511 204438 0) 0 nil] [nil nil ((nil rear-nonsticky nil 584 . 585) (nil fontified nil 428 . 585) (nil fontified nil 395 . 428) (395 . 585)) ((#("(setq company-show-numbers t) ;; 给选项编号 (按快捷键 M-1、M-2 等等来进行选择).
  (setq company-selection-wrap-around t)
  (setq company-transformers '(company-sort-by-occurrence))) ; 根据选择的频率进行排序，读者如果不喜欢可以去掉" 0 1 (fontified nil) 1 5 (face font-lock-keyword-face fontified nil) 5 30 (fontified nil) 30 33 (face font-lock-comment-delimiter-face fontified nil) 33 63 (face font-lock-comment-face fontified nil charset chinese-gb2312) 63 66 (fontified nil charset chinese-gb2312) 66 70 (face font-lock-keyword-face fontified nil charset chinese-gb2312) 70 104 (fontified nil charset chinese-gb2312) 104 107 (fontified nil charset chinese-gb2312) 107 111 (face font-lock-keyword-face fontified nil charset chinese-gb2312) 111 165 (fontified nil charset chinese-gb2312) 165 167 (face font-lock-comment-delimiter-face fontified nil charset chinese-gb2312) 167 189 (face font-lock-comment-face fontified nil charset chinese-gb2312) 189 190 (face font-lock-comment-face rear-nonsticky nil fontified nil charset chinese-gb2312)) . 395) (undo-tree-id3 . -190) (undo-tree-id4 . -104) (undo-tree-id5 . -104) (undo-tree-id6 . -190) (nil fontified t 465 . 499) (nil fontified t 461 . 465) (nil fontified t 458 . 461) (nil fontified t 428 . 458) (nil rear-nonsticky t 584 . 585)) (25300 9496 949405 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 582 . 583) (nil fontified nil 426 . 583) (nil fontified nil 393 . 426) (393 . 583)) nil (25300 9511 204435 0) 0 nil])
nil
([nil nil ((#("  " 0 2 (fontified nil)) . -586) (393 . 395) 583) nil (25300 9511 204433 0) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -426) (undo-tree-id7 . -1) 427) nil (25300 9511 204428 0) 0 nil])
([nil nil ((587 . 588) (t 25300 9511 209045 950000)) nil (25300 9548 191714 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 666 . 667) (nil fontified nil 588 . 667) (588 . 667)) nil (25300 9548 191713 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified nil)) . -625) (667 . 668)) nil (25300 9548 191709 0) 0 nil])
([nil nil ((625 . 627) 665 (t 25300 9548 194530 433000)) nil (25300 9565 970721 0) 0 nil])
([nil nil ((587 . 588)) nil (25300 9565 970720 0) 0 nil])
([nil nil ((588 . 593)) nil (25300 9565 970720 0) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -591) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (#("u" 0 1 (face font-lock-comment-face fontified t)) . -592) (undo-tree-id18 . -1) 593) nil (25300 9565 970719 0) 0 nil])
([nil nil ((591 . 593)) nil (25300 9565 970716 0) 0 nil])
([nil nil ((#("徒" 0 1 (face font-lock-comment-face fontified t)) . -591) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (#("刑" 0 1 (face font-lock-comment-face fontified t)) . -592) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) 593) nil (25300 9565 970715 0) 0 nil])
([nil nil ((591 . 595)) nil (25300 9565 970703 0) 0 nil])
([nil nil ((#("
  :ensure t" 0 3 (fontified t) 3 10 (face font-lock-builtin-face fontified t) 10 12 (fontified t)) . 620) (undo-tree-id540 . -1) (undo-tree-id541 . -12) (undo-tree-id542 . -12) (t 25300 9565 973895 556000)) nil (25300 10005 642177 0) 0 nil])
([nil nil ((#("
  " 0 3 (fontified t)) . 823) (undo-tree-id538 . -3) (undo-tree-id539 . -1) 826) nil (25300 10005 642175 0) 0 nil])
([nil nil ((823 . 824)) nil (25300 10005 642173 0) 0 nil])
([nil nil ((269 . 271)) nil (25300 10005 642172 0) 0 nil])
([nil nil ((#("；" 0 1 (fontified t)) . -269) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (#("；" 0 1 (fontified t)) . -270) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) 271) nil (25300 10005 642159 0) 0 nil])
([nil nil ((269 . 271)) nil (25300 10005 641843 0) 0 nil])
([nil nil ((178 . 179) (t 25300 10005 645521 40000)) nil (25300 10015 506134 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 277 . 278) (nil fontified nil 179 . 278) (179 . 278)) nil (25300 10015 506132 0) 0 nil])
([nil nil ((278 . 279)) nil (25300 10015 506127 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-unmatched-face))) . -688) (undo-tree-id3 . -1) (undo-tree-id4 . 1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 689 (t 25300 10015 509639 29000)) nil (25300 10124 277600 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 687) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) 688) nil (25300 10124 277592 0) 0 nil])
([nil nil ((688 . 689) (t 25300 10124 281429 127000)) nil (25300 10305 763715 0) 0 nil])
([nil nil ((690 . 693) (689 . 691)) nil (25300 10305 763714 0) 0 nil])
([nil nil ((693 . 704)) nil (25300 10305 763713 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face font-lock-constant-face)) . -703) (undo-tree-id410 . -1) 704) nil (25300 10305 763713 0) 0 nil])
([nil nil ((703 . 704)) nil (25300 10305 763711 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -698) (undo-tree-id404 . -1) (#("i" 0 1 (fontified t face font-lock-constant-face)) . -699) (undo-tree-id405 . -1) (#("n" 0 1 (fontified t face font-lock-constant-face)) . -700) (undo-tree-id406 . -1) (#("t" 0 1 (fontified t face font-lock-constant-face)) . -701) (undo-tree-id407 . -1) (#("i" 0 1 (fontified t face font-lock-constant-face)) . -702) (undo-tree-id408 . -1) (#("-" 0 1 (fontified t face font-lock-constant-face)) . -703) (undo-tree-id409 . -1) 704) nil (25300 10305 763710 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 697) (undo-tree-id403 . -1) 698) nil (25300 10305 763705 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -690) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (#("e" 0 1 (fontified t)) . -691) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (#("q" 0 1 (fontified t)) . -692) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (#("u" 0 1 (fontified t)) . -693) (undo-tree-id399 . -1) (#("i" 0 1 (fontified t)) . -694) (undo-tree-id400 . -1) (#("r" 0 1 (fontified t)) . -695) (undo-tree-id401 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -696) (undo-tree-id402 . -1) 697) nil (25300 10305 763702 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-1-face))) . -689) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . 1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . 690) (undo-tree-id391 . 1) (undo-tree-id392 . -1)) nil (25300 10305 763693 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 687) (undo-tree-id383 . -1) (undo-tree-id384 . -1) 688) nil (25300 10305 763688 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -370) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -371) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) 372) nil (25300 10305 763674 0) 0 nil])
([nil nil ((278 . 279) (t 25300 10305 767484 559000)) nil (25300 10673 433372 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 878 . 879) (nil fontified nil 279 . 879) (279 . 879)) nil (25300 10673 433371 0) 0 nil])
([nil nil ((#(";; workaround for company-transformers
(setq company-tabnine--disable-next-transform nil)
(defun my-company--transform-candidates (func &rest args)
  (if (not company-tabnine--disable-next-transform)
      (apply func args)
    (setq company-tabnine--disable-next-transform nil)
    (car args)))

(defun my-company-tabnine (func &rest args)
  (when (eq (car args) 'candidates)
    (setq company-tabnine--disable-next-transform t))
  (apply func args))

(advice-add #'company--transform-candidates :around #'my-company--transform-candidates)
(advice-add #'company-tabnine :around #'my-company-tabnine)" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 39 (face font-lock-comment-face fontified t) 39 40 (face (rainbow-delimiters-depth-1-face) fontified t) 40 44 (face font-lock-keyword-face fontified t) 44 88 (fontified t) 88 89 (face (rainbow-delimiters-depth-1-face) fontified t) 89 90 (fontified t) 90 91 (face (rainbow-delimiters-depth-1-face) fontified t) 91 96 (face font-lock-keyword-face fontified t) 96 97 (fontified t) 97 129 (face font-lock-function-name-face fontified t) 129 130 (fontified t) 130 131 (face (rainbow-delimiters-depth-2-face) fontified t) 131 136 (fontified t) 136 141 (face font-lock-type-face fontified t) 141 146 (fontified t) 146 147 (face (rainbow-delimiters-depth-2-face) fontified t) 147 150 (fontified t) 150 151 (face (rainbow-delimiters-depth-2-face) fontified t) 151 153 (face font-lock-keyword-face fontified t) 153 154 (fontified t) 154 155 (face (rainbow-delimiters-depth-3-face) fontified t) 155 198 (fontified t) 198 199 (face (rainbow-delimiters-depth-3-face) fontified t) 199 206 (fontified t) 206 207 (face (rainbow-delimiters-depth-3-face) fontified t) 207 222 (fontified t) 222 223 (face (rainbow-delimiters-depth-3-face) fontified t) 223 228 (fontified t) 228 229 (face (rainbow-delimiters-depth-3-face) fontified t) 229 233 (face font-lock-keyword-face fontified t) 233 277 (fontified t) 277 278 (face (rainbow-delimiters-depth-3-face) fontified t) 278 283 (fontified t) 283 284 (face (rainbow-delimiters-depth-3-face) fontified t) 284 292 (fontified t) 292 293 (face (rainbow-delimiters-depth-3-face) fontified t) 293 294 (face (rainbow-delimiters-depth-2-face) fontified t) 294 295 (face (rainbow-delimiters-depth-1-face) fontified t) 295 297 (fontified t) 297 298 (face (rainbow-delimiters-depth-1-face) fontified t) 298 303 (face font-lock-keyword-face fontified t) 303 304 (fontified t) 304 322 (face font-lock-function-name-face fontified t) 322 323 (fontified t) 323 324 (face (rainbow-delimiters-depth-2-face) fontified t) 324 329 (fontified t) 329 334 (face font-lock-type-face fontified t) 334 339 (fontified t) 339 340 (face (rainbow-delimiters-depth-2-face) fontified t) 340 343 (fontified t) 343 344 (face (rainbow-delimiters-depth-2-face) fontified t) 344 348 (face font-lock-keyword-face fontified t) 348 349 (fontified t) 349 350 (face (rainbow-delimiters-depth-3-face) fontified t) 350 353 (fontified t) 353 354 (face (rainbow-delimiters-depth-4-face) fontified t) 354 362 (fontified t) 362 363 (face (rainbow-delimiters-depth-4-face) fontified t) 363 375 (fontified t) 375 376 (face (rainbow-delimiters-depth-3-face) fontified t) 376 381 (fontified t) 381 382 (face (rainbow-delimiters-depth-3-face) fontified t) 382 386 (face font-lock-keyword-face fontified t) 386 428 (fontified t) 428 429 (face (rainbow-delimiters-depth-3-face) fontified t) 429 430 (face (rainbow-delimiters-depth-2-face) fontified t) 430 433 (fontified t) 433 434 (face (rainbow-delimiters-depth-2-face) fontified t) 434 449 (fontified t) 449 450 (face (rainbow-delimiters-depth-2-face) fontified t) 450 451 (face (rainbow-delimiters-depth-1-face) fontified t) 451 453 (fontified t) 453 454 (face (rainbow-delimiters-depth-1-face) fontified t) 454 497 (fontified t) 497 504 (face font-lock-builtin-face fontified t) 504 539 (fontified t) 539 540 (face (rainbow-delimiters-depth-1-face) fontified t) 540 541 (fontified t) 541 542 (face (rainbow-delimiters-depth-1-face) fontified t) 542 571 (fontified t) 571 578 (face font-lock-builtin-face fontified t) 578 599 (fontified t) 599 600 (face (rainbow-delimiters-depth-1-face) rear-nonsticky t fontified t)) . 279) (undo-tree-id55 . -39) (undo-tree-id56 . -600) (undo-tree-id57 . -600) (undo-tree-id58 . -600)) nil (25300 10673 433370 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 278) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) 279) nil (25300 10673 433367 0) 0 nil])
([nil nil ((277 . 280)) nil (25300 10673 433363 0) 0 nil])
([nil nil ((280 . 282) (#("\"" 0 1 (fontified nil)) . -280) (280 . 281)) nil (25300 10673 433363 0) 0 nil])
([nil nil ((#("\"" 0 1 (face font-lock-string-face fontified nil)) . -280) (undo-tree-id49 . -1) (#("\"" 0 1 (face font-lock-string-face fontified t)) . 281)) nil (25300 10673 433361 0) 0 nil])
([nil nil ((280 . 284)) nil (25300 10673 433360 0) 0 nil])
([nil nil ((280 . 287) (#(":con" 0 4 (face font-lock-builtin-face fontified t)) . -280) (undo-tree-id47 . -4) (undo-tree-id48 . -4) 284) nil (25300 10673 433359 0) 0 nil])
([nil nil ((287 . 290)) nil (25300 10673 433357 0) 0 nil])
([nil nil ((nil fontified nil 889 . 890) (nil fontified nil 868 . 889) (nil fontified nil 861 . 868) (nil fontified nil 832 . 861) (nil fontified nil 831 . 832) (nil fontified nil 830 . 831) (nil fontified nil 829 . 830) (nil fontified nil 794 . 829) (nil fontified nil 787 . 794) (nil fontified nil 744 . 787) (nil fontified nil 743 . 744) (nil fontified nil 741 . 743) (nil fontified nil 740 . 741) (nil fontified nil 739 . 740) (nil fontified nil 724 . 739) (nil fontified nil 723 . 724) (nil fontified nil 720 . 723) (nil fontified nil 719 . 720) (nil fontified nil 718 . 719) (nil fontified nil 676 . 718) (nil fontified nil 672 . 676) (nil fontified nil 671 . 672) (nil fontified nil 666 . 671) (nil fontified nil 665 . 666) (nil fontified nil 653 . 665) (nil fontified nil 652 . 653) (nil fontified nil 644 . 652) (nil fontified nil 643 . 644) (nil fontified nil 640 . 643) (nil fontified nil 639 . 640) (nil fontified nil 638 . 639) (nil fontified nil 634 . 638) (nil fontified nil 633 . 634) (nil fontified nil 630 . 633) (nil fontified nil 629 . 630) (nil fontified nil 624 . 629) (nil fontified nil 619 . 624) (nil fontified nil 614 . 619) (nil fontified nil 613 . 614) (nil fontified nil 612 . 613) (nil fontified nil 594 . 612) (nil fontified nil 593 . 594) (nil fontified nil 588 . 593) (nil fontified nil 587 . 588) (nil fontified nil 585 . 587) (nil fontified nil 584 . 585) (nil fontified nil 583 . 584) (nil fontified nil 582 . 583) (nil fontified nil 574 . 582) (nil fontified nil 573 . 574) (nil fontified nil 568 . 573) (nil fontified nil 567 . 568) (nil fontified nil 523 . 567) (nil fontified nil 519 . 523) (nil fontified nil 518 . 519) (nil fontified nil 513 . 518) (nil fontified nil 512 . 513) (nil fontified nil 497 . 512) (nil fontified nil 496 . 497) (nil fontified nil 489 . 496) (nil fontified nil 488 . 489) (nil fontified nil 445 . 488) (nil fontified nil 444 . 445) (nil fontified nil 443 . 444) (nil fontified nil 441 . 443) (nil fontified nil 440 . 441) (nil fontified nil 437 . 440) (nil fontified nil 436 . 437) (nil fontified nil 431 . 436) (nil fontified nil 426 . 431) (nil fontified nil 421 . 426) (nil fontified nil 420 . 421) (nil fontified nil 419 . 420) (nil fontified nil 387 . 419) (nil fontified nil 386 . 387) (nil fontified nil 381 . 386) (nil fontified nil 380 . 381) (nil fontified nil 379 . 380) (nil fontified nil 378 . 379) (nil fontified nil 334 . 378) (nil fontified nil 330 . 334) (nil fontified nil 329 . 330) (nil fontified nil 293 . 329) (nil fontified nil 290 . 293) (290 . 890)) nil (25300 10673 433354 0) 0 nil])
([nil nil ((851 . 853) (761 . 763) (737 . 741) (#("  " 0 2 (fontified nil)) . 737) (681 . 687) (#("    " 0 4 (fontified nil)) . 681) (643 . 647) (#("  " 0 2 (fontified nil)) . 643) (597 . 599) (577 . 583) (#("    " 0 4 (fontified nil)) . 577) (520 . 526) (#("    " 0 4 (fontified nil)) . 520) (442 . 446) (#("  " 0 2 (fontified nil)) . 442) (382 . 384) (329 . 331) 890) nil (25300 10673 433339 0) 0 nil])
([nil nil ((#("
  :ensure t" 0 3 (fontified t) 3 10 (face font-lock-builtin-face fontified t) 10 12 (fontified t)) . 207) (undo-tree-id43 . -1) (undo-tree-id44 . -12) (undo-tree-id45 . -12) (undo-tree-id46 . -12)) nil (25300 10673 433336 0) 0 nil])
([nil nil ((#("(use-package company-tabnine
  :init (add-to-list 'company-backends #'company-tabnine)
  :config
  ;; workaround for company-transformers
  (setq company-tabnine--disable-next-transform nil)
  (defun my-company--transform-candidates (func &rest args)
    (if (not company-tabnine--disable-next-transform)
      (apply func args)
      (setq company-tabnine--disable-next-transform nil)
      (car args)))

  (defun my-company-tabnine (func &rest args)
    (when (eq (car args) 'candidates)
      (setq company-tabnine--disable-next-transform t))
    (apply func args))

  (advice-add #'company--transform-candidates :around #'my-company--transform-candidates)
  (advice-add #'company-tabnine :around #'my-company-tabnine))" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 28 (face font-lock-constant-face fontified t) 28 29 (fontified t) 29 31 (fontified t) 31 36 (face font-lock-builtin-face fontified t) 36 37 (fontified t) 37 38 (face (rainbow-delimiters-depth-2-face) fontified t) 38 85 (fontified t) 85 86 (face (rainbow-delimiters-depth-2-face) fontified t) 86 87 (fontified t) 87 89 (fontified t) 89 96 (face font-lock-builtin-face fontified t) 96 97 (fontified t) 97 99 (fontified t) 99 102 (face font-lock-comment-delimiter-face fontified t) 102 138 (face font-lock-comment-face fontified t) 138 140 (fontified t) 140 141 (face (rainbow-delimiters-depth-2-face) fontified t) 141 145 (face font-lock-keyword-face fontified t) 145 189 (fontified t) 189 190 (face (rainbow-delimiters-depth-2-face) fontified t) 190 193 (fontified t) 193 194 (face (rainbow-delimiters-depth-2-face) fontified t) 194 199 (face font-lock-keyword-face fontified t) 199 200 (fontified t) 200 232 (face font-lock-function-name-face fontified t) 232 233 (fontified t) 233 234 (face (rainbow-delimiters-depth-3-face) fontified t) 234 239 (fontified t) 239 244 (face font-lock-type-face fontified t) 244 249 (fontified t) 249 250 (face (rainbow-delimiters-depth-3-face) fontified t) 250 255 (fontified t) 255 256 (face (rainbow-delimiters-depth-3-face) fontified t) 256 258 (face font-lock-keyword-face fontified t) 258 259 (fontified t) 259 260 (face (rainbow-delimiters-depth-4-face) fontified t) 260 303 (fontified t) 303 304 (face (rainbow-delimiters-depth-4-face) fontified t) 304 311 (fontified t) 311 312 (face (rainbow-delimiters-depth-4-face) fontified t) 312 327 (fontified t) 327 328 (face (rainbow-delimiters-depth-4-face) fontified t) 328 335 (fontified t) 335 336 (face (rainbow-delimiters-depth-4-face) fontified t) 336 340 (face font-lock-keyword-face fontified t) 340 384 (fontified t) 384 385 (face (rainbow-delimiters-depth-4-face) fontified t) 385 392 (fontified t) 392 393 (face (rainbow-delimiters-depth-4-face) fontified t) 393 401 (fontified t) 401 402 (face (rainbow-delimiters-depth-4-face) fontified t) 402 403 (face (rainbow-delimiters-depth-3-face) fontified t) 403 404 (face (rainbow-delimiters-depth-2-face) fontified t) 404 408 (fontified t) 408 409 (face (rainbow-delimiters-depth-2-face) fontified t) 409 414 (face font-lock-keyword-face fontified t) 414 415 (fontified t) 415 433 (face font-lock-function-name-face fontified t) 433 434 (fontified t) 434 435 (face (rainbow-delimiters-depth-3-face) fontified t) 435 440 (fontified t) 440 445 (face font-lock-type-face fontified t) 445 450 (fontified t) 450 451 (face (rainbow-delimiters-depth-3-face) fontified t) 451 456 (fontified t) 456 457 (face (rainbow-delimiters-depth-3-face) fontified t) 457 461 (face font-lock-keyword-face fontified t) 461 462 (fontified t) 462 463 (face (rainbow-delimiters-depth-4-face) fontified t) 463 466 (fontified t) 466 467 (face (rainbow-delimiters-depth-5-face) fontified t) 467 475 (fontified t) 475 476 (face (rainbow-delimiters-depth-5-face) fontified t) 476 488 (fontified t) 488 489 (face (rainbow-delimiters-depth-4-face) fontified t) 489 496 (fontified t) 496 497 (face (rainbow-delimiters-depth-4-face) fontified t) 497 501 (face font-lock-keyword-face fontified t) 501 543 (fontified t) 543 544 (face (rainbow-delimiters-depth-4-face) fontified t) 544 545 (face (rainbow-delimiters-depth-3-face) fontified t) 545 550 (fontified t) 550 551 (face (rainbow-delimiters-depth-3-face) fontified t) 551 566 (fontified t) 566 567 (face (rainbow-delimiters-depth-3-face) fontified t) 567 568 (face (rainbow-delimiters-depth-2-face) fontified t) 568 572 (fontified t) 572 573 (face (rainbow-delimiters-depth-2-face) fontified t) 573 616 (fontified t) 616 623 (face font-lock-builtin-face fontified t) 623 658 (fontified t) 658 659 (face (rainbow-delimiters-depth-2-face) fontified t) 659 662 (fontified t) 662 663 (face (rainbow-delimiters-depth-2-face) fontified t) 663 692 (fontified t) 692 699 (face font-lock-builtin-face fontified t) 699 720 (fontified t) 720 721 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t) 721 722 (face (rainbow-delimiters-depth-1-face) fontified t)) . 179) (undo-tree-id25 . -29) (undo-tree-id26 . -722) (undo-tree-id27 . -722) (undo-tree-id28 . -722) (undo-tree-id29 . -722) (undo-tree-id30 . -722) (undo-tree-id31 . -722) (undo-tree-id32 . 722) (undo-tree-id33 . -1) (undo-tree-id34 . 1) (undo-tree-id35 . -722) (undo-tree-id36 . -89) (undo-tree-id37 . -722) (undo-tree-id38 . -28) (undo-tree-id39 . -99) (undo-tree-id40 . -722) (undo-tree-id41 . -28) (undo-tree-id42 . -722)) nil (25300 10673 433332 0) 0 nil])
([nil nil ((#("

" 0 2 (fontified t)) . 177) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) 179) nil (25300 10673 433321 0) 0 nil])
([nil nil ((863 . 864)) nil (25300 10673 433312 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1585 . 1586) (nil fontified nil 1585 . 1586) (nil fontified nil 1584 . 1585) (nil fontified nil 1563 . 1584) (nil fontified nil 1556 . 1563) (nil fontified nil 1527 . 1556) (nil fontified nil 1526 . 1527) (nil fontified nil 1523 . 1526) (nil fontified nil 1522 . 1523) (nil fontified nil 1487 . 1522) (nil fontified nil 1480 . 1487) (nil fontified nil 1437 . 1480) (nil fontified nil 1436 . 1437) (nil fontified nil 1432 . 1436) (nil fontified nil 1431 . 1432) (nil fontified nil 1430 . 1431) (nil fontified nil 1415 . 1430) (nil fontified nil 1414 . 1415) (nil fontified nil 1409 . 1414) (nil fontified nil 1408 . 1409) (nil fontified nil 1407 . 1408) (nil fontified nil 1365 . 1407) (nil fontified nil 1361 . 1365) (nil fontified nil 1360 . 1361) (nil fontified nil 1353 . 1360) (nil fontified nil 1352 . 1353) (nil fontified nil 1340 . 1352) (nil fontified nil 1339 . 1340) (nil fontified nil 1331 . 1339) (nil fontified nil 1330 . 1331) (nil fontified nil 1327 . 1330) (nil fontified nil 1326 . 1327) (nil fontified nil 1325 . 1326) (nil fontified nil 1321 . 1325) (nil fontified nil 1320 . 1321) (nil fontified nil 1315 . 1320) (nil fontified nil 1314 . 1315) (nil fontified nil 1309 . 1314) (nil fontified nil 1304 . 1309) (nil fontified nil 1299 . 1304) (nil fontified nil 1298 . 1299) (nil fontified nil 1297 . 1298) (nil fontified nil 1279 . 1297) (nil fontified nil 1278 . 1279) (nil fontified nil 1273 . 1278) (nil fontified nil 1272 . 1273) (nil fontified nil 1268 . 1272) (nil fontified nil 1267 . 1268) (nil fontified nil 1266 . 1267) (nil fontified nil 1265 . 1266) (nil fontified nil 1257 . 1265) (nil fontified nil 1256 . 1257) (nil fontified nil 1249 . 1256) (nil fontified nil 1248 . 1249) (nil fontified nil 1204 . 1248) (nil fontified nil 1200 . 1204) (nil fontified nil 1199 . 1200) (nil fontified nil 1192 . 1199) (nil fontified nil 1191 . 1192) (nil fontified nil 1176 . 1191) (nil fontified nil 1175 . 1176) (nil fontified nil 1168 . 1175) (nil fontified nil 1167 . 1168) (nil fontified nil 1124 . 1167) (nil fontified nil 1123 . 1124) (nil fontified nil 1122 . 1123) (nil fontified nil 1120 . 1122) (nil fontified nil 1119 . 1120) (nil fontified nil 1114 . 1119) (nil fontified nil 1113 . 1114) (nil fontified nil 1108 . 1113) (nil fontified nil 1103 . 1108) (nil fontified nil 1098 . 1103) (nil fontified nil 1097 . 1098) (nil fontified nil 1096 . 1097) (nil fontified nil 1064 . 1096) (nil fontified nil 1063 . 1064) (nil fontified nil 1058 . 1063) (nil fontified nil 1057 . 1058) (nil fontified nil 1054 . 1057) (nil fontified nil 1053 . 1054) (nil fontified nil 1009 . 1053) (nil fontified nil 1005 . 1009) (nil fontified nil 1004 . 1005) (nil fontified nil 1002 . 1004) (nil fontified nil 966 . 1002) (nil fontified nil 963 . 966) (nil fontified nil 961 . 963) (nil fontified nil 960 . 961) (nil fontified nil 953 . 960) (nil fontified nil 951 . 953) (nil fontified nil 950 . 951) (nil fontified nil 949 . 950) (nil fontified nil 902 . 949) (nil fontified nil 901 . 902) (nil fontified nil 900 . 901) (nil fontified nil 895 . 900) (nil fontified nil 893 . 895) (nil fontified nil 892 . 893) (nil fontified nil 877 . 892) (nil fontified nil 876 . 877) (nil fontified nil 865 . 876) (nil fontified nil 864 . 865) (864 . 1586)) nil (25300 10673 433309 0) 0 nil])
([nil nil ((1586 . 1587)) nil (25300 10673 433292 0) 0 nil])
([nil nil ((863 . 864)) nil (25300 10673 433291 0) 0 nil])
([nil nil ((864 . 870)) nil (25300 10673 433291 0) 0 nil])
([nil nil ((870 . 874)) nil (25300 10673 433290 0) 0 nil])
([nil nil ((874 . 878)) nil (25300 10673 433289 0) 0 nil])
([nil nil ((878 . 882)) nil (25300 10673 433289 0) 0 nil])
([nil nil ((882 . 883)) nil (25300 10673 433288 0) 0 nil])
([nil nil ((883 . 886)) nil (25300 10673 433287 0) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-comment-face fontified t)) . -883) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -884) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (#("b" 0 1 (face font-lock-comment-face fontified t)) . -885) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 886) nil (25300 10673 433286 0) 0 nil])
([nil nil ((883 . 890)) nil (25300 10673 433281 0) 0 nil])
([nil nil ((#("z" 0 1 (face font-lock-comment-face fontified t)) . -886) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -887) (undo-tree-id2 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -888) (undo-tree-id3 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -889) (undo-tree-id4 . -1) 890) nil (25300 10996 655504 0) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 862) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -1) (undo-tree-id75 . -2) 864 (#("tabnine::config" 0 9 (fontified t) 9 15 (fontified t)) . 864) (undo-tree-id76 . -15) (undo-tree-id77 . -15) 879 (879 . 880) (873 . 879) (#("c" 0 1 (fontified t)) . -873) (undo-tree-id78 . -1) (undo-tree-id79 . -1) 874 (871 . 874) (#("“" 0 1 (face font-lock-warning-face help-echo "Confusable character" fontified t)) . -871) (undo-tree-id80 . -1) (#("”" 0 1 (face font-lock-warning-face help-echo "Confusable character" fontified t)) . -872) (undo-tree-id81 . -1) 873 (#("”" 0 1 (face font-lock-warning-face help-echo "Confusable character" fontified nil)) . -872) (872 . 873) (871 . 873) (864 . 871) (#("tab" 0 3 (fontified t)) . -864) (undo-tree-id82 . -3) (undo-tree-id83 . -3) 867 (866 . 867) (#("v" 0 1 (fontified t)) . -866) (undo-tree-id84 . -1) (undo-tree-id85 . -1) 867 (864 . 867) (863 . 864) (886 . 890) (#("z" 0 1 (face font-lock-comment-face fontified t)) . -886) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -887) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("d" 0 1 (face font-lock-comment-face fontified t)) . -888) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("o" 0 1 (face font-lock-comment-face fontified t)) . -889) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -890) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("g" 0 1 (face font-lock-comment-face fontified t)) . -891) (undo-tree-id96 . -1) 892 (886 . 892)) nil (25300 11137 287863 0) 0 nil] [nil nil ((886 . 890)) ((#("自动补全" 0 4 (face font-lock-comment-face fontified t)) . 886) (t 25300 10673 438284 274000)) (25300 10673 433253 0) 0 nil])
([nil nil ((#("th" 0 2 (fontified nil)) . 857) (undo-tree-id68 . 2) (828 . 857) (#("company-tooltip-minimum-wid" 0 27 (fontified t)) . -828) (undo-tree-id69 . 1) (undo-tree-id70 . -27) (undo-tree-id71 . -27) 855) nil (25300 11137 287840 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 877 . 878) (nil fontified nil 872 . 878) (nil fontified nil 863 . 872) (863 . 878)) nil (25300 11137 287836 0) 0 nil])
([nil nil ((878 . 879)) nil (25300 11138 561301 0) 0 nil])
([nil nil ((#("tabnine::config" 0 9 (fontified t) 9 12 (fontified t) 12 13 (fontified t) 13 14 (fontified t) 14 15 (rear-nonsticky t fontified t)) . 863) (undo-tree-id395 . -15) (undo-tree-id396 . -12) (undo-tree-id397 . -15)) nil (25300 11604 217444 0) 0 nil] [nil nil ((#("f" 0 1 (fontified t)) . -875) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("i" 0 1 (fontified t)) . -876) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (#("g" 0 1 (rear-nonsticky t fontified t)) . -877) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 878) ((875 . 878)) (25300 11138 269887 0) 0 nil])
([nil nil ((586 . 591) (585 . 587) (t 25300 11604 223605 202000)) nil (25300 11856 744241 0) 0 nil])
([nil nil ((875 . 876)) ((#("f" 0 1 (fontified t)) . 875) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1)) (25300 11137 861796 0) 0 nil])
([nil nil ((591 . 592)) nil (25300 11856 744240 0) 0 nil])
([nil nil ((872 . 878) (#("conf" 0 4 (fontified t)) . -872) (undo-tree-id59 . -4) (undo-tree-id60 . -4) (undo-tree-id61 . -3) 876) ((872 . 876) (#("config" 0 6 (fontified t)) . 872) (undo-tree-id99 . -6) (undo-tree-id100 . -6) (undo-tree-id101 . -6) (undo-tree-id102 . -6) (undo-tree-id103 . -6) (undo-tree-id104 . -6) (undo-tree-id105 . -6) (undo-tree-id106 . -6) (undo-tree-id107 . -6) (undo-tree-id108 . -6) (undo-tree-id109 . -6) (undo-tree-id110 . -6) (undo-tree-id111 . -6) (undo-tree-id112 . -6) (undo-tree-id113 . -6) (undo-tree-id114 . -6) (undo-tree-id115 . -6) (undo-tree-id116 . -6) (undo-tree-id117 . -6) (undo-tree-id118 . -6) (undo-tree-id119 . -6) (undo-tree-id120 . -6) (undo-tree-id121 . -6) (undo-tree-id122 . -6) (undo-tree-id123 . -6) (undo-tree-id124 . -6) (undo-tree-id125 . -6) (undo-tree-id126 . -6) (undo-tree-id127 . -6) (undo-tree-id128 . -6) (undo-tree-id129 . -6) (undo-tree-id130 . -6) (undo-tree-id131 . -6) (undo-tree-id132 . -6) (undo-tree-id133 . -6) (undo-tree-id134 . -6) (undo-tree-id135 . -6) (undo-tree-id136 . -6) (undo-tree-id137 . -6) (undo-tree-id138 . -6) (undo-tree-id139 . -6) (undo-tree-id140 . -6) (undo-tree-id141 . -6) (undo-tree-id142 . -6) (undo-tree-id143 . -6) (undo-tree-id144 . -6) (undo-tree-id145 . -6) (undo-tree-id146 . -6) (undo-tree-id147 . -6) (undo-tree-id148 . -6) (undo-tree-id149 . -6) (undo-tree-id150 . -6) (undo-tree-id151 . -6) (undo-tree-id152 . -6) (undo-tree-id153 . -6) (undo-tree-id154 . -6) (undo-tree-id155 . -6) (undo-tree-id156 . -6) (undo-tree-id157 . -6) (undo-tree-id158 . -6) (undo-tree-id159 . -6) (undo-tree-id160 . -6) (undo-tree-id161 . -6) (undo-tree-id162 . -6) (undo-tree-id163 . -6) (undo-tree-id164 . -6) (undo-tree-id165 . -6) (undo-tree-id166 . -6) (undo-tree-id167 . -6) (undo-tree-id168 . -6) (undo-tree-id169 . -6) (undo-tree-id170 . -6) (undo-tree-id171 . -6) (undo-tree-id172 . -6) (undo-tree-id173 . -6) (undo-tree-id174 . -6) (undo-tree-id175 . -6) (undo-tree-id176 . -6) (undo-tree-id177 . -6) (undo-tree-id178 . -6) (undo-tree-id179 . -6) (undo-tree-id180 . -6) (undo-tree-id181 . -6) (undo-tree-id182 . -6) (undo-tree-id183 . -6) (undo-tree-id184 . -6) (undo-tree-id185 . -6) (undo-tree-id186 . -6) (undo-tree-id187 . -6) (undo-tree-id188 . -6) (undo-tree-id189 . -6) (undo-tree-id190 . -6) (undo-tree-id191 . -6) (undo-tree-id192 . -6) (undo-tree-id193 . -6) (undo-tree-id194 . -6) (undo-tree-id195 . -6) (undo-tree-id196 . -6) (undo-tree-id197 . -6) (undo-tree-id198 . -6) (undo-tree-id199 . -6) (undo-tree-id200 . -6) (undo-tree-id201 . -6) (undo-tree-id202 . -6) (undo-tree-id203 . -6) (undo-tree-id204 . -6) (undo-tree-id205 . -6) (undo-tree-id206 . -6) (undo-tree-id207 . -6) (undo-tree-id208 . -6) (undo-tree-id209 . -6) (undo-tree-id210 . -6) (undo-tree-id211 . -6) (undo-tree-id212 . -6) (undo-tree-id213 . -6) (undo-tree-id214 . -6) (undo-tree-id215 . -6) (undo-tree-id216 . -6) (undo-tree-id217 . -6) (undo-tree-id218 . -6) (undo-tree-id219 . -6) (undo-tree-id220 . -6) (undo-tree-id221 . -6) (undo-tree-id222 . -6) (undo-tree-id223 . -6) (undo-tree-id224 . -6) (undo-tree-id225 . -6) (undo-tree-id226 . -6) (undo-tree-id227 . -6) (undo-tree-id228 . -6) (undo-tree-id229 . -6) (undo-tree-id230 . -6) (undo-tree-id231 . -6) (undo-tree-id232 . -6) (undo-tree-id233 . -6) (undo-tree-id234 . -6) (undo-tree-id235 . -6) (undo-tree-id236 . -6) (undo-tree-id237 . -6) (undo-tree-id238 . -6) (undo-tree-id239 . -6) (undo-tree-id240 . -6) (undo-tree-id241 . -6) (undo-tree-id242 . -6) (undo-tree-id243 . -6) (undo-tree-id244 . -6) (undo-tree-id245 . -6) (undo-tree-id246 . -6) (undo-tree-id247 . -6) (undo-tree-id248 . -6) (undo-tree-id249 . -6) (undo-tree-id250 . -6) (undo-tree-id251 . -6) (undo-tree-id252 . -6) (undo-tree-id253 . -6) (undo-tree-id254 . -6) (undo-tree-id255 . -6) (undo-tree-id256 . -6) (undo-tree-id257 . -6) (undo-tree-id258 . -6) (undo-tree-id259 . -6) (undo-tree-id260 . -6) (undo-tree-id261 . -6) (undo-tree-id262 . -6) (undo-tree-id263 . -6) (undo-tree-id264 . -6) (undo-tree-id265 . -6) (undo-tree-id266 . -6) (undo-tree-id267 . -6) (undo-tree-id268 . -6) (undo-tree-id269 . -6) (undo-tree-id270 . -6) (undo-tree-id271 . -6) (undo-tree-id272 . -6) (undo-tree-id273 . -6) (undo-tree-id274 . -6) (undo-tree-id275 . -6) (undo-tree-id276 . -6)) (25300 11137 287912 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -591) (undo-tree-id36 . -1) 592) nil (25300 11856 744240 0) 0 nil])
([nil nil ((878 . 949)) ((#("Started config server at http://127.0.0.1:5555/sec-ttkowymwsrcrtbwzpcsz" 0 71 (fontified t)) . 878) (undo-tree-id97 . -71) (undo-tree-id98 . -71)) (25300 11137 287813 0) 0 nil])
([nil nil ((591 . 594)) nil (25300 11856 744238 0) 0 nil])
nil
([nil nil ((#(" " 0 1 (fontified t)) . 593) (undo-tree-id35 . -1) 594) nil (25300 11856 744238 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t)) . -586) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("e" 0 1 (fontified t)) . -587) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (#("q" 0 1 (fontified t)) . -588) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("u" 0 1 (fontified t)) . -589) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (#("i" 0 1 (fontified t)) . -590) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("r" 0 1 (fontified t)) . -591) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -592) (undo-tree-id33 . -1) (undo-tree-id34 . -1) 593) nil (25300 11856 744236 0) 0 nil])
([nil nil ((586 . 590)) nil (25300 11856 744228 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t)) . -589) (undo-tree-id20 . -1) 590) nil (25300 11856 744226 0) 0 nil])
([nil nil ((592 . 593) (589 . 593)) nil (25300 11856 744225 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -592) (undo-tree-id18 . -1) (undo-tree-id19 . -1) 593) nil (25300 11856 744224 0) 0 nil])
([nil nil ((#("[" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -591) (undo-tree-id11 . 1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("]" 0 1 (face (rainbow-delimiters-depth-2-face) fontified t)) . 592) (undo-tree-id16 . 1) (undo-tree-id17 . -1)) nil (25300 11856 744222 0) 0 nil])
([nil nil ((591 . 595)) nil (25300 11856 744218 0) 0 nil])
([nil nil ((586 . 597) (#("use-packa" 0 9 (fontified t)) . -586) (undo-tree-id9 . -9) (undo-tree-id10 . -9) 595) nil (25300 11856 744217 0) 0 nil])
([nil nil ((#("(use-package)" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (face (rainbow-delimiters-depth-1-face) fontified t)) . 585) (undo-tree-id0 . -13) (undo-tree-id1 . 13) (undo-tree-id2 . -1) (undo-tree-id3 . 1) (undo-tree-id4 . -13) (undo-tree-id5 . -1) (undo-tree-id6 . -13) (undo-tree-id7 . -13) (undo-tree-id8 . -13)) nil (25300 11856 744213 0) 0 nil])
([nil nil ((586 . 589) (585 . 587) (t 25300 11856 748046 567000)) nil (25300 12256 336715 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -586) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (#("s" 0 1 (fontified t)) . -587) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (#("e" 0 1 (fontified t)) . -588) (undo-tree-id162 . -1) (undo-tree-id163 . -1) 589) nil (25300 12256 336714 0) 0 nil])
([nil nil ((#("（" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -585) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . 1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("）" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 586) (undo-tree-id156 . 1) (undo-tree-id157 . -1)) nil (25300 12256 336710 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 584) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) 585) nil (25300 12256 336705 0) 0 nil])
([nil nil ((584 . 585)) nil (25300 12256 336698 0) 0 nil])
([nil nil ((585 . 587)) nil (25300 12256 336697 0) 0 nil])
([nil nil ((#("（" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -585) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . 1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (#("）" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 586) (undo-tree-id141 . 1) (undo-tree-id142 . -1)) nil (25300 12256 336697 0) 0 nil])
([nil nil ((586 . 592) (585 . 587)) nil (25300 12256 336692 0) 0 nil])
([nil nil ((586 . 597) (#("use-pa" 0 6 (fontified t)) . -586) (undo-tree-id133 . -6) (undo-tree-id134 . -6) 592) nil (25300 12256 336691 0) 0 nil])
([nil nil ((597 . 603)) nil (25300 12256 336689 0) 0 nil])
([nil nil ((#("a" 0 1 (face font-lock-constant-face fontified t)) . -602) (undo-tree-id131 . -1) (undo-tree-id132 . -1) 603) nil (25300 12256 336688 0) 0 nil])
([nil nil ((602 . 604)) nil (25300 12256 336686 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-constant-face fontified t)) . -598) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (#("o" 0 1 (face font-lock-constant-face fontified t)) . -599) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (#("m" 0 1 (face font-lock-constant-face fontified t)) . -600) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (#("p" 0 1 (face font-lock-constant-face fontified t)) . -601) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (#("a" 0 1 (face font-lock-constant-face fontified t)) . -602) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (#("n" 0 1 (face font-lock-constant-face fontified t)) . -603) (undo-tree-id129 . -1) (undo-tree-id130 . -1) 604) nil (25300 12256 336685 0) 0 nil])
([nil nil ((598 . 604)) nil (25300 12256 336678 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-constant-face fontified t)) . -603) (undo-tree-id118 . -1) 604) nil (25300 12256 336677 0) 0 nil])
([nil nil ((603 . 605)) nil (25300 12256 336676 0) 0 nil])
([nil nil ((605 . 609)) nil (25300 12256 336675 0) 0 nil])
([nil nil ((#("m" 0 1 (face font-lock-constant-face fontified t)) . -608) (undo-tree-id116 . -1) (undo-tree-id117 . -1) 609) nil (25300 12256 336675 0) 0 nil])
([nil nil ((608 . 609)) nil (25300 12256 336673 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-constant-face fontified t)) . -606) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (#("o" 0 1 (face font-lock-constant-face fontified t)) . -607) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (#("n" 0 1 (face font-lock-constant-face fontified t)) . -608) (undo-tree-id114 . -1) (undo-tree-id115 . -1) 609) nil (25300 12256 336672 0) 0 nil])
([nil nil ((606 . 609)) nil (25300 12256 336668 0) 0 nil])
([nil nil ((609 . 613)) nil (25300 12256 336667 0) 0 nil])
([nil nil ((#("e" 0 1 (face font-lock-constant-face fontified t)) . -612) (undo-tree-id108 . -1) (undo-tree-id109 . -1) 613) nil (25300 12256 336666 0) 0 nil])
([nil nil ((612 . 613)) nil (25300 12256 336665 0) 0 nil])
([nil nil ((598 . 614) (#("company-tabnine" 0 15 (face font-lock-constant-face fontified t)) . -598) (undo-tree-id106 . -15) (undo-tree-id107 . -15) 613) nil (25300 12256 336664 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-constant-face fontified t)) . -613) (undo-tree-id104 . -1) (undo-tree-id105 . -1) 614) nil (25300 12256 336662 0) 0 nil])
([nil nil ((598 . 614) (#("company-tabnine" 0 15 (face font-lock-constant-face fontified t)) . -598) (undo-tree-id102 . -15) (undo-tree-id103 . -15) 613) nil (25300 12256 336660 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-constant-face fontified t)) . -613) (undo-tree-id100 . -1) (undo-tree-id101 . -1) 614) nil (25300 12256 336658 0) 0 nil])
([nil nil ((613 . 614)) nil (25300 12256 336656 0) 0 nil])
([nil nil ((#("t" 0 1 (face font-lock-constant-face fontified t)) . -606) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (#("a" 0 1 (face font-lock-constant-face fontified t)) . -607) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (#("b" 0 1 (face font-lock-constant-face fontified t)) . -608) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (#("n" 0 1 (face font-lock-constant-face fontified t)) . -609) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (#("i" 0 1 (face font-lock-constant-face fontified t)) . -610) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (#("n" 0 1 (face font-lock-constant-face fontified t)) . -611) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (#("e" 0 1 (face font-lock-constant-face fontified t)) . -612) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (#("-" 0 1 (face font-lock-constant-face fontified t)) . -613) (undo-tree-id98 . -1) (undo-tree-id99 . -1) 614) nil (25300 12256 336654 0) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-constant-face fontified t)) . -598) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (#("o" 0 1 (face font-lock-constant-face fontified t)) . -599) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (#("m" 0 1 (face font-lock-constant-face fontified t)) . -600) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("p" 0 1 (face font-lock-constant-face fontified t)) . -601) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (#("a" 0 1 (face font-lock-constant-face fontified t)) . -602) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (#("n" 0 1 (face font-lock-constant-face fontified t)) . -603) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (#("y" 0 1 (face font-lock-constant-face fontified t)) . -604) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (#("-" 0 1 (face font-lock-constant-face fontified t)) . -605) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 606) nil (25300 12256 336641 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 597) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 598) nil (25300 12256 336631 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -586) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (#("s" 0 1 (fontified t)) . -587) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (#("e" 0 1 (fontified t)) . -588) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (#("-" 0 1 (fontified t)) . -589) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (#("p" 0 1 (fontified t)) . -590) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (#("a" 0 1 (fontified t)) . -591) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (#("c" 0 1 (fontified t)) . -592) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (#("k" 0 1 (fontified t)) . -593) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (#("a" 0 1 (fontified t)) . -594) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (#("g" 0 1 (fontified t)) . -595) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (#("e" 0 1 (face font-lock-keyword-face fontified t)) . -596) (undo-tree-id64 . -1) (undo-tree-id65 . -1) 597) nil (25300 12256 336627 0) 0 nil])
([nil nil ((#("(" 0 1 (face (rainbow-delimiters-depth-1-face) fontified nil)) . -585) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . 1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (#(")" 0 1 (face (rainbow-delimiters-depth-1-face) fontified t)) . 586) (undo-tree-id42 . 1) (undo-tree-id43 . -1)) nil (25300 12256 336610 0) 0 nil])
([nil nil ((586 . 589) (585 . 587) (t 25300 12256 342278 905000)) nil (25300 12442 713022 0) 0 nil])
([nil nil ((#("w" 0 1 (fontified t)) . -588) (undo-tree-id80 . -1) (undo-tree-id81 . -1) 589) nil (25300 12442 713021 0) 0 nil])
([nil nil ((588 . 593)) nil (25300 12442 713019 0) 0 nil])
([nil nil ((593 . 600)) nil (25300 12442 713018 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t face font-lock-constant-face)) . -599) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) 600) nil (25300 12442 713017 0) 0 nil])
([nil nil ((599 . 600)) nil (25300 12442 713014 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t face font-lock-constant-face)) . -598) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (#("-" 0 1 (fontified t face font-lock-constant-face)) . -599) (undo-tree-id74 . -1) (undo-tree-id75 . -1) 600) nil (25300 12442 713012 0) 0 nil])
([nil nil ((598 . 599)) nil (25300 12442 713007 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face font-lock-constant-face)) . -598) (undo-tree-id68 . -1) (undo-tree-id69 . -1) 599) nil (25300 12442 713006 0) 0 nil])
([nil nil ((598 . 600)) nil (25300 12442 713004 0) 0 nil])
([nil nil ((#("p" 0 1 (fontified t face font-lock-constant-face)) . -599) (undo-tree-id66 . -1) (undo-tree-id67 . -1) 600) nil (25300 12442 713003 0) 0 nil])
([nil nil ((599 . 600)) nil (25300 12442 713001 0) 0 nil])
([nil nil ((#("'" 0 1 (fontified t)) . -594) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (#("i" 0 1 (fontified t face font-lock-constant-face)) . -595) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (#("n" 0 1 (fontified t face font-lock-constant-face)) . -596) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (#("i" 0 1 (fontified t face font-lock-constant-face)) . -597) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (#("t" 0 1 (fontified t face font-lock-constant-face)) . -598) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (#("-" 0 1 (fontified t face font-lock-constant-face)) . -599) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -600) (undo-tree-id63 . -1) (undo-tree-id64 . 1) (undo-tree-id65 . -1) 601) nil (25300 12442 712999 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 593) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) 594) nil (25300 12442 712980 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -585) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . 1) (undo-tree-id10 . -1) (#("r" 0 1 (fontified t)) . -586) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("e" 0 1 (fontified t)) . -587) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("q" 0 1 (fontified t)) . -588) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (#("u" 0 1 (fontified t)) . -589) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (#("i" 0 1 (fontified t)) . -590) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (#("r" 0 1 (fontified t)) . -591) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (#("e" 0 1 (fontified t face font-lock-keyword-face)) . -592) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) 593) nil (25300 12442 712975 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 584) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 585) nil (25300 12442 712950 0) 0 nil])
([nil nil ((584 . 585)) nil (25300 12442 712922 0) 0 nil])
([nil nil ((#(";; company-tabnine AI 自动补全
(use-package company-tabnine
  :init (add-to-list 'company-backends #'company-tabnine)
  :config
  ;; workaround for company-transformers
  (setq company-tabnine--disable-next-transform nil)
  (defun my-company--transform-candidates (func &rest args)
    (if (not company-tabnine--disable-next-transform)
      (apply func args)
      (setq company-tabnine--disable-next-transform nil)
      (car args)))

  (defun my-company-tabnine (func &rest args)
    (when (eq (car args) 'candidates)
      (setq company-tabnine--disable-next-transform t))
    (apply func args))

  (advice-add #'company--transform-candidates :around #'my-company--transform-candidates)
  (advice-add #'company-tabnine :around #'my-company-tabnine))" 0 3 (fontified t face font-lock-comment-delimiter-face) 3 27 (fontified t face font-lock-comment-face) 27 28 (fontified t face (rainbow-delimiters-depth-1-face)) 28 39 (fontified t face font-lock-keyword-face) 39 40 (fontified t) 40 55 (fontified t face font-lock-constant-face) 55 58 (fontified t) 58 63 (fontified t face font-lock-builtin-face) 63 64 (fontified t) 64 65 (fontified t face (rainbow-delimiters-depth-2-face)) 65 112 (fontified t) 112 113 (fontified t face (rainbow-delimiters-depth-2-face)) 113 116 (fontified t) 116 123 (fontified t face font-lock-builtin-face) 123 126 (fontified t) 126 129 (fontified t face font-lock-comment-delimiter-face) 129 165 (fontified t face font-lock-comment-face) 165 167 (fontified t) 167 168 (fontified t face (rainbow-delimiters-depth-2-face)) 168 172 (fontified t face font-lock-keyword-face) 172 216 (fontified t) 216 217 (fontified t face (rainbow-delimiters-depth-2-face)) 217 220 (fontified t) 220 221 (fontified t face (rainbow-delimiters-depth-2-face)) 221 226 (fontified t face font-lock-keyword-face) 226 227 (fontified t) 227 259 (fontified t face font-lock-function-name-face) 259 260 (fontified t) 260 261 (fontified t face (rainbow-delimiters-depth-3-face)) 261 266 (fontified t) 266 271 (fontified t face font-lock-type-face) 271 276 (fontified t) 276 277 (fontified t face (rainbow-delimiters-depth-3-face)) 277 282 (fontified t) 282 283 (fontified t face (rainbow-delimiters-depth-3-face)) 283 285 (fontified t face font-lock-keyword-face) 285 286 (fontified t) 286 287 (fontified t face (rainbow-delimiters-depth-4-face)) 287 330 (fontified t) 330 331 (fontified t face (rainbow-delimiters-depth-4-face)) 331 338 (fontified t) 338 339 (fontified t face (rainbow-delimiters-depth-4-face)) 339 354 (fontified t) 354 355 (fontified t face (rainbow-delimiters-depth-4-face)) 355 362 (fontified t) 362 363 (fontified t face (rainbow-delimiters-depth-4-face)) 363 367 (fontified t face font-lock-keyword-face) 367 411 (fontified t) 411 412 (fontified t face (rainbow-delimiters-depth-4-face)) 412 419 (fontified t) 419 420 (fontified t face (rainbow-delimiters-depth-4-face)) 420 428 (fontified t) 428 429 (fontified t face (rainbow-delimiters-depth-4-face)) 429 430 (fontified t face (rainbow-delimiters-depth-3-face)) 430 431 (fontified t face (rainbow-delimiters-depth-2-face)) 431 435 (fontified t) 435 436 (fontified t face (rainbow-delimiters-depth-2-face)) 436 441 (fontified t face font-lock-keyword-face) 441 442 (fontified t) 442 460 (fontified t face font-lock-function-name-face) 460 461 (fontified t) 461 462 (fontified t face (rainbow-delimiters-depth-3-face)) 462 467 (fontified t) 467 472 (fontified t face font-lock-type-face) 472 477 (fontified t) 477 478 (fontified t face (rainbow-delimiters-depth-3-face)) 478 483 (fontified t) 483 484 (fontified t face (rainbow-delimiters-depth-3-face)) 484 488 (fontified t face font-lock-keyword-face) 488 489 (fontified t) 489 490 (fontified t face (rainbow-delimiters-depth-4-face)) 490 493 (fontified t) 493 494 (fontified t face (rainbow-delimiters-depth-5-face)) 494 502 (fontified t) 502 503 (fontified t face (rainbow-delimiters-depth-5-face)) 503 515 (fontified t) 515 516 (fontified t face (rainbow-delimiters-depth-4-face)) 516 523 (fontified t) 523 524 (fontified t face (rainbow-delimiters-depth-4-face)) 524 528 (fontified t face font-lock-keyword-face) 528 570 (fontified t) 570 571 (fontified t face (rainbow-delimiters-depth-4-face)) 571 572 (fontified t face (rainbow-delimiters-depth-3-face)) 572 577 (fontified t) 577 578 (fontified t face (rainbow-delimiters-depth-3-face)) 578 593 (fontified t) 593 594 (fontified t face (rainbow-delimiters-depth-3-face)) 594 595 (fontified t face (rainbow-delimiters-depth-2-face)) 595 599 (fontified t) 599 600 (fontified t face (rainbow-delimiters-depth-2-face)) 600 636 (fontified t) 636 643 (fontified t) 643 650 (fontified t face font-lock-builtin-face) 650 685 (fontified t) 685 686 (fontified t face (rainbow-delimiters-depth-2-face)) 686 687 (fontified t) 687 689 (fontified t) 689 690 (fontified t face (rainbow-delimiters-depth-2-face)) 690 719 (fontified t) 719 726 (fontified t face font-lock-builtin-face) 726 747 (fontified t) 747 748 (fontified t face (rainbow-delimiters-depth-2-face)) 748 749 (fontified t face (rainbow-delimiters-depth-1-face))) . 865) (undo-tree-id9 . -27) (undo-tree-id10 . -749) (undo-tree-id11 . -65) (undo-tree-id12 . 683) (undo-tree-id13 . -65) (undo-tree-id14 . -65) (undo-tree-id15 . -749) (undo-tree-id16 . -749) (undo-tree-id17 . -749) (undo-tree-id18 . -749) (t 25300 12442 718143 337000)) nil (25300 12643 620673 0) 0 nil])
([nil nil ((#("


" 0 3 (fontified t)) . 862) (undo-tree-id0 . -3) (undo-tree-id1 . -3) (undo-tree-id2 . -3) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . -3) (undo-tree-id6 . -3) (undo-tree-id7 . -3) (undo-tree-id8 . -3) 865) nil (25300 12644 472443 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t face (rainbow-delimiters-depth-1-face))) . -557) (undo-tree-id261 . -1) (undo-tree-id262 . 1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) 558) nil (25300 12654 775865 0) 0 nil] [nil nil ((557 . 560)) ((#("
  " 0 1 (fontified t) 1 3 (fontified t)) . 557) (undo-tree-id24 . -3) (undo-tree-id25 . -1) (undo-tree-id26 . -3) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -3) (undo-tree-id30 . -3) (undo-tree-id31 . -3) (undo-tree-id32 . -3) (undo-tree-id33 . -3) (undo-tree-id34 . -3) (undo-tree-id35 . -3) (undo-tree-id36 . -3) (undo-tree-id37 . -3) (undo-tree-id38 . -3) (undo-tree-id39 . -3) (undo-tree-id40 . -3) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -3) (undo-tree-id44 . -3) (undo-tree-id45 . -3) (undo-tree-id46 . -3) (undo-tree-id47 . -3) (undo-tree-id48 . -3) (undo-tree-id49 . -3) (undo-tree-id50 . -3) (undo-tree-id51 . -3) (undo-tree-id52 . -3) (undo-tree-id53 . -3) (undo-tree-id54 . -3) (undo-tree-id55 . -3) (undo-tree-id56 . -3) (undo-tree-id57 . -3) (undo-tree-id58 . -3) (undo-tree-id59 . -3) (undo-tree-id60 . -3) (undo-tree-id61 . -3) (undo-tree-id62 . -3) (undo-tree-id63 . -3) (undo-tree-id64 . -3) (undo-tree-id65 . -3) (undo-tree-id66 . -3) (undo-tree-id67 . -3) (undo-tree-id68 . -3) (undo-tree-id69 . -3) (undo-tree-id70 . -3) (undo-tree-id71 . -3) (undo-tree-id72 . -3) (undo-tree-id73 . -3) (undo-tree-id74 . -3) (undo-tree-id75 . -3) (undo-tree-id76 . -3) (undo-tree-id77 . -3) (undo-tree-id78 . -3) (undo-tree-id79 . -3) (undo-tree-id80 . -3) (undo-tree-id81 . -3) (undo-tree-id82 . -3) (undo-tree-id83 . -3) (undo-tree-id84 . -3) (undo-tree-id85 . -3) (undo-tree-id86 . -3) (undo-tree-id87 . -3) (undo-tree-id88 . -3) (undo-tree-id89 . -3) (undo-tree-id90 . -3) (undo-tree-id91 . -3) (undo-tree-id92 . -3) (undo-tree-id93 . -3) (undo-tree-id94 . -3) (undo-tree-id95 . -3) (undo-tree-id96 . -3) (undo-tree-id97 . -3) (undo-tree-id98 . -3) (undo-tree-id99 . -3) (undo-tree-id100 . -3) (undo-tree-id101 . -3) (undo-tree-id102 . -3) (undo-tree-id103 . -3) (undo-tree-id104 . -3) (undo-tree-id105 . -3) (undo-tree-id106 . -3) (undo-tree-id107 . -3) (undo-tree-id108 . -3) (undo-tree-id109 . -3) (undo-tree-id110 . -3) (undo-tree-id111 . -3) (undo-tree-id112 . -3) (undo-tree-id113 . -3) (undo-tree-id114 . -3) (undo-tree-id115 . -3) (undo-tree-id116 . -3) (undo-tree-id117 . -3) (undo-tree-id118 . -3) (undo-tree-id119 . -3) (undo-tree-id120 . -3) (undo-tree-id121 . -3) (undo-tree-id122 . -3) (undo-tree-id123 . -3) (undo-tree-id124 . -3) (undo-tree-id125 . -3) (undo-tree-id126 . -3) (undo-tree-id127 . -3) (undo-tree-id128 . -3) (undo-tree-id129 . -3) (undo-tree-id130 . -3) (undo-tree-id131 . -3) (undo-tree-id132 . -3) (undo-tree-id133 . -3) (undo-tree-id134 . -3) (undo-tree-id135 . -3) (undo-tree-id136 . -3) (undo-tree-id137 . -3) (undo-tree-id138 . -3) (undo-tree-id139 . -3) (undo-tree-id140 . -3) (undo-tree-id141 . -3) (undo-tree-id142 . -3) (undo-tree-id143 . -3) (undo-tree-id144 . -3) (undo-tree-id145 . -3) (undo-tree-id146 . -3) (undo-tree-id147 . -3) (undo-tree-id148 . -3) (undo-tree-id149 . -3) (undo-tree-id150 . -3) (undo-tree-id151 . -3) (undo-tree-id152 . -3) (undo-tree-id153 . -3) (undo-tree-id154 . -3) (undo-tree-id155 . -3) (undo-tree-id156 . -3) (undo-tree-id157 . -3) (undo-tree-id158 . -3) (undo-tree-id159 . -3) (undo-tree-id160 . -3) (undo-tree-id161 . -3) (undo-tree-id162 . -3) (undo-tree-id163 . -3) (undo-tree-id164 . -3) (undo-tree-id165 . -3) (undo-tree-id166 . -3) (undo-tree-id167 . -3) (undo-tree-id168 . -3) (undo-tree-id169 . -3) (undo-tree-id170 . -3) (undo-tree-id171 . -3) (undo-tree-id172 . -3) (undo-tree-id173 . -3) (undo-tree-id174 . -3) (undo-tree-id175 . -3) (undo-tree-id176 . -3) (undo-tree-id177 . -3) (undo-tree-id178 . -3) (undo-tree-id179 . -3) (undo-tree-id180 . -3) (undo-tree-id181 . -3) (undo-tree-id182 . -3) (undo-tree-id183 . -3) (undo-tree-id184 . -3) (undo-tree-id185 . -3) (undo-tree-id186 . -3) (undo-tree-id187 . -3) (undo-tree-id188 . -3) (undo-tree-id189 . -3) (undo-tree-id190 . -3) (undo-tree-id191 . -3) (undo-tree-id192 . -3) (undo-tree-id193 . -3) (undo-tree-id194 . -3) (undo-tree-id195 . -3) (undo-tree-id196 . -3) (undo-tree-id197 . -3) (undo-tree-id198 . -3) (undo-tree-id199 . -3) (undo-tree-id200 . -3) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . -3) (undo-tree-id206 . -3) (undo-tree-id207 . -3) (undo-tree-id208 . -3) (undo-tree-id209 . -3) (undo-tree-id210 . -3) (undo-tree-id211 . -3) (undo-tree-id212 . -3) (undo-tree-id213 . -3) (undo-tree-id214 . -3) (undo-tree-id215 . -3) (undo-tree-id216 . -3) (undo-tree-id217 . -3) (undo-tree-id218 . -3) (undo-tree-id219 . -3) (undo-tree-id220 . -3) (undo-tree-id221 . -3) (undo-tree-id222 . -3) (undo-tree-id223 . -3) (undo-tree-id224 . -3) (undo-tree-id225 . -3) (undo-tree-id226 . -3) (undo-tree-id227 . -3) (undo-tree-id228 . -3) (undo-tree-id229 . -3) (undo-tree-id230 . -3) (undo-tree-id231 . -3) (undo-tree-id232 . -3) (undo-tree-id233 . -3) (undo-tree-id234 . -3) (undo-tree-id235 . -3) (undo-tree-id236 . -3) (undo-tree-id237 . -3) (undo-tree-id238 . -3) (undo-tree-id239 . -3) (undo-tree-id240 . -3) (undo-tree-id241 . -3) (undo-tree-id242 . -3) (undo-tree-id243 . -3) (undo-tree-id244 . -3) (undo-tree-id245 . -3) (undo-tree-id246 . -3) (undo-tree-id247 . -3) (undo-tree-id248 . -3) (undo-tree-id249 . -3) (undo-tree-id250 . -3) (undo-tree-id251 . -3) (undo-tree-id252 . -3) (undo-tree-id253 . -3) (undo-tree-id254 . -3) (undo-tree-id255 . -3) (undo-tree-id256 . -3) (undo-tree-id257 . -3) (undo-tree-id258 . -3) (undo-tree-id259 . -3) (undo-tree-id260 . -3)) (25300 12643 620934 0) 0 nil])
([nil nil ((583 . 586)) nil (25300 12654 775856 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1308 . 1309) (nil fontified nil 1308 . 1309) (nil fontified nil 1307 . 1308) (nil fontified nil 1286 . 1307) (nil fontified nil 1279 . 1286) (nil fontified nil 1250 . 1279) (nil fontified nil 1249 . 1250) (nil fontified nil 1247 . 1249) (nil fontified nil 1246 . 1247) (nil fontified nil 1245 . 1246) (nil fontified nil 1210 . 1245) (nil fontified nil 1203 . 1210) (nil fontified nil 1196 . 1203) (nil fontified nil 1160 . 1196) (nil fontified nil 1159 . 1160) (nil fontified nil 1155 . 1159) (nil fontified nil 1154 . 1155) (nil fontified nil 1153 . 1154) (nil fontified nil 1138 . 1153) (nil fontified nil 1137 . 1138) (nil fontified nil 1132 . 1137) (nil fontified nil 1131 . 1132) (nil fontified nil 1130 . 1131) (nil fontified nil 1088 . 1130) (nil fontified nil 1084 . 1088) (nil fontified nil 1083 . 1084) (nil fontified nil 1076 . 1083) (nil fontified nil 1075 . 1076) (nil fontified nil 1063 . 1075) (nil fontified nil 1062 . 1063) (nil fontified nil 1054 . 1062) (nil fontified nil 1053 . 1054) (nil fontified nil 1050 . 1053) (nil fontified nil 1049 . 1050) (nil fontified nil 1048 . 1049) (nil fontified nil 1044 . 1048) (nil fontified nil 1043 . 1044) (nil fontified nil 1038 . 1043) (nil fontified nil 1037 . 1038) (nil fontified nil 1032 . 1037) (nil fontified nil 1027 . 1032) (nil fontified nil 1022 . 1027) (nil fontified nil 1021 . 1022) (nil fontified nil 1020 . 1021) (nil fontified nil 1002 . 1020) (nil fontified nil 1001 . 1002) (nil fontified nil 996 . 1001) (nil fontified nil 995 . 996) (nil fontified nil 991 . 995) (nil fontified nil 990 . 991) (nil fontified nil 989 . 990) (nil fontified nil 988 . 989) (nil fontified nil 980 . 988) (nil fontified nil 979 . 980) (nil fontified nil 972 . 979) (nil fontified nil 971 . 972) (nil fontified nil 927 . 971) (nil fontified nil 923 . 927) (nil fontified nil 922 . 923) (nil fontified nil 915 . 922) (nil fontified nil 914 . 915) (nil fontified nil 899 . 914) (nil fontified nil 898 . 899) (nil fontified nil 891 . 898) (nil fontified nil 890 . 891) (nil fontified nil 847 . 890) (nil fontified nil 846 . 847) (nil fontified nil 845 . 846) (nil fontified nil 843 . 845) (nil fontified nil 842 . 843) (nil fontified nil 837 . 842) (nil fontified nil 836 . 837) (nil fontified nil 831 . 836) (nil fontified nil 826 . 831) (nil fontified nil 821 . 826) (nil fontified nil 820 . 821) (nil fontified nil 819 . 820) (nil fontified nil 787 . 819) (nil fontified nil 786 . 787) (nil fontified nil 781 . 786) (nil fontified nil 780 . 781) (nil fontified nil 777 . 780) (nil fontified nil 776 . 777) (nil fontified nil 732 . 776) (nil fontified nil 728 . 732) (nil fontified nil 727 . 728) (nil fontified nil 725 . 727) (nil fontified nil 689 . 725) (nil fontified nil 686 . 689) (nil fontified nil 683 . 686) (nil fontified nil 676 . 683) (nil fontified nil 673 . 676) (nil fontified nil 672 . 673) (nil fontified nil 625 . 672) (nil fontified nil 624 . 625) (nil fontified nil 623 . 624) (nil fontified nil 618 . 623) (nil fontified nil 615 . 618) (nil fontified nil 600 . 615) (nil fontified nil 599 . 600) (nil fontified nil 588 . 599) (nil fontified nil 587 . 588) (nil fontified nil 563 . 587) (nil fontified nil 560 . 563) (560 . 1309)) ((#(";; company-tabnine AI 自动补全
(use-package company-tabnine
  :init (add-to-list 'company-backends #'company-tabnine)
  :config
  ;; workaround for company-transformers
  (setq company-tabnine--disable-next-transform nil)
  (defun my-company--transform-candidates (func &rest args)
    (if (not company-tabnine--disable-next-transform)
      (apply func args)
      (setq company-tabnine--disable-next-transform nil)
      (car args)))

  (defun my-company-tabnine (func &rest args)
    (when (eq (car args) 'candidates)
      (setq company-tabnine--disable-next-transform t))
    (apply func args))

  (advice-add #'company--transform-candidates :around #'my-company--transform-candidates)
  (advice-add #'company-tabnine :around #'my-company-tabnine))" 0 3 (fontified nil face font-lock-comment-delimiter-face) 3 27 (fontified nil face font-lock-comment-face) 27 28 (fontified nil face (rainbow-delimiters-depth-2-face)) 28 39 (fontified nil face font-lock-keyword-face) 39 40 (fontified nil) 40 55 (fontified nil face font-lock-constant-face) 55 56 (fontified nil) 56 58 (fontified nil) 58 63 (fontified nil face font-lock-builtin-face) 63 64 (fontified nil) 64 65 (fontified nil face (rainbow-delimiters-depth-3-face)) 65 112 (fontified nil) 112 113 (fontified nil face (rainbow-delimiters-depth-3-face)) 113 114 (fontified nil) 114 116 (fontified nil) 116 123 (fontified nil face font-lock-builtin-face) 123 124 (fontified nil) 124 126 (fontified nil) 126 129 (fontified nil face font-lock-comment-delimiter-face) 129 165 (fontified nil face font-lock-comment-face) 165 167 (fontified nil) 167 168 (fontified nil face (rainbow-delimiters-depth-3-face)) 168 172 (fontified nil face font-lock-keyword-face) 172 216 (fontified nil) 216 217 (fontified nil face (rainbow-delimiters-depth-3-face)) 217 218 (fontified nil) 218 220 (fontified nil) 220 221 (fontified nil face (rainbow-delimiters-depth-3-face)) 221 226 (fontified nil face font-lock-keyword-face) 226 227 (fontified nil) 227 259 (fontified nil face font-lock-function-name-face) 259 260 (fontified nil) 260 261 (fontified nil face (rainbow-delimiters-depth-4-face)) 261 266 (fontified nil) 266 271 (fontified nil face font-lock-type-face) 271 276 (fontified nil) 276 277 (fontified nil face (rainbow-delimiters-depth-4-face)) 277 278 (fontified nil) 278 282 (fontified nil) 282 283 (fontified nil face (rainbow-delimiters-depth-4-face)) 283 285 (fontified nil face font-lock-keyword-face) 285 286 (fontified nil) 286 287 (fontified nil face (rainbow-delimiters-depth-5-face)) 287 330 (fontified nil) 330 331 (fontified nil face (rainbow-delimiters-depth-5-face)) 331 332 (fontified nil) 332 338 (fontified nil) 338 339 (fontified nil face (rainbow-delimiters-depth-5-face)) 339 354 (fontified nil) 354 355 (fontified nil face (rainbow-delimiters-depth-5-face)) 355 356 (fontified nil) 356 362 (fontified nil) 362 363 (fontified nil face (rainbow-delimiters-depth-5-face)) 363 367 (fontified nil face font-lock-keyword-face) 367 411 (fontified nil) 411 412 (fontified nil face (rainbow-delimiters-depth-5-face)) 412 413 (fontified nil) 413 419 (fontified nil) 419 420 (fontified nil face (rainbow-delimiters-depth-5-face)) 420 428 (fontified nil) 428 429 (fontified nil face (rainbow-delimiters-depth-5-face)) 429 430 (fontified nil face (rainbow-delimiters-depth-4-face)) 430 431 (fontified nil face (rainbow-delimiters-depth-3-face)) 431 433 (fontified nil) 433 435 (fontified nil) 435 436 (fontified nil face (rainbow-delimiters-depth-3-face)) 436 441 (fontified nil face font-lock-keyword-face) 441 442 (fontified nil) 442 460 (fontified nil face font-lock-function-name-face) 460 461 (fontified nil) 461 462 (fontified nil face (rainbow-delimiters-depth-4-face)) 462 467 (fontified nil) 467 472 (fontified nil face font-lock-type-face) 472 477 (fontified nil) 477 478 (fontified nil face (rainbow-delimiters-depth-4-face)) 478 479 (fontified nil) 479 483 (fontified nil) 483 484 (fontified nil face (rainbow-delimiters-depth-4-face)) 484 488 (fontified nil face font-lock-keyword-face) 488 489 (fontified nil) 489 490 (fontified nil face (rainbow-delimiters-depth-5-face)) 490 493 (fontified nil) 493 494 (fontified nil face (rainbow-delimiters-depth-6-face)) 494 502 (fontified nil) 502 503 (fontified nil face (rainbow-delimiters-depth-6-face)) 503 515 (fontified nil) 515 516 (fontified nil face (rainbow-delimiters-depth-5-face)) 516 517 (fontified nil) 517 523 (fontified nil) 523 524 (fontified nil face (rainbow-delimiters-depth-5-face)) 524 528 (fontified nil face font-lock-keyword-face) 528 570 (fontified nil) 570 571 (fontified nil face (rainbow-delimiters-depth-5-face)) 571 572 (fontified nil face (rainbow-delimiters-depth-4-face)) 572 573 (fontified nil) 573 577 (fontified nil) 577 578 (fontified nil face (rainbow-delimiters-depth-4-face)) 578 593 (fontified nil) 593 594 (fontified nil face (rainbow-delimiters-depth-4-face)) 594 595 (fontified nil face (rainbow-delimiters-depth-3-face)) 595 597 (fontified nil) 597 599 (fontified nil) 599 600 (fontified nil face (rainbow-delimiters-depth-3-face)) 600 636 (fontified nil) 636 643 (fontified nil) 643 650 (fontified nil face font-lock-builtin-face) 650 685 (fontified nil) 685 686 (fontified nil face (rainbow-delimiters-depth-3-face)) 686 687 (fontified nil) 687 689 (fontified nil) 689 690 (fontified nil face (rainbow-delimiters-depth-3-face)) 690 719 (fontified nil) 719 726 (fontified nil face font-lock-builtin-face) 726 747 (fontified nil) 747 748 (fontified nil face (rainbow-delimiters-depth-3-face)) 748 749 (fontified nil rear-nonsticky nil face (rainbow-delimiters-depth-2-face))) . 560) (undo-tree-id19 . -749) (undo-tree-id20 . -278) (undo-tree-id21 . -687) (undo-tree-id22 . -687) (undo-tree-id23 . -749) (nil fontified t 563 . 587) (nil fontified t 615 . 616) (nil fontified t 673 . 674) (nil fontified t 683 . 684) (nil fontified t 689 . 725) (nil fontified t 777 . 778) (nil fontified t 837 . 838) (nil fontified t 891 . 892) (nil fontified t 915 . 916) (nil fontified t 972 . 973) (nil fontified t 991 . 993) (nil fontified t 1038 . 1039) (nil fontified t 1076 . 1077) (nil fontified t 1132 . 1133) (nil fontified t 1155 . 1157) (nil fontified t 1246 . 1247) (nil rear-nonsticky t 1308 . 1309)) (25300 12643 620638 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1334 . 1335) (nil fontified nil 1334 . 1335) (nil fontified nil 1333 . 1334) (nil fontified nil 1312 . 1333) (nil fontified nil 1305 . 1312) (nil fontified nil 1276 . 1305) (nil fontified nil 1275 . 1276) (nil fontified nil 1273 . 1275) (nil fontified nil 1272 . 1273) (nil fontified nil 1271 . 1272) (nil fontified nil 1236 . 1271) (nil fontified nil 1229 . 1236) (nil fontified nil 1222 . 1229) (nil fontified nil 1186 . 1222) (nil fontified nil 1185 . 1186) (nil fontified nil 1181 . 1185) (nil fontified nil 1180 . 1181) (nil fontified nil 1179 . 1180) (nil fontified nil 1164 . 1179) (nil fontified nil 1163 . 1164) (nil fontified nil 1158 . 1163) (nil fontified nil 1157 . 1158) (nil fontified nil 1156 . 1157) (nil fontified nil 1114 . 1156) (nil fontified nil 1110 . 1114) (nil fontified nil 1109 . 1110) (nil fontified nil 1102 . 1109) (nil fontified nil 1101 . 1102) (nil fontified nil 1089 . 1101) (nil fontified nil 1088 . 1089) (nil fontified nil 1080 . 1088) (nil fontified nil 1079 . 1080) (nil fontified nil 1076 . 1079) (nil fontified nil 1075 . 1076) (nil fontified nil 1074 . 1075) (nil fontified nil 1070 . 1074) (nil fontified nil 1069 . 1070) (nil fontified nil 1064 . 1069) (nil fontified nil 1063 . 1064) (nil fontified nil 1058 . 1063) (nil fontified nil 1053 . 1058) (nil fontified nil 1048 . 1053) (nil fontified nil 1047 . 1048) (nil fontified nil 1046 . 1047) (nil fontified nil 1028 . 1046) (nil fontified nil 1027 . 1028) (nil fontified nil 1022 . 1027) (nil fontified nil 1021 . 1022) (nil fontified nil 1017 . 1021) (nil fontified nil 1016 . 1017) (nil fontified nil 1015 . 1016) (nil fontified nil 1014 . 1015) (nil fontified nil 1006 . 1014) (nil fontified nil 1005 . 1006) (nil fontified nil 998 . 1005) (nil fontified nil 997 . 998) (nil fontified nil 953 . 997) (nil fontified nil 949 . 953) (nil fontified nil 948 . 949) (nil fontified nil 941 . 948) (nil fontified nil 940 . 941) (nil fontified nil 925 . 940) (nil fontified nil 924 . 925) (nil fontified nil 917 . 924) (nil fontified nil 916 . 917) (nil fontified nil 873 . 916) (nil fontified nil 872 . 873) (nil fontified nil 871 . 872) (nil fontified nil 869 . 871) (nil fontified nil 868 . 869) (nil fontified nil 863 . 868) (nil fontified nil 862 . 863) (nil fontified nil 857 . 862) (nil fontified nil 852 . 857) (nil fontified nil 847 . 852) (nil fontified nil 846 . 847) (nil fontified nil 845 . 846) (nil fontified nil 813 . 845) (nil fontified nil 812 . 813) (nil fontified nil 807 . 812) (nil fontified nil 806 . 807) (nil fontified nil 803 . 806) (nil fontified nil 802 . 803) (nil fontified nil 758 . 802) (nil fontified nil 754 . 758) (nil fontified nil 753 . 754) (nil fontified nil 751 . 753) (nil fontified nil 715 . 751) (nil fontified nil 712 . 715) (nil fontified nil 709 . 712) (nil fontified nil 702 . 709) (nil fontified nil 699 . 702) (nil fontified nil 698 . 699) (nil fontified nil 651 . 698) (nil fontified nil 650 . 651) (nil fontified nil 649 . 650) (nil fontified nil 644 . 649) (nil fontified nil 641 . 644) (nil fontified nil 626 . 641) (nil fontified nil 625 . 626) (nil fontified nil 614 . 625) (nil fontified nil 613 . 614) (nil fontified nil 589 . 613) (nil fontified nil 586 . 589) (586 . 1335)) nil (25300 12654 775853 0) 0 nil])
nil
([nil nil ((1335 . 1336) (#(")" 0 1 (fontified nil)) . -1335) (1335 . 1336)) nil (25300 12654 775835 0) 0 nil])
([nil nil ((1303 . 1307) (#("  " 0 2 (fontified nil)) . 1303) (1211 . 1215) (#("  " 0 2 (fontified nil)) . 1211) (1185 . 1191) (#("    " 0 4 (fontified nil)) . 1185) (1127 . 1135) (#("      " 0 6 (fontified nil)) . 1127) (1087 . 1093) (#("    " 0 4 (fontified nil)) . 1087) (1039 . 1043) (#("  " 0 2 (fontified nil)) . 1039) (1017 . 1025) (#("      " 0 6 (fontified nil)) . 1017) (958 . 966) (#("      " 0 6 (fontified nil)) . 958) (932 . 940) (#("      " 0 6 (fontified nil)) . 932) (876 . 882) (#("    " 0 4 (fontified nil)) . 876) (814 . 818) (#("  " 0 2 (fontified nil)) . 814) (759 . 763) (#("  " 0 2 (fontified nil)) . 759) (716 . 720) (#("  " 0 2 (fontified nil)) . 716) (704 . 708) (#("  " 0 2 (fontified nil)) . 704) (644 . 648) (#("  " 0 2 (fontified nil)) . 644) (613 . 615) 1336) nil (25300 12654 775828 0) 0 nil])
([nil nil ((1038 . 1040) (t 25300 12654 781465 441000)) nil (25300 13013 828788 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil face (rainbow-delimiters-depth-3-face))) . -1038) (undo-tree-id0 . -1) (undo-tree-id1 . 1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#(")" 0 1 (fontified t face (rainbow-delimiters-depth-3-face))) . 1039) (undo-tree-id4 . 1) (undo-tree-id5 . -1)) nil (25300 13013 828784 0) 0 nil])
([nil nil ((1367 . 1370) (t 25300 13013 834380 649000)) nil (25300 13024 819495 0) 0 nil])
([nil nil ((583 . 586)) nil (25300 13024 819494 0) 0 nil])
([nil current ((#("  " 0 2 (fontified t)) . 584) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (undo-tree-id244 . -2) (undo-tree-id245 . -2) (undo-tree-id246 . -2) (undo-tree-id247 . -2) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -2) 586) nil (25300 13024 819485 0) 0 nil])
nil
