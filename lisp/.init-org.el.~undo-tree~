(undo-tree-save-format-version . 1)
"022eb88209cb687ccea5bf2a40637964016a3020"
[nil nil nil nil (26337 14921 499924 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 4577 . 4578) (nil fontified nil 4572 . 4578) (4572 . 4578) (t 26337 14768 0 0)) nil (26337 14960 499017 0) 0 nil])
([nil nil ((4513 . 4516) (t 26337 14960 0 0)) nil (26337 15006 273525 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4550 . 4551) (nil fontified nil 4516 . 4551) (4516 . 4551)) nil (26337 15006 273520 0) 0 nil])
([nil nil ((4551 . 4554) (t 26337 15006 0 0)) nil (26337 15040 943960 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 4888 . 4889) (nil fontified nil 4554 . 4889) (4554 . 4889)) nil (26337 15040 943954 0) 0 nil])
([nil nil ((4862 . 4864) (4809 . 4811) (4757 . 4759) (4713 . 4715) (4664 . 4666) (4613 . 4615) 4889 (t 26337 15040 0 0)) nil (26337 15053 178513 0) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -4747) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) 4748 (t 26337 15053 0 0)) nil (26337 15054 156369 0) 0 nil])
([nil nil ((4747 . 4749) (t 26337 15054 0 0)) nil (26337 15065 164639 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -4748) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) 4749 (t 26337 15065 0 0)) nil (26337 15109 358970 0) 0 nil])
([nil nil ((#("  (defun my-org-latex-preview-advice (beg end &rest _args)
    (let* ((ov (car (overlays-in beg end)))
           (img (cdr (overlay-get ov 'display)))
           (new-img (plist-put img :ascent 10)))
      (overlay-put ov 'display (cons 'image new-img))))
  (advice-add 'org--make-preview-overlay
              :after #'my-org-latex-preview-advice)" 0 2 (fontified t) 2 3 (face (rainbow-delimiters-depth-2-face) fontified t) 3 8 (face font-lock-keyword-face fontified t) 8 9 (fontified t) 9 36 (face font-lock-function-name-face fontified t) 36 37 (fontified t) 37 38 (face (rainbow-delimiters-depth-3-face) fontified t) 38 46 (fontified t) 46 51 (face font-lock-type-face fontified t) 51 57 (fontified t) 57 58 (face (rainbow-delimiters-depth-3-face) fontified t) 58 63 (fontified t) 63 64 (face (rainbow-delimiters-depth-3-face) fontified t) 64 68 (face font-lock-keyword-face fontified t) 68 69 (fontified t) 69 70 (face (rainbow-delimiters-depth-4-face) fontified t) 70 71 (face (rainbow-delimiters-depth-5-face) fontified t) 71 74 (fontified t) 74 75 (face (rainbow-delimiters-depth-6-face) fontified t) 75 79 (fontified t) 79 80 (face (rainbow-delimiters-depth-7-face) fontified t) 80 99 (fontified t) 99 100 (face (rainbow-delimiters-depth-7-face) fontified t) 100 101 (face (rainbow-delimiters-depth-6-face) fontified t) 101 102 (face (rainbow-delimiters-depth-5-face) fontified t) 102 114 (fontified t) 114 115 (face (rainbow-delimiters-depth-5-face) fontified t) 115 119 (fontified t) 119 120 (face (rainbow-delimiters-depth-6-face) fontified t) 120 124 (fontified t) 124 125 (face (rainbow-delimiters-depth-7-face) fontified t) 125 148 (fontified t) 148 149 (face (rainbow-delimiters-depth-7-face) fontified t) 149 150 (face (rainbow-delimiters-depth-6-face) fontified t) 150 151 (face (rainbow-delimiters-depth-5-face) fontified t) 151 152 (fontified t) 152 163 (fontified t) 163 164 (face (rainbow-delimiters-depth-5-face) fontified t) 164 172 (fontified t) 172 173 (face (rainbow-delimiters-depth-6-face) fontified t) 173 187 (fontified t) 187 194 (face font-lock-builtin-face fontified t) 194 197 (fontified t) 197 198 (face (rainbow-delimiters-depth-6-face) fontified t) 198 199 (face (rainbow-delimiters-depth-5-face) fontified t) 199 200 (face (rainbow-delimiters-depth-4-face) fontified t) 200 201 (fontified t) 201 207 (fontified t) 207 208 (face (rainbow-delimiters-depth-4-face) fontified t) 208 232 (fontified t) 232 233 (face (rainbow-delimiters-depth-5-face) fontified t) 233 252 (fontified t) 252 253 (face (rainbow-delimiters-depth-5-face) fontified t) 253 254 (face (rainbow-delimiters-depth-4-face) fontified t) 254 255 (face (rainbow-delimiters-depth-3-face) fontified t) 255 256 (face (rainbow-delimiters-depth-2-face) fontified t) 256 259 (fontified t) 259 260 (face (rainbow-delimiters-depth-2-face) fontified t) 260 312 (fontified t) 312 318 (face font-lock-builtin-face fontified t) 318 348 (fontified t) 348 349 (face (rainbow-delimiters-depth-2-face) fontified t rear-nonsticky t)) . 4552) (undo-tree-id101 . -349) (undo-tree-id102 . -196) (undo-tree-id103 . -195) (undo-tree-id104 . -196) (undo-tree-id105 . -196) (undo-tree-id106 . -195) (undo-tree-id107 . -297) (undo-tree-id108 . -2) (t 26337 15109 0 0)) nil (26337 15136 832020 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 4551) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) 4552) nil (26337 15136 832016 0) 0 nil])
([nil nil ((4968 . 4970) (#("  " 0 2 (fontified nil)) . 4967) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (4969 . 4970)) nil (26337 15136 832009 0) 0 nil])
([nil nil ((nil fontified nil 5315 . 5316) (nil fontified nil 5285 . 5315) (nil fontified nil 5279 . 5285) (nil fontified nil 5227 . 5279) (nil fontified nil 5226 . 5227) (nil fontified nil 5223 . 5226) (nil fontified nil 5222 . 5223) (nil fontified nil 5221 . 5222) (nil fontified nil 5220 . 5221) (nil fontified nil 5219 . 5220) (nil fontified nil 5200 . 5219) (nil fontified nil 5199 . 5200) (nil fontified nil 5175 . 5199) (nil fontified nil 5174 . 5175) (nil fontified nil 5168 . 5174) (nil fontified nil 5167 . 5168) (nil fontified nil 5166 . 5167) (nil fontified nil 5165 . 5166) (nil fontified nil 5164 . 5165) (nil fontified nil 5161 . 5164) (nil fontified nil 5154 . 5161) (nil fontified nil 5140 . 5154) (nil fontified nil 5139 . 5140) (nil fontified nil 5131 . 5139) (nil fontified nil 5130 . 5131) (nil fontified nil 5119 . 5130) (nil fontified nil 5118 . 5119) (nil fontified nil 5117 . 5118) (nil fontified nil 5116 . 5117) (nil fontified nil 5115 . 5116) (nil fontified nil 5092 . 5115) (nil fontified nil 5091 . 5092) (nil fontified nil 5087 . 5091) (nil fontified nil 5086 . 5087) (nil fontified nil 5082 . 5086) (nil fontified nil 5081 . 5082) (nil fontified nil 5069 . 5081) (nil fontified nil 5068 . 5069) (nil fontified nil 5067 . 5068) (nil fontified nil 5066 . 5067) (nil fontified nil 5047 . 5066) (nil fontified nil 5046 . 5047) (nil fontified nil 5042 . 5046) (nil fontified nil 5041 . 5042) (nil fontified nil 5038 . 5041) (nil fontified nil 5037 . 5038) (nil fontified nil 5036 . 5037) (nil fontified nil 5035 . 5036) (nil fontified nil 5031 . 5035) (nil fontified nil 5030 . 5031) (nil fontified nil 5025 . 5030) (nil fontified nil 5024 . 5025) (nil fontified nil 5018 . 5024) (nil fontified nil 5013 . 5018) (nil fontified nil 5005 . 5013) (nil fontified nil 5004 . 5005) (nil fontified nil 5003 . 5004) (nil fontified nil 4976 . 5003) (nil fontified nil 4975 . 4976) (nil fontified nil 4970 . 4975) (nil fontified nil 4969 . 4970) (nil fontified nil 4967 . 4969) (4967 . 5316)) nil (26337 15136 831976 0) 0 nil])
([nil nil ((#("1" 0 1 (fontified t)) . -5162) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) 5163 (t 26337 15136 0 0)) nil (26337 15155 628052 0) 0 nil])
([nil nil ((5162 . 5163)) nil (26337 15155 627999 0) 0 nil])
([nil nil ((#("9" 0 1 (fontified t)) . -5162) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) (undo-tree-id198 . -1) (undo-tree-id199 . -1) (undo-tree-id200 . -1) (undo-tree-id201 . -1) (undo-tree-id202 . -1) (undo-tree-id203 . -1) (undo-tree-id204 . -1) (undo-tree-id205 . -1) (undo-tree-id206 . -1) (undo-tree-id207 . -1) (undo-tree-id208 . -1) (undo-tree-id209 . -1) (undo-tree-id210 . -1) (undo-tree-id211 . -1) (undo-tree-id212 . -1) (undo-tree-id213 . -1) (undo-tree-id214 . -1) (undo-tree-id215 . -1) (undo-tree-id216 . -1) 5163 (t 26337 15155 0 0)) nil (26337 15177 561959 0) 0 nil])
([nil nil ((5162 . 5164)) nil (26337 15177 561921 0) 0 nil])
([nil nil ((4966 . 4969) (t 26337 15177 0 0)) nil (26337 15248 262371 0) 0 nil])
([nil nil ((4969 . 4974)) nil (26337 15248 262370 0) 0 nil])
([nil nil ((#("g" 0 1 (face font-lock-comment-face fontified t)) . -4972) (undo-tree-id343 . -1) (#("s" 0 1 (face font-lock-comment-face fontified t)) . -4973) (undo-tree-id344 . -1) 4974) nil (26337 15248 262368 0) 0 nil])
([nil nil ((4972 . 4976)) nil (26337 15248 262365 0) 0 nil])
([nil nil ((#("极" 0 1 (face font-lock-comment-face fontified nil)) . -4974) (undo-tree-id341 . -1) (#("限" 0 1 (face font-lock-comment-face fontified t)) . -4975) (undo-tree-id342 . -1) 4976) nil (26337 15248 262364 0) 0 nil])
([nil nil ((4974 . 4976)) nil (26337 15248 262361 0) 0 nil])
([nil nil ((4976 . 4978)) nil (26337 15248 262359 0) 0 nil])
([nil nil ((#("对" 0 1 (face font-lock-comment-face fontified t)) . -4976) (undo-tree-id217 . -1) (undo-tree-id218 . -1) (undo-tree-id219 . -1) (undo-tree-id220 . -1) (undo-tree-id221 . -1) (undo-tree-id222 . -1) (undo-tree-id223 . -1) (undo-tree-id224 . -1) (undo-tree-id225 . -1) (undo-tree-id226 . -1) (undo-tree-id227 . -1) (undo-tree-id228 . -1) (undo-tree-id229 . -1) (undo-tree-id230 . -1) (undo-tree-id231 . -1) (undo-tree-id232 . -1) (undo-tree-id233 . -1) (undo-tree-id234 . -1) (undo-tree-id235 . -1) (undo-tree-id236 . -1) (undo-tree-id237 . -1) (undo-tree-id238 . -1) (undo-tree-id239 . -1) (undo-tree-id240 . -1) (undo-tree-id241 . -1) (undo-tree-id242 . -1) (undo-tree-id243 . -1) (undo-tree-id244 . -1) (undo-tree-id245 . -1) (undo-tree-id246 . -1) (undo-tree-id247 . -1) (undo-tree-id248 . -1) (undo-tree-id249 . -1) (undo-tree-id250 . -1) (undo-tree-id251 . -1) (undo-tree-id252 . -1) (undo-tree-id253 . -1) (undo-tree-id254 . -1) (undo-tree-id255 . -1) (undo-tree-id256 . -1) (undo-tree-id257 . -1) (undo-tree-id258 . -1) (undo-tree-id259 . -1) (undo-tree-id260 . -1) (undo-tree-id261 . -1) (undo-tree-id262 . -1) (undo-tree-id263 . -1) (undo-tree-id264 . -1) (undo-tree-id265 . -1) (undo-tree-id266 . -1) (undo-tree-id267 . -1) (undo-tree-id268 . -1) (undo-tree-id269 . -1) (undo-tree-id270 . -1) (undo-tree-id271 . -1) (undo-tree-id272 . -1) (undo-tree-id273 . -1) (undo-tree-id274 . -1) (undo-tree-id275 . -1) (undo-tree-id276 . -1) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (#("其" 0 1 (face font-lock-comment-face fontified t)) . -4977) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) 4978) nil (26337 15248 262351 0) 0 nil])
([nil nil ((4976 . 4979)) nil (26337 15248 262228 0) 0 nil])
([nil current ((nil rear-nonsticky nil 5029 . 5030) (nil fontified nil 4979 . 5030) (4979 . 5030) (t 26337 15248 0 0)) nil (26337 15260 95665 0) 0 nil])
nil
