(undo-tree-save-format-version . 1)
"73b7329943740f92ce7d9de989169936f934c667"
[nil nil nil nil (25293 25420 566267 0) 0 nil]
([nil nil ((288 . 291) (t 25285 11756 100018 148000)) nil (25293 32831 647256 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 192) (undo-tree-id112 . -1) 193) nil (25293 32831 647255 0) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -190) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -191) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) 192) nil (25293 32831 647247 0) 0 nil])
([nil nil ((190 . 193) (t 25293 32831 650331 668000)) nil (25293 33526 621782 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-delimiter-face fontified t)) . 290) (undo-tree-id2 . -1) 291) nil (25293 33526 621780 0) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -288) (undo-tree-id0 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -289) (undo-tree-id1 . -1) 290) nil (25293 33526 621775 0) 0 nil])
([nil nil ((#("
;; ===========================================================================
;; major-mode和minor-mode的区别
;; Major Mode通常是定义对于一种文件类型编辑的核心规则，例如语法高亮、缩进、快捷键绑定等。
;; 而 Minor Mode 是除去 Major Mode 所提供的核心功能以外的额外编辑功能（辅助功能）。
;; 看一种文件类型的major-mode用快捷键“C-h m”
;; ===========================================================================" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 80 (face font-lock-comment-face fontified t) 80 83 (face font-lock-comment-delimiter-face fontified t) 83 108 (face font-lock-comment-face fontified t) 108 111 (face font-lock-comment-delimiter-face fontified t) 111 160 (face font-lock-comment-face fontified t) 160 163 (face font-lock-comment-delimiter-face fontified t) 163 216 (face font-lock-comment-face fontified t) 216 219 (face font-lock-comment-delimiter-face fontified t) 219 249 (face font-lock-comment-face fontified t) 249 252 (face font-lock-comment-delimiter-face fontified t) 252 327 (face font-lock-comment-face fontified t)) . 729) (undo-tree-id5 . -327) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -327) (undo-tree-id10 . -327) (t 25293 33526 624890 563000)) nil (25293 33732 84627 0) 0 nil])
([nil nil ((11059 . 11060)) nil (25293 33732 84622 0) 0 nil])
([nil nil ((11061 . 11068) (11060 . 11062)) nil (25293 33732 84621 0) 0 nil])
([nil nil ((11061 . 11072) (#("use-pac" 0 7 (fontified t)) . -11061) (undo-tree-id4 . -7) 11068) nil (25293 33732 84620 0) 0 nil])
([nil nil ((11072 . 11073)) nil (25293 33732 84618 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11088 . 11089) (nil fontified nil 11073 . 11089) (11073 . 11089)) nil (25293 33732 84617 0) 0 nil])
([nil nil ((11089 . 11092)) nil (25293 33732 84616 0) 0 nil])
([nil nil ((11092 . 11096)) nil (25293 33732 84615 0) 0 nil])
([nil nil ((11092 . 11097) (#(":ini" 0 4 (face font-lock-builtin-face fontified t)) . -11092) (undo-tree-id3 . -4) 11096) nil (25293 33732 84614 0) 0 nil])
([nil nil ((11097 . 11098)) nil (25293 33732 84606 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11125 . 11126) (nil fontified nil 11098 . 11126) (11098 . 11126)) nil (25293 33732 84605 0) 0 nil])
([nil nil ((11127 . 11128)) nil (25293 33732 84604 0) 0 nil])
([nil nil ((11127 . 11128) (11098 . 11099)) nil (25293 33732 84599 0) 0 nil])
([nil nil ((11059 . 11061) (t 25293 33732 88077 622000)) nil (25293 33818 175248 0) 0 nil])
([nil nil ((#("[" 0 1 (fontified nil)) . -11059) (undo-tree-id11 . -1) (undo-tree-id12 . 1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("]" 0 1 (fontified t)) . 11060) (undo-tree-id15 . 1) (undo-tree-id16 . -1)) nil (25293 33818 175309 0) 0 nil])
([nil nil ((#("(use-package page-break-lines
  :init (global-page-break-lines-mode))" 0 1 (fontified t) 1 12 (face font-lock-keyword-face fontified t) 12 13 (fontified t) 13 28 (face font-lock-constant-face fontified t) 28 29 (face font-lock-constant-face fontified t rear-nonsticky t) 29 30 (fontified t) 30 32 (fontified t) 32 37 (face font-lock-builtin-face fontified t) 37 39 (fontified t) 39 66 (fontified t) 66 67 (fontified t rear-nonsticky t) 67 68 (fontified t) 68 69 (fontified t)) . 11060) (undo-tree-id19 . -69) (undo-tree-id20 . -13) (undo-tree-id21 . -69) (undo-tree-id22 . -69) (undo-tree-id23 . -69) (undo-tree-id24 . -38) (undo-tree-id25 . -30) (undo-tree-id26 . -69) (undo-tree-id27 . -30) (undo-tree-id28 . -30) (undo-tree-id29 . -67) (undo-tree-id30 . 69) (undo-tree-id31 . -1) (undo-tree-id32 . 1) (undo-tree-id33 . -69) (undo-tree-id34 . -69)) nil (25293 33877 127659 0) 0 nil] [nil nil ((nil rear-nonsticky nil 11274 . 11275) (nil fontified nil 11247 . 11275) (11247 . 11275)) ((#("global-page-break-lines-mode" 0 27 (fontified nil) 27 28 (rear-nonsticky nil fontified nil)) . 11247) (undo-tree-id17 . -28) (undo-tree-id18 . -28) (nil rear-nonsticky t 11274 . 11275)) (25293 33818 175232 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11209 . 11210) (nil fontified nil 11060 . 11210) (11060 . 11210)) nil (25293 34015 121983 0) 0 nil])
nil
([nil nil ((11210 . 11211) (t 25293 33877 130704 70000)) nil (25293 34105 867011 0) 0 nil] [nil nil ((11211 . 11212) (t 25293 33877 130704 70000)) ((#("" 0 1 (fontified t)) . 11211) (undo-tree-id49 . -1) (undo-tree-id50 . -1)) (25293 34015 121701 0) 0 nil] [nil nil ((11211 . 11216) (t 25293 33877 130704 70000)) ((#("




" 0 1 (fontified t) 1 2 (fontified t) 2 3 (fontified t) 3 4 (fontified t) 4 5 (fontified t)) . 11211) (undo-tree-id35 . -5) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -5) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -3) (undo-tree-id42 . -3) (undo-tree-id43 . -4) (undo-tree-id44 . -4) (undo-tree-id45 . -5) (undo-tree-id46 . -5) (undo-tree-id47 . -5) (undo-tree-id48 . -5)) (25293 33883 162810 0) 0 nil])
([nil nil ((#("q" 0 1 (face (font-lock-warning-face) help-echo "Easy to misread; consider moving the element to the next line" fontified t)) . -11210) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) 11211) nil (25293 34105 867006 0) 0 nil])
nil
nil
([nil nil ((11158 . 11159) (t 25293 34105 870684 740000)) nil (25293 34367 464961 0) 0 nil])
([nil nil ((#("l" 0 1 (fontified t)) . -11158) (undo-tree-id62 . -1) 11159) nil (25293 34367 465023 0) 0 nil])
([nil nil ((11115 . 11116)) nil (25293 34388 619374 0) 0 nil] [nil nil ((11211 . 11212)) ((#("" 0 1 (fontified t)) . 11211) (undo-tree-id63 . -1) (undo-tree-id64 . -1)) (25293 34367 464946 0) 0 nil])
([nil nil ((11116 . 11119)) nil (25293 34388 619373 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 11160 . 11161) (nil fontified nil 11119 . 11161) (11119 . 11161)) nil (25293 34388 619372 0) 0 nil])
([nil nil ((11115 . 11116)) nil (25293 34388 619371 0) 0 nil])
([nil nil ((11116 . 11126)) nil (25293 34394 305928 0) 0 nil])
([nil nil ((11127 . 11128) (11119 . 11120)) nil (25293 34400 747960 0) 0 nil] [nil nil ((11119 . 11120) (11126 . 11127)) ((#("\"" 0 1 (fontified nil face font-lock-comment-face)) . 11126) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (#("\"" 0 1 (fontified t face font-lock-comment-face)) . 11119)) (25293 34394 305839 0) 0 nil] [nil nil ((#("C-q C-l" 0 7 (fontified t face font-lock-comment-face)) . 11119) (undo-tree-id65 . -7) (undo-tree-id66 . -7) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) 11120) ((11119 . 11126)) (25293 34388 619441 0) 0 nil])
([nil nil ((11119 . 11122)) nil (25293 34400 747955 0) 0 nil])
nil
([nil nil ((11119 . 11120)) ((#(":" 0 1 (fontified t face font-lock-comment-face)) . 11119) (undo-tree-id83 . -1) (undo-tree-id84 . -1)) (25293 34388 619349 0) 0 nil])
([nil nil ((11273 . 11274) (t 25293 34400 751611 422000)) nil (25299 45920 357717 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 11696 . 11697) (nil fontified nil 11380 . 11697) (nil fontified nil 11274 . 11380) (11274 . 11697)) nil (25299 45920 357716 0) 0 nil])
([nil nil ((11666 . 11667) (11697 . 11698)) nil (25299 45920 357714 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified nil)) . -11937) (11877 . 11904) (#("        " 0 6 (face font-lock-comment-face fontified nil) 6 8 (fontified nil)) . 11877) (11820 . 11847) (#("        " 0 6 (face font-lock-comment-face fontified nil) 6 8 (fontified nil)) . 11820) (#(" " 0 1 (fontified nil)) . -11502) (11192 . 11232) (#("  " 0 2 (fontified nil)) . 11192) (11120 . 11160) (#("  " 0 2 (fontified nil)) . 11120) (11031 . 11071) (#("  " 0 2 (fontified nil)) . 11031) (10962 . 11002) (#("  " 0 2 (fontified nil)) . 10962) (10856 . 10896) (#("  " 0 2 (fontified nil)) . 10856) (10788 . 10828) (#("  " 0 2 (fontified nil)) . 10788) (11631 . 11637) (#("			" 0 3 (fontified nil)) . -11631) (11593 . 11599) (#("			" 0 3 (fontified nil)) . -11593) 11699) nil (25299 45920 357708 0) 0 nil])
([nil nil ((#("(setq dashboard-startup-banner 'official) ;; 也可以自定义图片" 0 1 (fontified t) 1 5 (fontified t face font-lock-keyword-face) 5 42 (fontified t) 42 45 (fontified t face font-lock-comment-delimiter-face) 45 53 (fontified t face font-lock-comment-face)) . 11710) (undo-tree-id23 . -53) (undo-tree-id24 . 53) (undo-tree-id25 . -1) (undo-tree-id26 . 13) (undo-tree-id27 . -41) (undo-tree-id28 . -53) (undo-tree-id29 . -53) (t 25299 45920 361843 399000)) nil (25299 46460 443283 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12073 . 12074) (nil fontified nil 11710 . 12074) (11710 . 12074)) nil (25299 46460 443277 0) 0 nil])
([nil nil ((11948 . 11950) (11894 . 11896) (11842 . 11844) (11788 . 11790) (11770 . 11772) (11728 . 11730) 12074) nil (25299 46460 443276 0) 0 nil])
([nil nil ((11730 . 11732)) nil (25299 46460 443274 0) 0 nil])
([nil nil ((11729 . 11731) (#("  " 0 2 (fontified nil)) . 11728) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (11730 . 11731)) nil (25299 46460 443273 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t face font-lock-comment-face)) . 11727) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) 11728) nil (25299 46460 443269 0) 0 nil])
([nil nil ((11707 . 11710)) nil (25299 46460 443266 0) 0 nil])
([nil nil ((11730 . 11733)) nil (25299 46460 443265 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11771 . 11772) (nil fontified nil 11738 . 11772) (nil fontified nil 11734 . 11738) (nil fontified nil 11733 . 11734) (11733 . 11772)) nil (25299 46460 443264 0) 0 nil])
([nil nil ((#("[VALUE]" 0 7 (fontified t)) . 11764) (undo-tree-id11 . -7) (undo-tree-id12 . 7) (undo-tree-id13 . -1) (undo-tree-id14 . 1) (undo-tree-id15 . -7) (undo-tree-id16 . -7) (undo-tree-id17 . -7)) nil (25299 46460 443262 0) 0 nil])
([nil nil ((11765 . 11773) (11764 . 11766) (#("\"" 0 1 (fontified nil)) . -11764) (11764 . 11765)) nil (25299 46460 443257 0) 0 nil])
([nil nil ((11773 . 11780)) nil (25299 46460 443255 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t face font-lock-string-face)) . -11779) (undo-tree-id10 . -1) 11780) nil (25299 46460 443254 0) 0 nil])
([nil nil ((11779 . 11782)) nil (25299 46460 443252 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t face font-lock-string-face)) . -11776) (undo-tree-id4 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -11777) (undo-tree-id5 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -11778) (undo-tree-id6 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -11779) (undo-tree-id7 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -11780) (undo-tree-id8 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -11781) (undo-tree-id9 . -1) 11782) nil (25299 46460 443251 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11792 . 11793) (nil fontified nil 11776 . 11793) (11776 . 11793)) nil (25299 46460 443244 0) 0 nil])
([nil nil ((11793 . 11796)) nil (25299 46460 443243 0) 0 nil])
([nil nil ((#("s" 0 1 (fontified t face font-lock-string-face)) . -11793) (undo-tree-id1 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -11794) (undo-tree-id2 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -11795) (undo-tree-id3 . -1) 11796) nil (25299 46460 443242 0) 0 nil])
([nil nil ((11793 . 11797)) nil (25299 46460 443238 0) 0 nil])
([nil nil ((#("y" 0 1 (fontified t face font-lock-string-face)) . -11796) (undo-tree-id0 . -1) 11797) nil (25299 46460 443237 0) 0 nil])
([nil nil ((11796 . 11797)) nil (25299 46460 443217 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 11708) 11797) nil (25299 46460 443212 0) 0 nil])
([nil nil ((12158 . 12161) (t 25299 46460 448329 589000)) nil (25299 46464 206943 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 12159) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) 11913) nil (25299 46464 206938 0) 0 nil])
([nil nil ((#("-" 0 1 (face font-lock-string-face fontified t)) . 11786) (t 25299 46464 210790 670000)) nil (25299 46647 257530 0) 0 nil])
([nil nil ((#("icon" 0 4 (face font-lock-string-face fontified t)) . 11786)) nil (25299 46647 257521 0) 0 nil])
([nil nil ((12155 . 12157) (#("  " 0 2 (fontified nil face font-lock-comment-face)) . 12154) (12154 . 12156) (12154 . 12155) (t 25299 46647 262021 426000)) nil (25299 46770 834904 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12243 . 12244) (nil fontified nil 12157 . 12244) (12157 . 12244)) nil (25299 46770 834902 0) 0 nil])
([nil nil ((12211 . 12213) 12244) nil (25299 46770 834901 0) 0 nil])
([nil nil ((12246 . 12249)) nil (25299 46770 834900 0) 0 nil])
([nil nil ((#("(projects . 10)" 0 15 (fontified t)) . 12390) (undo-tree-id304 . -15) (undo-tree-id305 . -15) 12405) nil (25299 46770 834899 0) 0 nil])
([nil nil ((#(" )) ;; 显示多少个最近项目" 0 4 (fontified t) 4 7 (fontified t face font-lock-comment-delimiter-face) 7 16 (fontified t face font-lock-comment-face)) . -12389) (undo-tree-id174 . -16) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . -3) (undo-tree-id206 . -4) (undo-tree-id207 . -4) (undo-tree-id208 . -4) (undo-tree-id209 . -4) (undo-tree-id210 . -4) (undo-tree-id211 . -5) (undo-tree-id212 . -5) (undo-tree-id213 . -5) (undo-tree-id214 . -5) (undo-tree-id215 . -5) (undo-tree-id216 . -6) (undo-tree-id217 . -6) (undo-tree-id218 . -6) (undo-tree-id219 . -6) (undo-tree-id220 . -6) (undo-tree-id221 . -7) (undo-tree-id222 . -7) (undo-tree-id223 . -7) (undo-tree-id224 . -7) (undo-tree-id225 . -7) (undo-tree-id226 . -8) (undo-tree-id227 . -8) (undo-tree-id228 . -8) (undo-tree-id229 . -8) (undo-tree-id230 . -8) (undo-tree-id231 . -9) (undo-tree-id232 . -9) (undo-tree-id233 . -9) (undo-tree-id234 . -9) (undo-tree-id235 . -9) (undo-tree-id236 . -10) (undo-tree-id237 . -10) (undo-tree-id238 . -10) (undo-tree-id239 . -10) (undo-tree-id240 . -10) (undo-tree-id241 . -11) (undo-tree-id242 . -11) (undo-tree-id243 . -11) (undo-tree-id244 . -11) (undo-tree-id245 . -11) (undo-tree-id246 . -12) (undo-tree-id247 . -12) (undo-tree-id248 . -12) (undo-tree-id249 . -12) (undo-tree-id250 . -12) (undo-tree-id251 . -13) (undo-tree-id252 . -13) (undo-tree-id253 . -13) (undo-tree-id254 . -13) (undo-tree-id255 . -13) (undo-tree-id256 . -14) (undo-tree-id257 . -14) (undo-tree-id258 . -14) (undo-tree-id259 . -14) (undo-tree-id260 . -14) (undo-tree-id261 . -15) (undo-tree-id262 . -15) (undo-tree-id263 . -15) (undo-tree-id264 . -15) (undo-tree-id265 . -15) (undo-tree-id266 . -16) (undo-tree-id267 . -16) (undo-tree-id268 . -16) (undo-tree-id269 . -16) (undo-tree-id270 . -16) (undo-tree-id271 . -16) (undo-tree-id272 . -16) (undo-tree-id273 . -16) (undo-tree-id274 . -16) (undo-tree-id275 . -16) (undo-tree-id276 . -16) (undo-tree-id277 . -16) (undo-tree-id278 . -16) (undo-tree-id279 . -16) (undo-tree-id280 . -16) (undo-tree-id281 . -16) (undo-tree-id282 . -16) (undo-tree-id283 . -16) (undo-tree-id284 . -16) (undo-tree-id285 . -16) (undo-tree-id286 . -1) (undo-tree-id287 . -16) (undo-tree-id288 . -16) (undo-tree-id289 . -16) (undo-tree-id290 . -16) (undo-tree-id291 . -16) (undo-tree-id292 . -16) (undo-tree-id293 . -16) (undo-tree-id294 . -16) (undo-tree-id295 . -16) (undo-tree-id296 . -16) (undo-tree-id297 . -16) (undo-tree-id298 . -16) (undo-tree-id299 . -16) (undo-tree-id300 . -16) (undo-tree-id301 . -16) (undo-tree-id302 . -16) (undo-tree-id303 . -16) 12405) nil (25299 46770 834893 0) 0 nil])
([nil nil ((12349 . 12350) (#(")" 0 1 (fontified nil)) . -12349) (12348 . 12350) (#(")" 0 1 (fontified nil)) . -12348) (12348 . 12349)) nil (25299 46770 834803 0) 0 nil])
([nil nil ((#("                          " 0 26 (fontified t)) . 12363) (undo-tree-id0 . -26) (undo-tree-id1 . -26) (undo-tree-id2 . -26) (undo-tree-id3 . -26) (undo-tree-id4 . -26) (undo-tree-id5 . -26) (undo-tree-id6 . -26) (undo-tree-id7 . -26) (undo-tree-id8 . -26) (undo-tree-id9 . -26) (undo-tree-id10 . -26) (undo-tree-id11 . -26) (undo-tree-id12 . -26) (undo-tree-id13 . -26) (undo-tree-id14 . -26) (undo-tree-id15 . -26) (undo-tree-id16 . -26) (undo-tree-id17 . -26) (undo-tree-id18 . -26) (undo-tree-id19 . -26) (undo-tree-id20 . -26) (undo-tree-id21 . -26) (undo-tree-id22 . -26) (undo-tree-id23 . -26) (undo-tree-id24 . -26) (undo-tree-id25 . -26) (undo-tree-id26 . -26) (undo-tree-id27 . -26) (undo-tree-id28 . -26) (undo-tree-id29 . -26) (undo-tree-id30 . -26) (undo-tree-id31 . -26) (undo-tree-id32 . -26) (undo-tree-id33 . -26) (undo-tree-id34 . -26) (undo-tree-id35 . -26) (undo-tree-id36 . -26) (undo-tree-id37 . -26) (undo-tree-id38 . -26) (undo-tree-id39 . -26) (undo-tree-id40 . -26) (undo-tree-id41 . -26) (undo-tree-id42 . -26) (undo-tree-id43 . -26) (undo-tree-id44 . -26) (undo-tree-id45 . -26) (undo-tree-id46 . -26) (undo-tree-id47 . -26) (undo-tree-id48 . -26) (undo-tree-id49 . -26) (undo-tree-id50 . -26) (undo-tree-id51 . -26) (undo-tree-id52 . -26) (undo-tree-id53 . -26) (undo-tree-id54 . -26) (undo-tree-id55 . -26) (undo-tree-id56 . -26) (undo-tree-id57 . -26) (undo-tree-id58 . -26) (undo-tree-id59 . -26) (undo-tree-id60 . -26) (undo-tree-id61 . -26) (undo-tree-id62 . -26) (undo-tree-id63 . -26) (undo-tree-id64 . -26) (undo-tree-id65 . -26) (undo-tree-id66 . -26) (undo-tree-id67 . -26) (undo-tree-id68 . -26) (undo-tree-id69 . -26) (undo-tree-id70 . -26) (undo-tree-id71 . -26) (undo-tree-id72 . -26) (undo-tree-id73 . -26) (undo-tree-id74 . -26) (undo-tree-id75 . -26) (undo-tree-id76 . -26) (undo-tree-id77 . -26) (undo-tree-id78 . -26) (undo-tree-id79 . -26) (undo-tree-id80 . -26) (undo-tree-id81 . -26) (undo-tree-id82 . -26) (undo-tree-id83 . -26) (undo-tree-id84 . -26) (undo-tree-id85 . -26) (undo-tree-id86 . -26) (undo-tree-id87 . -26) (undo-tree-id88 . -26) (undo-tree-id89 . -26) (undo-tree-id90 . -26) (undo-tree-id91 . -26) (undo-tree-id92 . -26) (undo-tree-id93 . -26) (undo-tree-id94 . -26) (undo-tree-id95 . -26) (undo-tree-id96 . -26) (undo-tree-id97 . -26) (undo-tree-id98 . -26) (undo-tree-id99 . -26) (undo-tree-id100 . -26) (undo-tree-id101 . -26) (undo-tree-id102 . -26) (undo-tree-id103 . -26) (undo-tree-id104 . -26) (undo-tree-id105 . -26) (undo-tree-id106 . -26) (undo-tree-id107 . -26) (undo-tree-id108 . -26) (undo-tree-id109 . -26) (undo-tree-id110 . -26) (undo-tree-id111 . -26) (undo-tree-id112 . -26) (undo-tree-id113 . -26) (undo-tree-id114 . -26) (undo-tree-id115 . -26) (undo-tree-id116 . -26) (undo-tree-id117 . -26) (undo-tree-id118 . -26) (undo-tree-id119 . -26) (undo-tree-id120 . -26) (undo-tree-id121 . -26) (undo-tree-id122 . -26) (undo-tree-id123 . -26) (undo-tree-id124 . -26) (undo-tree-id125 . -26) (undo-tree-id126 . -26) (undo-tree-id127 . -26) (undo-tree-id128 . -26) (undo-tree-id129 . -26) (undo-tree-id130 . -26) (undo-tree-id131 . -26) (undo-tree-id132 . -26) (undo-tree-id133 . -26) (undo-tree-id134 . -26) (undo-tree-id135 . -26) (undo-tree-id136 . -26) (undo-tree-id137 . -26) (undo-tree-id138 . -26) (undo-tree-id139 . -26) (undo-tree-id140 . -26) (undo-tree-id141 . -26) (undo-tree-id142 . -26) (undo-tree-id143 . -26) (undo-tree-id144 . -26) (undo-tree-id145 . -26) (undo-tree-id146 . -26) (undo-tree-id147 . -26) (undo-tree-id148 . -26) (undo-tree-id149 . -26) (undo-tree-id150 . -26) (undo-tree-id151 . -26) (undo-tree-id152 . -26) (undo-tree-id153 . -26) (undo-tree-id154 . -26) (undo-tree-id155 . -26) (undo-tree-id156 . -26) (undo-tree-id157 . -26) (undo-tree-id158 . -26) (undo-tree-id159 . -26) (undo-tree-id160 . -26) (undo-tree-id161 . -26) (undo-tree-id162 . -26) (undo-tree-id163 . -26) (undo-tree-id164 . -26) (undo-tree-id165 . -26) (undo-tree-id166 . -26) (undo-tree-id167 . -26) (undo-tree-id168 . -26) (undo-tree-id169 . -26) (undo-tree-id170 . -26) (undo-tree-id171 . -26) (undo-tree-id172 . -26) (undo-tree-id173 . -26) (#("  " 0 2 (fontified t)) . 12247) 12350) nil (25299 46770 834793 0) 0 nil])
([nil nil ((12248 . 12250) (#("  " 0 2 (fontified nil)) . 12247) (12247 . 12249) (12247 . 12248) (t 25299 46770 840355 534000)) nil (25299 46786 969055 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12347 . 12348) (nil fontified nil 12250 . 12348) (12250 . 12348)) nil (25299 46786 969054 0) 0 nil])
([nil nil ((12351 . 12353) (12313 . 12315) (12348 . 12349)) nil (25299 46786 969052 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . 12351) (undo-tree-id306 . -2) (undo-tree-id307 . -2) (undo-tree-id308 . -2) (undo-tree-id309 . -2) (undo-tree-id310 . -2) (undo-tree-id311 . -2) (undo-tree-id312 . -2) (undo-tree-id313 . -2) (undo-tree-id314 . -2) (undo-tree-id315 . -2) (undo-tree-id316 . -2) (undo-tree-id317 . -2) (undo-tree-id318 . -2) (undo-tree-id319 . -2) (undo-tree-id320 . -2) (undo-tree-id321 . -2) (undo-tree-id322 . -2) (undo-tree-id323 . -2) (undo-tree-id324 . -2) (undo-tree-id325 . -2) (undo-tree-id326 . -2) (undo-tree-id327 . -2) (undo-tree-id328 . -2) (undo-tree-id329 . -2) (undo-tree-id330 . -2) (undo-tree-id331 . -2) (undo-tree-id332 . -2) (undo-tree-id333 . -2) 12353) nil (25299 46786 969046 0) 0 nil])
([nil nil ((#("5" 0 1 (fontified t)) . -12390) (undo-tree-id380 . -1) (undo-tree-id381 . -1) 12391 (t 25299 46786 973176 481000)) nil (25299 46810 744086 0) 0 nil])
([nil nil ((12390 . 12392)) nil (25299 46810 744083 0) 0 nil])
([nil nil ((12451 . 12479)) nil (25299 46810 744082 0) 0 nil])
([nil nil ((12480 . 12484) (12479 . 12481)) nil (25299 46810 744081 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -12480) (undo-tree-id376 . -1) (#("g" 0 1 (fontified t)) . -12481) (undo-tree-id377 . -1) (#("e" 0 1 (fontified t)) . -12482) (undo-tree-id378 . -1) (#("n" 0 1 (fontified t)) . -12483) (undo-tree-id379 . -1) 12484) nil (25299 46810 744079 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified nil)) . -12479) (undo-tree-id370 . -1) (undo-tree-id371 . 1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (#(")" 0 1 (fontified t)) . 12480) (undo-tree-id374 . 1) (undo-tree-id375 . -1)) nil (25299 46810 744074 0) 0 nil])
([nil nil ((#("
                           " 0 1 (fontified t) 1 28 (fontified t)) . 12451) (undo-tree-id351 . -1) (undo-tree-id352 . -28) (undo-tree-id353 . -1) (undo-tree-id354 . -28) (undo-tree-id355 . -28) (undo-tree-id356 . -28) (undo-tree-id357 . -28) (undo-tree-id358 . -28) (undo-tree-id359 . -28) (undo-tree-id360 . -28) (undo-tree-id361 . -28) (undo-tree-id362 . -28) (undo-tree-id363 . -28) (undo-tree-id364 . -28) (undo-tree-id365 . -28) (undo-tree-id366 . -28) (undo-tree-id367 . -28) (undo-tree-id368 . -28) (undo-tree-id369 . -28) 12479) nil (25299 46810 744209 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -12397) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) 12398) nil (25299 46828 495453 0) 0 nil] [nil nil ((12394 . 12421) (#("  " 0 2 (fontified nil)) . 12394) (#(" " 0 1 (fontified nil)) . 12393) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (12394 . 12395)) ((#("
" 0 1 (fontified nil)) . 12394) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (12393 . 12394) (12394 . 12396) (#("                           " 0 27 (fontified t)) . 12394) (undo-tree-id386 . -27) (undo-tree-id387 . -27)) (25299 46810 744049 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -12455) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) 12456) nil (25299 46828 495436 0) 0 nil])
nil
([nil nil ((12407 . 12435)) nil (25299 46828 495419 0) 0 nil])
([nil nil ((12436 . 12446) (12435 . 12437)) nil (25299 46828 495415 0) 0 nil])
([nil nil ((12507 . 12509) (#("  " 0 2 (fontified nil face font-lock-comment-face)) . 12506) (12506 . 12508) (12506 . 12507) (t 25299 46828 499362 468000)) nil (25299 46920 817670 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12726 . 12727) (nil fontified nil 12509 . 12727) (12509 . 12727)) nil (25299 46920 817669 0) 0 nil])
([nil nil ((12731 . 12735) (12654 . 12686) (#("                             " 0 29 (fontified nil)) . 12654) (12727 . 12728)) nil (25299 46920 817667 0) 0 nil])
([nil nil ((#("(dashboard-setup-startup-hook)" 0 30 (fontified t)) . 12738) (undo-tree-id470 . -30) (undo-tree-id471 . -30) 12768) nil (25299 46920 817666 0) 0 nil])
([nil nil ((11546 . 11549)) nil (25299 46920 817664 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 11578 . 11579) (nil fontified nil 11549 . 11579) (11549 . 11579)) nil (25299 46920 817663 0) 0 nil])
([nil nil ((12779 . 12781) (12772 . 12776) (#("  " 0 2 (fontified t)) . 12772) (undo-tree-id468 . -2) (undo-tree-id469 . -2) (12616 . 12648) (#("                             " 0 29 (fontified t)) . 12616) 12772) nil (25299 46920 817661 0) 0 nil])
([nil nil ((12777 . 12778) (#(")" 0 1 (fontified nil)) . -12777) (12777 . 12778)) nil (25299 46920 817658 0) 0 nil])
([nil nil ((12777 . 12780)) nil (25299 46920 817657 0) 0 nil])
([nil nil ((#("  " 0 2 (fontified t)) . -12783) 12780) nil (25299 46920 817655 0) 0 nil])
([nil nil ((#("
    
    " 0 5 (fontified t) 5 6 (fontified t) 6 10 (fontified t)) . 12766) (undo-tree-id432 . -6) (undo-tree-id433 . -10) (undo-tree-id434 . -6) (undo-tree-id435 . -6) (undo-tree-id436 . -5) (undo-tree-id437 . -5) (undo-tree-id438 . -5) (undo-tree-id439 . -5) (undo-tree-id440 . -5) (undo-tree-id441 . -5) (undo-tree-id442 . -5) (undo-tree-id443 . -5) (undo-tree-id444 . -5) (undo-tree-id445 . -5) (undo-tree-id446 . -5) (undo-tree-id447 . -5) (undo-tree-id448 . -5) (undo-tree-id449 . -5) (undo-tree-id450 . -5) (undo-tree-id451 . -6) (undo-tree-id452 . -10) (undo-tree-id453 . -10) (undo-tree-id454 . -10) (undo-tree-id455 . -10) (undo-tree-id456 . -10) (undo-tree-id457 . -10) (undo-tree-id458 . -10) (undo-tree-id459 . -10) (undo-tree-id460 . -10) (undo-tree-id461 . -10) (undo-tree-id462 . -10) (undo-tree-id463 . -10) (undo-tree-id464 . -10) (undo-tree-id465 . -10) (undo-tree-id466 . -10) (undo-tree-id467 . -10) 12776) nil (25299 46920 817650 0) 0 nil])
([nil nil ((12769 . 12771) (#("  " 0 2 (fontified nil)) . 12768) (undo-tree-id477 . -2) (12767 . 12771) (t 25299 46920 822285 874000)) nil (25299 47020 332162 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12840 . 12841) (nil fontified nil 12771 . 12841) (12771 . 12841)) nil (25299 47020 332160 0) 0 nil])
([nil nil ((12808 . 12810) 12841) nil (25299 47020 332158 0) 0 nil])
([nil nil ((12540 . 12542) (#("  " 0 2 (fontified nil face font-lock-comment-face)) . 12539) (12539 . 12541) (12539 . 12540)) nil (25299 47020 332157 0) 0 nil])
([nil nil ((12542 . 12545)) nil (25299 47020 332156 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12554 . 12555) (nil fontified nil 12545 . 12555) (12545 . 12555)) nil (25299 47020 332155 0) 0 nil])
([nil nil ((#("要" 0 1 (face font-lock-comment-face fontified t charset chinese-gb2312)) . -12545) (undo-tree-id476 . -1) 12546) nil (25299 47020 332153 0) 0 nil])
([nil nil ((#(" 修改小部件标题名称" 0 1 (face font-lock-comment-delimiter-face fontified t) 1 9 (face font-lock-comment-face fontified t charset chinese-gb2312) 9 10 (face font-lock-comment-face rear-nonsticky t fontified t charset chinese-gb2312)) . -12544) (undo-tree-id473 . -10) (undo-tree-id474 . -1) (undo-tree-id475 . -10) 12554) nil (25299 47020 332151 0) 0 nil])
([nil nil ((12544 . 12545)) nil (25299 47020 332147 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12578 . 12579) (nil fontified nil 12545 . 12579) (12545 . 12579)) nil (25299 47020 332147 0) 0 nil])
([nil nil ((12809 . 12811) (#("  " 0 2 (fontified nil)) . 12808) (12808 . 12810) (12808 . 12809)) nil (25299 47020 332145 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 12862 . 12863) (nil fontified nil 12811 . 12863) (12811 . 12863)) nil (25299 47020 332144 0) 0 nil])
([nil nil ((12811 . 12814)) nil (25299 47020 332143 0) 0 nil])
([nil nil ((12941 . 12944)) nil (25299 47020 332142 0) 0 nil])
([nil nil ((12944 . 12947)) nil (25299 47020 332141 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 13016 . 13017) (nil fontified nil 12947 . 13017) (12947 . 13017)) nil (25299 47020 332140 0) 0 nil])
([nil nil ((13017 . 13020)) nil (25299 47020 332139 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 13133 . 13134) (nil fontified nil 13020 . 13134) (13020 . 13134)) nil (25299 47020 332138 0) 0 nil])
([nil nil ((13138 . 13140) (13078 . 13115) (#("                                  " 0 34 (fontified nil)) . 13078) (13134 . 13135)) nil (25299 47020 332137 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 13171 . 13172) (nil fontified nil 13140 . 13172) (13140 . 13172)) nil (25299 47020 332135 0) 0 nil])
([nil nil ((13139 . 13141) (#("  " 0 2 (fontified nil)) . 13138) (undo-tree-id472 . -2) (13137 . 13141)) nil (25299 47020 332133 0) 0 nil])
([nil nil ((13141 . 13144)) nil (25299 47020 332125 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 13178 . 13179) (nil fontified nil 13144 . 13179) (13144 . 13179)) nil (25299 47020 332120 0) 0 nil])
([nil nil ((#("(use-package dashboard
  :ensure t
  :config
  (dashboard-setup-startup-hook)
  (setq dashboard-banner-logo-title \"Welcome to Emacs!\") ;; 个性签名，随读者喜好设置
  ;; (setq dashboard-projects-backend 'projectile) ;; 读者可以暂时注释掉这一行，等安装了 projectile 后再使用

  ;; Set the banner
  (setq dashboard-startup-banner \"~/.emacs.d/emacs-dragon.png\")
  ;;(setq dashboard-startup-banner [VALUE])
  ;; Value can be
  ;; 'official which displays the official emacs logo
  ;; 'logo which displays an alternative emacs logo
  ;; 1, 2 or 3 which displays one of the text banners
  ;; \"path/to/your/image.gif\", \"path/to/your/image.png\" or \"path/to/your/text.txt\" which displays whatever gif/image/text you would prefer

  ;; Content is not centered by default. To center, set
  (setq dashboard-center-content t)

  ;; To disable shortcut \"jump\" indicators for each section, set
  (setq dashboard-show-shortcuts nil)

  (setq dashboard-items '((recents  . 10)   ; 显示多少个最近文件
                           (agenda . 5)
                           (bookmarks . 5)))  ; 显示多少个最近书签

  ;; To modify the widget heading name:
  (setq dashboard-item-names '((\"Recent Files:\" . \"Recently opened files:\")
                                (\"Agenda for today:\" . \"Today's agenda:\")
                                (\"Agenda for the coming week:\" . \"Agenda:\")))

  ;; To add icons to the widget headings and their items:
  (setq dashboard-set-heading-icons t)
  (setq dashboard-set-file-icons t)
  ;; To modify heading icons with another icon from all-the-icons octicons:
  (dashboard-modify-heading-icons '((recents . \"file-text\")
                                     (bookmarks . \"book\")))

  ;; To show navigator below the banner:
  (setq dashboard-set-navigator t)
  )" 0 1 (fontified t) 1 12 (fontified t face font-lock-keyword-face) 12 13 (fontified t) 13 22 (fontified t face font-lock-constant-face) 22 23 (fontified t) 23 25 (fontified t) 25 32 (fontified t face font-lock-builtin-face) 32 35 (fontified t) 35 37 (fontified t) 37 44 (fontified t face font-lock-builtin-face) 44 45 (fontified t) 45 47 (fontified t) 47 76 (fontified t) 76 77 (fontified t rear-nonsticky t) 77 78 (fontified t) 78 81 (fontified t) 81 85 (fontified t face font-lock-keyword-face) 85 114 (fontified t) 114 133 (fontified t face font-lock-string-face) 133 135 (fontified t) 135 138 (fontified t face font-lock-comment-delimiter-face) 138 151 (fontified t face font-lock-comment-face) 151 153 (fontified t) 153 156 (fontified t face font-lock-comment-delimiter-face) 156 239 (fontified t face font-lock-comment-face) 239 240 (fontified t) 240 242 (fontified t) 242 245 (fontified t face font-lock-comment-delimiter-face) 245 260 (fontified t face font-lock-comment-face) 260 263 (fontified t) 263 267 (fontified t face font-lock-keyword-face) 267 293 (fontified t) 293 322 (fontified t face font-lock-string-face) 322 326 (fontified t) 326 328 (fontified t face font-lock-comment-delimiter-face) 328 368 (fontified t face font-lock-comment-face) 368 370 (fontified t) 370 373 (fontified t face font-lock-comment-delimiter-face) 373 386 (fontified t face font-lock-comment-face) 386 388 (fontified t) 388 391 (fontified t face font-lock-comment-delimiter-face) 391 440 (fontified t face font-lock-comment-face) 440 442 (fontified t) 442 445 (fontified t face font-lock-comment-delimiter-face) 445 492 (fontified t face font-lock-comment-face) 492 494 (fontified t) 494 497 (fontified t face font-lock-comment-delimiter-face) 497 546 (fontified t face font-lock-comment-face) 546 548 (fontified t) 548 551 (fontified t face font-lock-comment-delimiter-face) 551 685 (fontified t face font-lock-comment-face) 685 686 (fontified t) 686 688 (fontified t) 688 691 (fontified t face font-lock-comment-delimiter-face) 691 742 (fontified t face font-lock-comment-face) 742 744 (fontified t) 744 745 (fontified t) 745 749 (fontified t face font-lock-keyword-face) 749 776 (fontified t) 776 777 (rear-nonsticky t fontified t) 777 778 (fontified t) 778 779 (fontified t) 779 781 (fontified t) 781 784 (fontified t face font-lock-comment-delimiter-face) 784 844 (fontified t face font-lock-comment-face) 844 846 (fontified t) 846 847 (fontified t) 847 851 (fontified t face font-lock-keyword-face) 851 880 (fontified t) 880 881 (rear-nonsticky t fontified t) 881 882 (fontified t) 882 883 (fontified t) 883 886 (fontified t) 886 890 (fontified t face font-lock-keyword-face) 890 924 (fontified t) 924 925 (fontified t) 925 927 (fontified t) 927 929 (fontified t face font-lock-comment-delimiter-face) 929 939 (fontified t face font-lock-comment-face) 939 966 (fontified t) 966 978 (fontified t) 978 979 (fontified t) 979 1021 (fontified t) 1021 1022 (fontified t) 1022 1023 (fontified t) 1023 1025 (fontified t) 1025 1027 (fontified t face font-lock-comment-delimiter-face) 1027 1037 (fontified t face font-lock-comment-face) 1037 1038 (fontified t) 1038 1040 (fontified t) 1040 1043 (fontified t face font-lock-comment-delimiter-face) 1043 1076 (fontified t face font-lock-comment-face) 1076 1077 (fontified t rear-nonsticky t face font-lock-comment-face) 1077 1078 (fontified t face font-lock-comment-face) 1078 1080 (fontified t) 1080 1081 (fontified t) 1081 1085 (fontified t face font-lock-keyword-face) 1085 1110 (fontified t) 1110 1125 (fontified t face font-lock-string-face) 1125 1128 (fontified t) 1128 1152 (fontified t face font-lock-string-face) 1152 1154 (fontified t) 1154 1186 (fontified t) 1186 1187 (fontified t) 1187 1206 (fontified t face font-lock-string-face) 1206 1209 (fontified t) 1209 1226 (fontified t face font-lock-string-face) 1226 1228 (fontified t) 1228 1260 (fontified t) 1260 1261 (fontified t) 1261 1290 (fontified t face font-lock-string-face) 1290 1293 (fontified t) 1293 1302 (fontified t face font-lock-string-face) 1302 1303 (fontified t) 1303 1304 (rear-nonsticky t fontified t) 1304 1306 (fontified t) 1306 1307 (fontified t) 1307 1309 (fontified t) 1309 1312 (fontified t face font-lock-comment-delimiter-face) 1312 1363 (fontified t face font-lock-comment-face) 1363 1364 (fontified t rear-nonsticky t face font-lock-comment-face) 1364 1365 (fontified t face font-lock-comment-face) 1365 1367 (fontified t) 1367 1368 (fontified t) 1368 1372 (fontified t face font-lock-keyword-face) 1372 1404 (fontified t) 1404 1407 (fontified t) 1407 1411 (fontified t face font-lock-keyword-face) 1411 1438 (fontified t) 1438 1439 (rear-nonsticky t fontified t) 1439 1440 (fontified t) 1440 1442 (fontified t) 1442 1445 (fontified t face font-lock-comment-delimiter-face) 1445 1514 (fontified t face font-lock-comment-face) 1514 1515 (fontified t rear-nonsticky t face font-lock-comment-face) 1515 1516 (fontified t face font-lock-comment-face) 1516 1518 (fontified t) 1518 1563 (fontified t) 1563 1574 (fontified t face font-lock-string-face) 1574 1576 (fontified t) 1576 1613 (fontified t) 1613 1626 (fontified t) 1626 1632 (fontified t face font-lock-string-face) 1632 1634 (fontified t) 1634 1635 (fontified t rear-nonsticky t) 1635 1636 (fontified t) 1636 1637 (fontified t) 1637 1639 (fontified t) 1639 1642 (fontified t face font-lock-comment-delimiter-face) 1642 1676 (fontified t face font-lock-comment-face) 1676 1677 (fontified t rear-nonsticky t face font-lock-comment-face) 1677 1678 (fontified t face font-lock-comment-face) 1678 1680 (fontified t) 1680 1681 (fontified t) 1681 1685 (fontified t face font-lock-keyword-face) 1685 1711 (fontified t) 1711 1712 (rear-nonsticky t fontified t) 1712 1713 (fontified t) 1713 1715 (fontified t) 1715 1716 (fontified t)) . 11502) (undo-tree-id602 . -23) (undo-tree-id603 . -260) (undo-tree-id604 . -311) (undo-tree-id605 . -1716) (undo-tree-id606 . 1716) (undo-tree-id607 . -1) (undo-tree-id608 . -688) (undo-tree-id609 . -1037) (undo-tree-id610 . -1037) (undo-tree-id611 . -781) (undo-tree-id612 . -1080) (undo-tree-id613 . -1304) (undo-tree-id614 . 1) (undo-tree-id615 . -1716) (undo-tree-id616 . -47) (undo-tree-id617 . -1367) (undo-tree-id618 . -1042) (undo-tree-id619 . -1042) (undo-tree-id620 . -1043) (undo-tree-id621 . -1309) (undo-tree-id622 . -1445) (undo-tree-id623 . -1518) (undo-tree-id624 . -1680) (undo-tree-id625 . -23) (undo-tree-id626 . -23) (undo-tree-id627 . -23) (undo-tree-id628 . -23) (undo-tree-id629 . -23) (undo-tree-id630 . -23) (undo-tree-id631 . -23) (undo-tree-id632 . -23) (undo-tree-id633 . -23) (undo-tree-id634 . -23) (undo-tree-id635 . -1716) (undo-tree-id636 . -1642) (undo-tree-id637 . -1716) (t 25299 47020 336978 911000)) nil (25299 47036 422246 0) 0 nil])
([nil nil ((#("

" 0 1 (fontified t) 1 2 (fontified t)) . 11500) (undo-tree-id478 . -2) (undo-tree-id479 . -2) (undo-tree-id480 . -2) (undo-tree-id481 . -2) (undo-tree-id482 . -2) (undo-tree-id483 . -2) (undo-tree-id484 . -2) (undo-tree-id485 . -2) (undo-tree-id486 . -2) (undo-tree-id487 . -2) (undo-tree-id488 . -2) (undo-tree-id489 . -2) (undo-tree-id490 . -2) (undo-tree-id491 . -2) (undo-tree-id492 . -2) (undo-tree-id493 . -2) (undo-tree-id494 . -2) (undo-tree-id495 . -2) (undo-tree-id496 . -2) (undo-tree-id497 . -2) (undo-tree-id498 . -2) (undo-tree-id499 . -2) (undo-tree-id500 . -2) (undo-tree-id501 . -2) (undo-tree-id502 . -2) (undo-tree-id503 . -2) (undo-tree-id504 . -2) (undo-tree-id505 . -2) (undo-tree-id506 . -2) (undo-tree-id507 . -2) (undo-tree-id508 . -2) (undo-tree-id509 . -2) (undo-tree-id510 . -2) (undo-tree-id511 . -2) (undo-tree-id512 . -2) (undo-tree-id513 . -2) (undo-tree-id514 . -2) (undo-tree-id515 . -2) (undo-tree-id516 . -2) (undo-tree-id517 . -2) (undo-tree-id518 . -2) (undo-tree-id519 . -2) (undo-tree-id520 . -2) (undo-tree-id521 . -2) (undo-tree-id522 . -2) (undo-tree-id523 . -2) (undo-tree-id524 . -2) (undo-tree-id525 . -2) (undo-tree-id526 . -2) (undo-tree-id527 . -2) (undo-tree-id528 . -2) (undo-tree-id529 . -2) (undo-tree-id530 . -2) (undo-tree-id531 . -2) (undo-tree-id532 . -2) (undo-tree-id533 . -2) (undo-tree-id534 . -2) (undo-tree-id535 . -2) (undo-tree-id536 . -2) (undo-tree-id537 . -2) (undo-tree-id538 . -2) (undo-tree-id539 . -2) (undo-tree-id540 . -2) (undo-tree-id541 . -2) (undo-tree-id542 . -2) (undo-tree-id543 . -2) (undo-tree-id544 . -2) (undo-tree-id545 . -2) (undo-tree-id546 . -2) (undo-tree-id547 . -2) (undo-tree-id548 . -2) (undo-tree-id549 . -2) (undo-tree-id550 . -2) (undo-tree-id551 . -2) (undo-tree-id552 . -2) (undo-tree-id553 . -2) (undo-tree-id554 . -2) (undo-tree-id555 . -2) (undo-tree-id556 . -2) (undo-tree-id557 . -2) (undo-tree-id558 . -2) (undo-tree-id559 . -2) (undo-tree-id560 . -2) (undo-tree-id561 . -2) (undo-tree-id562 . -2) (undo-tree-id563 . -2) (undo-tree-id564 . -2) (undo-tree-id565 . -2) (undo-tree-id566 . -2) (undo-tree-id567 . -2) (undo-tree-id568 . -2) (undo-tree-id569 . -2) (undo-tree-id570 . -2) (undo-tree-id571 . -2) (undo-tree-id572 . -2) (undo-tree-id573 . -2) (undo-tree-id574 . -2) (undo-tree-id575 . -2) (undo-tree-id576 . -2) (undo-tree-id577 . -2) (undo-tree-id578 . -2) (undo-tree-id579 . -2) (undo-tree-id580 . -2) (undo-tree-id581 . -2) (undo-tree-id582 . -2) (undo-tree-id583 . -2) (undo-tree-id584 . -2) (undo-tree-id585 . -2) (undo-tree-id586 . -2) (undo-tree-id587 . -2) (undo-tree-id588 . -2) (undo-tree-id589 . -2) (undo-tree-id590 . -2) (undo-tree-id591 . -2) (undo-tree-id592 . -2) (undo-tree-id593 . -2) (undo-tree-id594 . -2) (undo-tree-id595 . -2) (undo-tree-id596 . -2) (undo-tree-id597 . -2) (undo-tree-id598 . -2) (undo-tree-id599 . -2) (undo-tree-id600 . -2) (undo-tree-id601 . -2) 11502) nil (25299 47036 422215 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 11618) (11618 . 11619) (t 25299 47036 427243 968000) 11618) nil (25302 16402 656494 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -2840) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (undo-tree-id156 . -1) (undo-tree-id157 . -1) (undo-tree-id158 . -1) (undo-tree-id159 . -1) (undo-tree-id160 . -1) (undo-tree-id161 . -1) (undo-tree-id162 . -1) (undo-tree-id163 . -1) (undo-tree-id164 . -1) (undo-tree-id165 . -1) (undo-tree-id166 . -1) (undo-tree-id167 . -1) (undo-tree-id168 . -1) (undo-tree-id169 . -1) (undo-tree-id170 . -1) (undo-tree-id171 . -1) (undo-tree-id172 . -1) (undo-tree-id173 . -1) (undo-tree-id174 . -1) (undo-tree-id175 . -1) (undo-tree-id176 . -1) (undo-tree-id177 . -1) (undo-tree-id178 . -1) (undo-tree-id179 . -1) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1) (undo-tree-id183 . -1) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1) (undo-tree-id197 . -1) 2841) nil (25302 16402 656488 0) 0 nil])
([nil nil ((2840 . 2841)) nil (25302 16402 656365 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2310 . 2311) (nil fontified nil 2272 . 2311) (2272 . 2311) (#(":init (doom-modeline-mode t)" 0 5 (face font-lock-builtin-face fontified t) 5 6 (fontified t) 6 7 (face (rainbow-delimiters-depth-2-face) fontified t) 7 27 (fontified t) 27 28 (face (rainbow-delimiters-depth-2-face) fontified t)) . -2272) (undo-tree-id478 . -28) (undo-tree-id479 . -28) 2300 (t 25302 16402 661849 270000)) nil (25302 19042 30894 0) 0 nil])
([nil nil ((#("nil" 0 3 (fontified t)) . -5762) (undo-tree-id198 . -3) (undo-tree-id199 . -2) (undo-tree-id200 . -3) (undo-tree-id201 . -3) (undo-tree-id202 . -3) (undo-tree-id203 . -3) (undo-tree-id204 . -3) (undo-tree-id205 . -3) (undo-tree-id206 . -3) (undo-tree-id207 . -3) (undo-tree-id208 . -3) (undo-tree-id209 . -3) (undo-tree-id210 . -3) (undo-tree-id211 . -3) (undo-tree-id212 . -3) (undo-tree-id213 . -3) (undo-tree-id214 . -3) (undo-tree-id215 . -3) (undo-tree-id216 . -3) (undo-tree-id217 . -3) (undo-tree-id218 . -3) (undo-tree-id219 . -3) (undo-tree-id220 . -3) (undo-tree-id221 . -3) (undo-tree-id222 . -3) (undo-tree-id223 . -3) (undo-tree-id224 . -3) (undo-tree-id225 . -3) (undo-tree-id226 . -3) (undo-tree-id227 . -3) (undo-tree-id228 . -3) (undo-tree-id229 . -3) (undo-tree-id230 . -3) (undo-tree-id231 . -3) (undo-tree-id232 . -3) (undo-tree-id233 . -3) (undo-tree-id234 . -3) (undo-tree-id235 . -3) (undo-tree-id236 . -3) (undo-tree-id237 . -3) (undo-tree-id238 . -3) (undo-tree-id239 . -3) (undo-tree-id240 . -3) (undo-tree-id241 . -3) (undo-tree-id242 . -3) (undo-tree-id243 . -3) (undo-tree-id244 . -3) (undo-tree-id245 . -3) (undo-tree-id246 . -3) (undo-tree-id247 . -3) (undo-tree-id248 . -3) (undo-tree-id249 . -3) (undo-tree-id250 . -3) (undo-tree-id251 . -3) (undo-tree-id252 . -3) (undo-tree-id253 . -3) (undo-tree-id254 . -3) (undo-tree-id255 . -3) (undo-tree-id256 . -3) (undo-tree-id257 . -3) (undo-tree-id258 . -3) (undo-tree-id259 . -3) (undo-tree-id260 . -3) (undo-tree-id261 . -3) (undo-tree-id262 . -3) (undo-tree-id263 . -3) (undo-tree-id264 . -3) (undo-tree-id265 . -3) (undo-tree-id266 . -3) (undo-tree-id267 . -3) (undo-tree-id268 . -3) (undo-tree-id269 . -3) (undo-tree-id270 . -3) (undo-tree-id271 . -3) (undo-tree-id272 . -3) (undo-tree-id273 . -3) (undo-tree-id274 . -3) (undo-tree-id275 . -3) (undo-tree-id276 . -3) (undo-tree-id277 . -3) (undo-tree-id278 . -3) (undo-tree-id279 . -3) (undo-tree-id280 . -3) (undo-tree-id281 . -3) (undo-tree-id282 . -3) (undo-tree-id283 . -3) (undo-tree-id284 . -3) (undo-tree-id285 . -3) (undo-tree-id286 . -3) (undo-tree-id287 . -3) (undo-tree-id288 . -3) (undo-tree-id289 . -3) (undo-tree-id290 . -3) (undo-tree-id291 . -3) (undo-tree-id292 . -3) (undo-tree-id293 . -3) (undo-tree-id294 . -3) (undo-tree-id295 . -3) (undo-tree-id296 . -3) (undo-tree-id297 . -3) (undo-tree-id298 . -3) (undo-tree-id299 . -3) (undo-tree-id300 . -3) (undo-tree-id301 . -3) (undo-tree-id302 . -3) (undo-tree-id303 . -3) (undo-tree-id304 . -3) (undo-tree-id305 . -3) (undo-tree-id306 . -3) (undo-tree-id307 . -3) (undo-tree-id308 . -3) (undo-tree-id309 . -3) (undo-tree-id310 . -3) (undo-tree-id311 . -3) (undo-tree-id312 . -3) (undo-tree-id313 . -3) (undo-tree-id314 . -3) (undo-tree-id315 . -3) (undo-tree-id316 . -3) (undo-tree-id317 . -3) (undo-tree-id318 . -3) (undo-tree-id319 . -3) (undo-tree-id320 . -3) (undo-tree-id321 . -3) (undo-tree-id322 . -3) (undo-tree-id323 . -3) (undo-tree-id324 . -3) (undo-tree-id325 . -3) (undo-tree-id326 . -3) (undo-tree-id327 . -3) (undo-tree-id328 . -3) (undo-tree-id329 . -3) (undo-tree-id330 . -3) (undo-tree-id331 . -3) (undo-tree-id332 . -3) (undo-tree-id333 . -3) (undo-tree-id334 . -3) (undo-tree-id335 . -3) (undo-tree-id336 . -3) (undo-tree-id337 . -3) (undo-tree-id338 . -3) (undo-tree-id339 . -3) (undo-tree-id340 . -3) (undo-tree-id341 . -3) (undo-tree-id342 . -3) (undo-tree-id343 . -3) (undo-tree-id344 . -3) (undo-tree-id345 . -3) (undo-tree-id346 . -3) (undo-tree-id347 . -3) (undo-tree-id348 . -3) (undo-tree-id349 . -3) (undo-tree-id350 . -3) (undo-tree-id351 . -3) (undo-tree-id352 . -3) (undo-tree-id353 . -3) (undo-tree-id354 . -3) (undo-tree-id355 . -3) (undo-tree-id356 . -3) (undo-tree-id357 . -3) (undo-tree-id358 . -3) (undo-tree-id359 . -3) (undo-tree-id360 . -3) (undo-tree-id361 . -3) (undo-tree-id362 . -3) (undo-tree-id363 . -3) (undo-tree-id364 . -3) (undo-tree-id365 . -3) (undo-tree-id366 . -3) (undo-tree-id367 . -3) (undo-tree-id368 . -3) (undo-tree-id369 . -3) (undo-tree-id370 . -3) (undo-tree-id371 . -3) (undo-tree-id372 . -3) (undo-tree-id373 . -3) (undo-tree-id374 . -3) (undo-tree-id375 . -3) (undo-tree-id376 . -3) (undo-tree-id377 . -3) (undo-tree-id378 . -3) (undo-tree-id379 . -3) (undo-tree-id380 . -3) (undo-tree-id381 . -3) (undo-tree-id382 . -3) (undo-tree-id383 . -3) (undo-tree-id384 . -3) (undo-tree-id385 . -3) (undo-tree-id386 . -3) (undo-tree-id387 . -3) (undo-tree-id388 . -3) (undo-tree-id389 . -3) (undo-tree-id390 . -3) (undo-tree-id391 . -3) (undo-tree-id392 . -3) (undo-tree-id393 . -3) (undo-tree-id394 . -3) (undo-tree-id395 . -3) (undo-tree-id396 . -3) (undo-tree-id397 . -3) (undo-tree-id398 . -3) (undo-tree-id399 . -3) (undo-tree-id400 . -3) (undo-tree-id401 . -3) (undo-tree-id402 . -3) (undo-tree-id403 . -3) (undo-tree-id404 . -3) (undo-tree-id405 . -3) (undo-tree-id406 . -3) (undo-tree-id407 . -3) (undo-tree-id408 . -3) (undo-tree-id409 . -3) (undo-tree-id410 . -3) (undo-tree-id411 . -3) (undo-tree-id412 . -3) (undo-tree-id413 . -3) (undo-tree-id414 . -3) (undo-tree-id415 . -3) (undo-tree-id416 . -3) (undo-tree-id417 . -3) (undo-tree-id418 . -3) (undo-tree-id419 . -3) (undo-tree-id420 . -3) (undo-tree-id421 . -3) (undo-tree-id422 . -3) (undo-tree-id423 . -3) (undo-tree-id424 . -3) (undo-tree-id425 . -3) (undo-tree-id426 . -3) (undo-tree-id427 . -3) (undo-tree-id428 . -3) (undo-tree-id429 . -3) (undo-tree-id430 . -3) (undo-tree-id431 . -3) (undo-tree-id432 . -3) (undo-tree-id433 . -3) (undo-tree-id434 . -3) (undo-tree-id435 . -3) (undo-tree-id436 . -3) (undo-tree-id437 . -3) (undo-tree-id438 . -3) (undo-tree-id439 . -3) (undo-tree-id440 . -3) (undo-tree-id441 . -3) (undo-tree-id442 . -3) (undo-tree-id443 . -3) (undo-tree-id444 . -3) (undo-tree-id445 . -3) (undo-tree-id446 . -3) (undo-tree-id447 . -3) (undo-tree-id448 . -3) (undo-tree-id449 . -3) (undo-tree-id450 . -3) (undo-tree-id451 . -3) (undo-tree-id452 . -3) (undo-tree-id453 . -3) (undo-tree-id454 . -3) (undo-tree-id455 . -3) (undo-tree-id456 . -3) (undo-tree-id457 . -3) (undo-tree-id458 . -3) (undo-tree-id459 . -3) (undo-tree-id460 . -3) (undo-tree-id461 . -3) (undo-tree-id462 . -3) (undo-tree-id463 . -3) (undo-tree-id464 . -3) (undo-tree-id465 . -3) (undo-tree-id466 . -3) (undo-tree-id467 . -3) (undo-tree-id468 . -3) (undo-tree-id469 . -3) (undo-tree-id470 . -3) (undo-tree-id471 . -3) (undo-tree-id472 . -3) (undo-tree-id473 . -3) (undo-tree-id474 . -3) (undo-tree-id475 . -3) (undo-tree-id476 . -3) (undo-tree-id477 . -3) 5765) nil (25302 19042 30885 0) 0 nil])
([nil nil ((5762 . 5763)) nil (25302 19042 30742 0) 0 nil])
([nil nil ((#("t" 0 1 (fontified t)) . -5762) (undo-tree-id0 . -1) 5763 (t 25302 19042 34970 47000)) nil (25302 19081 537389 0) 0 nil])
([nil nil ((5762 . 5765)) nil (25302 19081 537367 0) 0 nil])
([nil nil ((2323 . 2325) (#("  " 0 2 (fontified nil)) . 2322) (2322 . 2324) (2322 . 2323) (t 25302 19081 541454 192000)) nil (25302 19105 549126 0) 0 nil])
([nil nil ((#("

  " 0 1 (fontified t) 1 4 (fontified t)) . 2321) (undo-tree-id123 . -2) (undo-tree-id124 . -4) (undo-tree-id125 . -1) (undo-tree-id126 . -1) 2325) nil (25302 19105 549124 0) 0 nil])
([nil nil ((2321 . 2324)) nil (25302 19105 549121 0) 0 nil])
([nil nil ((2325 . 2327) (2324 . 2326)) nil (25302 19105 549120 0) 0 nil])
([nil nil ((2325 . 2332) (#("re" 0 2 (fontified t)) . -2325) (undo-tree-id121 . -2) (undo-tree-id122 . -2) 2327) nil (25302 19105 549119 0) 0 nil])
([nil nil ((2332 . 2337)) nil (25302 19105 549117 0) 0 nil])
([nil nil ((2334 . 2347) (#("all" 0 3 (face font-lock-constant-face fontified t)) . -2334) (undo-tree-id119 . -3) (undo-tree-id120 . -3) 2337) nil (25302 19105 549116 0) 0 nil])
([nil nil ((2348 . 2351)) nil (25302 19105 549113 0) 0 nil])
([nil current ((#("  " 0 2 (fontified t)) . 2349) (undo-tree-id1 . -2) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) (undo-tree-id7 . -2) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) (undo-tree-id22 . -2) (undo-tree-id23 . -2) (undo-tree-id24 . -2) (undo-tree-id25 . -2) (undo-tree-id26 . -2) (undo-tree-id27 . -2) (undo-tree-id28 . -2) (undo-tree-id29 . -2) (undo-tree-id30 . -2) (undo-tree-id31 . -2) (undo-tree-id32 . -2) (undo-tree-id33 . -2) (undo-tree-id34 . -2) (undo-tree-id35 . -2) (undo-tree-id36 . -2) (undo-tree-id37 . -2) (undo-tree-id38 . -2) (undo-tree-id39 . -2) (undo-tree-id40 . -2) (undo-tree-id41 . -2) (undo-tree-id42 . -2) (undo-tree-id43 . -2) (undo-tree-id44 . -2) (undo-tree-id45 . -2) (undo-tree-id46 . -2) (undo-tree-id47 . -2) (undo-tree-id48 . -2) (undo-tree-id49 . -2) (undo-tree-id50 . -2) (undo-tree-id51 . -2) (undo-tree-id52 . -2) (undo-tree-id53 . -2) (undo-tree-id54 . -2) (undo-tree-id55 . -2) (undo-tree-id56 . -2) (undo-tree-id57 . -2) (undo-tree-id58 . -2) (undo-tree-id59 . -2) (undo-tree-id60 . -2) (undo-tree-id61 . -2) (undo-tree-id62 . -2) (undo-tree-id63 . -2) (undo-tree-id64 . -2) (undo-tree-id65 . -2) (undo-tree-id66 . -2) (undo-tree-id67 . -2) (undo-tree-id68 . -2) (undo-tree-id69 . -2) (undo-tree-id70 . -2) (undo-tree-id71 . -2) (undo-tree-id72 . -2) (undo-tree-id73 . -2) (undo-tree-id74 . -2) (undo-tree-id75 . -2) (undo-tree-id76 . -2) (undo-tree-id77 . -2) (undo-tree-id78 . -2) (undo-tree-id79 . -2) (undo-tree-id80 . -2) (undo-tree-id81 . -2) (undo-tree-id82 . -2) (undo-tree-id83 . -2) (undo-tree-id84 . -2) (undo-tree-id85 . -2) (undo-tree-id86 . -2) (undo-tree-id87 . -2) (undo-tree-id88 . -2) (undo-tree-id89 . -2) (undo-tree-id90 . -2) (undo-tree-id91 . -2) (undo-tree-id92 . -2) (undo-tree-id93 . -2) (undo-tree-id94 . -2) (undo-tree-id95 . -2) (undo-tree-id96 . -2) (undo-tree-id97 . -2) (undo-tree-id98 . -2) (undo-tree-id99 . -2) (undo-tree-id100 . -2) (undo-tree-id101 . -2) (undo-tree-id102 . -2) (undo-tree-id103 . -2) (undo-tree-id104 . -2) (undo-tree-id105 . -2) (undo-tree-id106 . -2) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) 2351) nil (25302 19105 549106 0) 0 nil])
nil
