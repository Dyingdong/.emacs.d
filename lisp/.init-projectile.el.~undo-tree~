(undo-tree-save-format-version . 1)
"ef128da04cf6eea76d74b4b96e08740b06979126"
[nil nil nil nil (25302 22084 843216 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 103 . 104) (nil fontified nil 1 . 104) (1 . 104) (t 25302 22084 845803 171000)) nil (25302 22115 401251 0) 0 nil])
([nil nil ((1 . 2)) nil (25302 22137 808665 0) 0 nil] [nil nil ((71 . 72) 2) ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 71) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1)) (25302 22115 401202 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1068 . 1069) (nil fontified nil 1 . 1069) (1 . 1069)) nil (25302 22137 808665 0) 0 nil])
nil
([nil nil ((1069 . 1070)) nil (25302 22137 808663 0) 0 nil])
([nil nil ((#(";; Copyright (C) 2010-2022 Vincent Zhang

;; Author: Vincent Zhang <seagle0128@gmail.com>
;; URL: https://github.com/seagle0128/.emacs.d

;; This file is not part of GNU Emacs.
;;
;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License as
;; published by the Free Software Foundation; either version 3, or
;; (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with this program; see the file COPYING.  If not, write to
;; the Free Software Foundation, Inc., 51 Franklin Street, Fifth
;; Floor, Boston, MA 02110-1301, USA.
;;" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 41 (face font-lock-comment-face fontified t) 41 42 (fontified t) 42 45 (face font-lock-comment-delimiter-face fontified t) 45 90 (face font-lock-comment-face fontified t) 90 93 (face font-lock-comment-delimiter-face fontified t) 93 137 (face font-lock-comment-face fontified t) 137 138 (fontified t) 138 141 (face font-lock-comment-delimiter-face fontified t) 141 177 (face font-lock-comment-face fontified t) 177 179 (face font-lock-comment-delimiter-face fontified t) 179 180 (face font-lock-comment-face fontified t) 180 183 (face font-lock-comment-delimiter-face fontified t) 183 245 (face font-lock-comment-face fontified t) 245 248 (face font-lock-comment-delimiter-face fontified t) 248 311 (face font-lock-comment-face fontified t) 311 314 (face font-lock-comment-delimiter-face fontified t) 314 378 (face font-lock-comment-face fontified t) 378 381 (face font-lock-comment-delimiter-face fontified t) 381 417 (face font-lock-comment-face fontified t) 417 419 (face font-lock-comment-delimiter-face fontified t) 419 420 (face font-lock-comment-face fontified t) 420 423 (face font-lock-comment-delimiter-face fontified t) 423 487 (face font-lock-comment-face fontified t) 487 490 (face font-lock-comment-delimiter-face fontified t) 490 553 (face font-lock-comment-face fontified t) 553 556 (face font-lock-comment-delimiter-face fontified t) 556 622 (face font-lock-comment-face fontified t) 622 625 (face font-lock-comment-delimiter-face fontified t) 625 666 (face font-lock-comment-face fontified t) 666 668 (face font-lock-comment-delimiter-face fontified t) 668 669 (face font-lock-comment-face fontified t) 669 672 (face font-lock-comment-delimiter-face fontified t) 672 738 (face font-lock-comment-face fontified t) 738 741 (face font-lock-comment-delimiter-face fontified t) 741 806 (face font-lock-comment-face fontified t) 806 809 (face font-lock-comment-delimiter-face fontified t) 809 871 (face font-lock-comment-face fontified t) 871 874 (face font-lock-comment-delimiter-face fontified t) 874 909 (face font-lock-comment-face fontified t) 909 911 (face font-lock-comment-delimiter-face fontified t)) . 93) (undo-tree-id12 . -41) (undo-tree-id13 . -911) (undo-tree-id14 . -911) (undo-tree-id15 . -911)) nil (25302 22137 808662 0) 0 nil])
([nil nil ((#("

" 0 1 (face font-lock-comment-face fontified t) 1 2 (fontified t)) . 91) (undo-tree-id8 . -2) (undo-tree-id9 . -2) (undo-tree-id10 . -2) (undo-tree-id11 . -2) 93) nil (25302 22137 808659 0) 0 nil])
([nil nil ((158 . 160) (157 . 159)) nil (25302 22137 808656 0) 0 nil])
([nil nil ((158 . 165) (#("re" 0 2 (fontified t)) . -158) (undo-tree-id6 . -2) (undo-tree-id7 . -2) 160) nil (25302 22137 808655 0) 0 nil])
([nil nil ((165 . 170)) nil (25302 22137 808652 0) 0 nil])
([nil nil ((170 . 172)) nil (25302 22137 808652 0) 0 nil])
([nil nil ((167 . 185) (#("init-" 0 5 (face font-lock-constant-face fontified t)) . -167) (undo-tree-id4 . -5) (undo-tree-id5 . -5) 172) nil (25302 22137 808650 0) 0 nil])
([nil nil ((186 . 187)) nil (25302 22137 808642 0) 0 nil])
([nil current ((291 . 292) 187) nil (25302 22137 808638 0) 0 nil])
nil
