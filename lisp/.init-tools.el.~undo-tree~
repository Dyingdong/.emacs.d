(undo-tree-save-format-version . 1)
"a7359b83d22285777ada326d53678c4808af856c"
[nil nil nil nil (25294 31497 207139 0) 0 nil]
([nil nil ((1315 . 1323) (#("      " 0 6 (fontified nil)) . 1315) (1306 . 1312) (#("    " 0 4 (fontified nil)) . 1306) (1291 . 1299) (#("    " 0 4 (fontified nil)) . 1291) (1257 . 1263) (#("    " 0 4 (fontified nil)) . 1257) (1238 . 1246) (#("    " 0 4 (fontified nil)) . 1238) (1174 . 1180) (#("    " 0 4 (fontified nil)) . 1174) (1157 . 1165) (#("    " 0 4 (fontified nil)) . 1157) (1121 . 1127) (#("    " 0 4 (fontified nil)) . 1121) (1103 . 1111) (#("    " 0 4 (fontified nil)) . 1103) (1066 . 1072) (#("    " 0 4 (fontified nil)) . 1066) (1049 . 1057) (#("    " 0 4 (fontified nil)) . 1049) (1000 . 1029) (#("          " 0 10 (fontified nil)) . 1000) (955 . 984) (#("          " 0 10 (fontified nil)) . 955) (910 . 939) (#("          " 0 10 (fontified nil)) . 910) (866 . 895) (#("          " 0 10 (fontified nil)) . 866) (821 . 850) (#("          " 0 10 (fontified nil)) . 821) (774 . 803) (#("          " 0 10 (fontified nil)) . 774) (727 . 736) (#("  " 0 2 (fontified nil)) . 727) (667 . 673) (#("    " 0 4 (fontified nil)) . 667) (657 . 661) (649 . 651) (339 . 341) (888 . 894) (#("			" 0 3 (fontified nil)) . -888) (862 . 868) (#("			" 0 3 (fontified nil)) . -862) (836 . 842) (#("			" 0 3 (fontified nil)) . -836) (811 . 817) (#("			" 0 3 (fontified nil)) . -811) (785 . 791) (#("			" 0 3 (fontified nil)) . -785) (757 . 763) (#("			" 0 3 (fontified nil)) . -757) (717 . 719) (#("	" 0 1 (fontified nil)) . -717) 302 (t 25284 19232 892467 816000)) nil (25294 31497 207136 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 279) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) 280) nil (25294 31497 207125 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 300) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) 301) nil (25294 31497 207122 0) 0 nil])
([nil nil ((1371 . 1372)) nil (25294 31498 662183 0) 0 nil])
([nil nil ((1372 . 1374)) nil (25294 31516 442941 0) 0 nil] [nil nil ((1373 . 1376) (1372 . 1374)) ((#("（）" 0 1 (fontified nil) 1 2 (fontified nil)) . 1372) (undo-tree-id292 . -1) (undo-tree-id293 . 2) (undo-tree-id294 . -1) (undo-tree-id295 . 1) (undo-tree-id296 . -2) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) (undo-tree-id317 . -1) (undo-tree-id318 . -1) (undo-tree-id319 . -1) (undo-tree-id320 . -1) (undo-tree-id321 . -1) (undo-tree-id322 . -1) (undo-tree-id323 . -1) (undo-tree-id324 . -1) (undo-tree-id325 . -1) (undo-tree-id326 . -1) (undo-tree-id327 . -1) (undo-tree-id328 . -1) (undo-tree-id329 . -1) (undo-tree-id330 . -1) (undo-tree-id331 . -1) (undo-tree-id332 . -1) (undo-tree-id333 . -1) (undo-tree-id334 . -1) (undo-tree-id335 . -1) (undo-tree-id336 . -1) (undo-tree-id337 . -1) (undo-tree-id338 . -1) (undo-tree-id339 . -1) (undo-tree-id340 . -1) (undo-tree-id341 . -1) (undo-tree-id342 . -1) (undo-tree-id343 . -1) (undo-tree-id344 . -1) (undo-tree-id345 . -1) (undo-tree-id346 . -1) (undo-tree-id347 . -1) (undo-tree-id348 . -1) (undo-tree-id349 . -1) (undo-tree-id350 . -1) (undo-tree-id351 . -1) (undo-tree-id352 . -1) (undo-tree-id353 . -1) (undo-tree-id354 . -1) (undo-tree-id355 . -1) (undo-tree-id356 . -1) (undo-tree-id357 . -1) (undo-tree-id358 . -1) (undo-tree-id359 . -1) (undo-tree-id360 . -1) (undo-tree-id361 . -1) (undo-tree-id362 . -1) (undo-tree-id363 . -1) (undo-tree-id364 . -1) (undo-tree-id365 . -1) (undo-tree-id366 . -1) (undo-tree-id367 . -1) (undo-tree-id368 . -1) (undo-tree-id369 . -1) (undo-tree-id370 . -1) (undo-tree-id371 . -1) (undo-tree-id372 . -1) (undo-tree-id373 . -1) (undo-tree-id374 . -1) (undo-tree-id375 . -1) (undo-tree-id376 . -1) (undo-tree-id377 . -1) (undo-tree-id378 . -1) (undo-tree-id379 . -1) (undo-tree-id380 . -1) (undo-tree-id381 . -1) (undo-tree-id382 . -1) (undo-tree-id383 . -1) (undo-tree-id384 . -1) (undo-tree-id385 . -1) (undo-tree-id386 . -1) (undo-tree-id387 . -1) (undo-tree-id388 . -1) (undo-tree-id389 . -1) (undo-tree-id390 . -1) (undo-tree-id391 . -1) (undo-tree-id392 . -1) (undo-tree-id393 . -1) (undo-tree-id394 . -1) (undo-tree-id395 . -1) (undo-tree-id396 . -1) (undo-tree-id397 . -1) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) (undo-tree-id438 . -1) (undo-tree-id439 . -1) (undo-tree-id440 . -1) (undo-tree-id441 . -1) (undo-tree-id442 . -1) (undo-tree-id443 . -1) (undo-tree-id444 . -1) (undo-tree-id445 . -1) (undo-tree-id446 . -1) (undo-tree-id447 . -1) (undo-tree-id448 . -1) (undo-tree-id449 . -1) (undo-tree-id450 . -1) (undo-tree-id451 . -1) (undo-tree-id452 . -1) (undo-tree-id453 . -1) (undo-tree-id454 . -1) (undo-tree-id455 . -1) (undo-tree-id456 . -1) (undo-tree-id457 . -1) (undo-tree-id458 . -1) (undo-tree-id459 . -1) (undo-tree-id460 . -1) (undo-tree-id461 . -1) (undo-tree-id462 . -1) (undo-tree-id463 . -1) (undo-tree-id464 . -1) (undo-tree-id465 . -1) (undo-tree-id466 . -1) (undo-tree-id467 . -1) (undo-tree-id468 . -1) (undo-tree-id469 . -1) (undo-tree-id470 . -1) (undo-tree-id471 . -1) (undo-tree-id472 . -1) (undo-tree-id473 . -1) (undo-tree-id474 . -1) (undo-tree-id475 . -1) (undo-tree-id476 . -1) (undo-tree-id477 . -1) (undo-tree-id478 . -1) (undo-tree-id479 . -1) (undo-tree-id480 . -1) (undo-tree-id481 . -1) (undo-tree-id482 . -1) (undo-tree-id483 . -1) (undo-tree-id484 . -1) (undo-tree-id485 . -1) (undo-tree-id486 . -1) (undo-tree-id487 . -1) (undo-tree-id488 . -1) (undo-tree-id489 . -1) (undo-tree-id490 . -1) (undo-tree-id491 . -1) (undo-tree-id492 . -1) (undo-tree-id493 . -1) (undo-tree-id494 . -1) (undo-tree-id495 . -1) (undo-tree-id496 . -1) (undo-tree-id497 . -1) (undo-tree-id498 . -1) (undo-tree-id499 . -1) (undo-tree-id500 . -1) (undo-tree-id501 . -1) (undo-tree-id502 . -1) (undo-tree-id503 . -1) (undo-tree-id504 . -1) (undo-tree-id505 . -1) (undo-tree-id506 . -1) (undo-tree-id507 . -1) (undo-tree-id508 . -1) (undo-tree-id509 . -1) (undo-tree-id510 . -1) (undo-tree-id511 . -1) (undo-tree-id512 . -1) (undo-tree-id513 . -1) (undo-tree-id514 . -1) (undo-tree-id515 . -1) (undo-tree-id516 . -1) (undo-tree-id517 . -1) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) (undo-tree-id558 . -1) (undo-tree-id559 . -1) (undo-tree-id560 . -1) (undo-tree-id561 . -1) (undo-tree-id562 . -1) (undo-tree-id563 . -1) (undo-tree-id564 . -1) (undo-tree-id565 . -1) (undo-tree-id566 . -1) (undo-tree-id567 . -1) (undo-tree-id568 . -1) (undo-tree-id569 . -1) (undo-tree-id570 . -1) (undo-tree-id571 . -1) (undo-tree-id572 . -1) (undo-tree-id573 . -1) (undo-tree-id574 . -1) (undo-tree-id575 . -1) (undo-tree-id576 . -1) (undo-tree-id577 . -1) (undo-tree-id578 . -1) (undo-tree-id579 . -1) (undo-tree-id580 . -1) (undo-tree-id581 . -1) (undo-tree-id582 . -1) (undo-tree-id583 . -1) (undo-tree-id584 . -1) (undo-tree-id585 . -1) (undo-tree-id586 . -1) (undo-tree-id587 . -1) (undo-tree-id588 . -1) (undo-tree-id589 . -1) (undo-tree-id590 . -1) (undo-tree-id591 . -1) (undo-tree-id592 . -1) (undo-tree-id593 . -1) (undo-tree-id594 . -1) (undo-tree-id595 . -1) (undo-tree-id596 . -1) (undo-tree-id597 . -1) (undo-tree-id598 . -1) (undo-tree-id599 . -1) (undo-tree-id600 . -1) (undo-tree-id601 . -1) (undo-tree-id602 . -1) (undo-tree-id603 . -1) (undo-tree-id604 . -1) (undo-tree-id605 . -1) (undo-tree-id606 . -1) (undo-tree-id607 . -1) (undo-tree-id608 . -1) (undo-tree-id609 . -1) (undo-tree-id610 . -1) (undo-tree-id611 . -1) (undo-tree-id612 . -1) (undo-tree-id613 . -1) (undo-tree-id614 . -1) (undo-tree-id615 . -1) (undo-tree-id616 . -1) (undo-tree-id617 . -1) (undo-tree-id618 . -1) (undo-tree-id619 . -1) (undo-tree-id620 . -1) (undo-tree-id621 . -1) (undo-tree-id622 . -1) (undo-tree-id623 . -1) (undo-tree-id624 . -1) (undo-tree-id625 . -1) (undo-tree-id626 . -1) (undo-tree-id627 . -1) (undo-tree-id628 . -1) (undo-tree-id629 . -1) (undo-tree-id630 . -1) (undo-tree-id631 . -1) (undo-tree-id632 . -1) (undo-tree-id633 . -1) (undo-tree-id634 . -1) (undo-tree-id635 . -1) (undo-tree-id636 . -1) (undo-tree-id637 . -1) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) (undo-tree-id678 . -1) (undo-tree-id679 . -1) (undo-tree-id680 . -1) (undo-tree-id681 . -1) (undo-tree-id682 . -1) (undo-tree-id683 . -1) (undo-tree-id684 . -1) (undo-tree-id685 . -1) (undo-tree-id686 . -1) (undo-tree-id687 . -1) (undo-tree-id688 . -1) (undo-tree-id689 . -1) (undo-tree-id690 . -1) (undo-tree-id691 . -1) (undo-tree-id692 . -1) (undo-tree-id693 . -1) (undo-tree-id694 . -1) (undo-tree-id695 . -1) (undo-tree-id696 . -1) (undo-tree-id697 . -1) (undo-tree-id698 . -1) (undo-tree-id699 . -1) (undo-tree-id700 . -1) (undo-tree-id701 . -1) (undo-tree-id702 . -1) (undo-tree-id703 . -1) (undo-tree-id704 . -1) (undo-tree-id705 . -1) (undo-tree-id706 . -1) (undo-tree-id707 . -1) (undo-tree-id708 . -1) (undo-tree-id709 . -1) (undo-tree-id710 . -1) (undo-tree-id711 . -1) (undo-tree-id712 . -1) (#("req" 0 3 (fontified t)) . 1373) (undo-tree-id713 . -3) (undo-tree-id714 . -3) (undo-tree-id715 . -3) (undo-tree-id716 . -3) (undo-tree-id717 . -3) (undo-tree-id718 . -3) (undo-tree-id719 . -3) (undo-tree-id720 . -3) (undo-tree-id721 . -3) (undo-tree-id722 . -3) (undo-tree-id723 . -3) (undo-tree-id724 . -3) (undo-tree-id725 . -3) (undo-tree-id726 . -3) (undo-tree-id727 . -3) (undo-tree-id728 . -3) (undo-tree-id729 . -3) (undo-tree-id730 . -3) (undo-tree-id731 . -3) (undo-tree-id732 . -3) (undo-tree-id733 . -3) (undo-tree-id734 . -3) (undo-tree-id735 . -3) (undo-tree-id736 . -3) (undo-tree-id737 . -3) (undo-tree-id738 . -3) (undo-tree-id739 . -3) (undo-tree-id740 . -3) (undo-tree-id741 . -3) (undo-tree-id742 . -3) (undo-tree-id743 . -3) (undo-tree-id744 . -3) (undo-tree-id745 . -3) (undo-tree-id746 . -3) (undo-tree-id747 . -3) (undo-tree-id748 . -3) (undo-tree-id749 . -3) (undo-tree-id750 . -3) (undo-tree-id751 . -3) (undo-tree-id752 . -3) (undo-tree-id753 . -3) (undo-tree-id754 . -3) (undo-tree-id755 . -3) (undo-tree-id756 . -3) (undo-tree-id757 . -3) (undo-tree-id758 . -3) (undo-tree-id759 . -3) (undo-tree-id760 . -3) (undo-tree-id761 . -3) (undo-tree-id762 . -3) (undo-tree-id763 . -3) (undo-tree-id764 . -3) (undo-tree-id765 . -3) (undo-tree-id766 . -3) (undo-tree-id767 . -3) (undo-tree-id768 . -3) (undo-tree-id769 . -3) (undo-tree-id770 . -3) (undo-tree-id771 . -3) (undo-tree-id772 . -3) (undo-tree-id773 . -3) (undo-tree-id774 . -3) (undo-tree-id775 . -3) (undo-tree-id776 . -3) (undo-tree-id777 . -3) (undo-tree-id778 . -3) (undo-tree-id779 . -3) (undo-tree-id780 . -3) (undo-tree-id781 . -3) (undo-tree-id782 . -3) (undo-tree-id783 . -3) (undo-tree-id784 . -3) (undo-tree-id785 . -3) (undo-tree-id786 . -3) (undo-tree-id787 . -3) (undo-tree-id788 . -3) (undo-tree-id789 . -3) (undo-tree-id790 . -3) (undo-tree-id791 . -3) (undo-tree-id792 . -3) (undo-tree-id793 . -3) (undo-tree-id794 . -3) (undo-tree-id795 . -3) (undo-tree-id796 . -3) (undo-tree-id797 . -3) (undo-tree-id798 . -3) (undo-tree-id799 . -3) (undo-tree-id800 . -3) (undo-tree-id801 . -3) (undo-tree-id802 . -3) (undo-tree-id803 . -3) (undo-tree-id804 . -3) (undo-tree-id805 . -3) (undo-tree-id806 . -3) (undo-tree-id807 . -3) (undo-tree-id808 . -3) (undo-tree-id809 . -3) (undo-tree-id810 . -3) (undo-tree-id811 . -3) (undo-tree-id812 . -3) (undo-tree-id813 . -3) (undo-tree-id814 . -3) (undo-tree-id815 . -3) (undo-tree-id816 . -3) (undo-tree-id817 . -3) (undo-tree-id818 . -3) (undo-tree-id819 . -3) (undo-tree-id820 . -3) (undo-tree-id821 . -3) (undo-tree-id822 . -3) (undo-tree-id823 . -3) (undo-tree-id824 . -3) (undo-tree-id825 . -3) (undo-tree-id826 . -3) (undo-tree-id827 . -3) (undo-tree-id828 . -3) (undo-tree-id829 . -3) (undo-tree-id830 . -3) (undo-tree-id831 . -3) (undo-tree-id832 . -3) (undo-tree-id833 . -3) (undo-tree-id834 . -3) (undo-tree-id835 . -3) (undo-tree-id836 . -3) (undo-tree-id837 . -3) (undo-tree-id838 . -3) (undo-tree-id839 . -3) (undo-tree-id840 . -3) (undo-tree-id841 . -3) (undo-tree-id842 . -3) (undo-tree-id843 . -3) (undo-tree-id844 . -3) (undo-tree-id845 . -3) (undo-tree-id846 . -3) (undo-tree-id847 . -3) (undo-tree-id848 . -3) (undo-tree-id849 . -3) (undo-tree-id850 . -3) (undo-tree-id851 . -3) (undo-tree-id852 . -3) (undo-tree-id853 . -3) (undo-tree-id854 . -3)) (25294 31498 172744 0) 0 nil])
([nil nil ((#("（" 0 1 (fontified nil)) . -1372) (undo-tree-id856 . -1) (undo-tree-id857 . 1) (undo-tree-id858 . -1) (undo-tree-id859 . -1) (#("）" 0 1 (fontified t)) . 1373) (undo-tree-id860 . 1) (undo-tree-id861 . -1)) nil (25294 31516 442939 0) 0 nil])
([nil nil ((1373 . 1380) (#("req" 0 3 (fontified t)) . -1373) (undo-tree-id3 . -3) 1376) ((1373 . 1376) (#("require" 0 6 (fontified t) 6 7 (fontified t)) . 1373) (undo-tree-id15 . -7) (undo-tree-id16 . -6) (undo-tree-id17 . -6) (undo-tree-id18 . -6) (undo-tree-id19 . -6) (undo-tree-id20 . -6) (undo-tree-id21 . -6) (undo-tree-id22 . -6) (undo-tree-id23 . -6) (undo-tree-id24 . -6) (undo-tree-id25 . -6) (undo-tree-id26 . -6) (undo-tree-id27 . -6) (undo-tree-id28 . -6) (undo-tree-id29 . -6) (undo-tree-id30 . -6) (undo-tree-id31 . -6) (undo-tree-id32 . -6) (undo-tree-id33 . -6) (undo-tree-id34 . -6) (undo-tree-id35 . -6) (undo-tree-id36 . -6) (undo-tree-id37 . -6) (undo-tree-id38 . -6) (undo-tree-id39 . -6) (undo-tree-id40 . -6) (undo-tree-id41 . -6) (undo-tree-id42 . -6) (undo-tree-id43 . -6) (undo-tree-id44 . -6) (undo-tree-id45 . -6) (undo-tree-id46 . -6) (undo-tree-id47 . -6) (undo-tree-id48 . -6) (undo-tree-id49 . -6) (undo-tree-id50 . -6) (undo-tree-id51 . -6) (undo-tree-id52 . -6) (undo-tree-id53 . -6) (undo-tree-id54 . -6) (undo-tree-id55 . -6) (undo-tree-id56 . -6) (undo-tree-id57 . -6) (undo-tree-id58 . -6) (undo-tree-id59 . -6) (undo-tree-id60 . -6) (undo-tree-id61 . -6) (undo-tree-id62 . -6) (undo-tree-id63 . -6) (undo-tree-id64 . -6) (undo-tree-id65 . -6) (undo-tree-id66 . -6) (undo-tree-id67 . -6) (undo-tree-id68 . -6) (undo-tree-id69 . -6) (undo-tree-id70 . -6) (undo-tree-id71 . -6) (undo-tree-id72 . -6) (undo-tree-id73 . -6) (undo-tree-id74 . -6) (undo-tree-id75 . -6) (undo-tree-id76 . -6) (undo-tree-id77 . -6) (undo-tree-id78 . -6) (undo-tree-id79 . -6) (undo-tree-id80 . -6) (undo-tree-id81 . -6) (undo-tree-id82 . -6) (undo-tree-id83 . -6) (undo-tree-id84 . -6) (undo-tree-id85 . -6) (undo-tree-id86 . -6) (undo-tree-id87 . -6) (undo-tree-id88 . -6) (undo-tree-id89 . -6) (undo-tree-id90 . -6) (undo-tree-id91 . -6) (undo-tree-id92 . -6) (undo-tree-id93 . -6) (undo-tree-id94 . -6) (undo-tree-id95 . -6) (undo-tree-id96 . -7) (undo-tree-id97 . -7) (undo-tree-id98 . -7) (undo-tree-id99 . -7) (undo-tree-id100 . -7) (undo-tree-id101 . -7) (undo-tree-id102 . -7) (undo-tree-id103 . -7) (undo-tree-id104 . -7) (undo-tree-id105 . -7) (undo-tree-id106 . -7) (undo-tree-id107 . -7) (undo-tree-id108 . -7) (undo-tree-id109 . -7) (undo-tree-id110 . -7) (undo-tree-id111 . -7) (undo-tree-id112 . -7) (undo-tree-id113 . -7) (undo-tree-id114 . -7) (undo-tree-id115 . -7) (undo-tree-id116 . -7) (undo-tree-id117 . -7) (undo-tree-id118 . -7) (undo-tree-id119 . -7) (undo-tree-id120 . -7) (undo-tree-id121 . -7) (undo-tree-id122 . -7) (undo-tree-id123 . -7) (undo-tree-id124 . -7) (undo-tree-id125 . -7) (undo-tree-id126 . -7) (undo-tree-id127 . -7) (undo-tree-id128 . -7) (undo-tree-id129 . -7) (undo-tree-id130 . -7) (undo-tree-id131 . -7) (undo-tree-id132 . -7) (undo-tree-id133 . -7) (undo-tree-id134 . -7) (undo-tree-id135 . -7) (undo-tree-id136 . -7) (undo-tree-id137 . -7) (undo-tree-id138 . -7) (undo-tree-id139 . -7) (undo-tree-id140 . -7) (undo-tree-id141 . -7) (undo-tree-id142 . -7) (undo-tree-id143 . -7) (undo-tree-id144 . -7) (undo-tree-id145 . -7) (undo-tree-id146 . -7) (undo-tree-id147 . -7) (undo-tree-id148 . -7) (undo-tree-id149 . -7) (undo-tree-id150 . -7) (undo-tree-id151 . -7) (undo-tree-id152 . -7) (undo-tree-id153 . -7) (undo-tree-id154 . -7) (undo-tree-id155 . -7) (undo-tree-id156 . -7) (undo-tree-id157 . -7) (undo-tree-id158 . -7) (undo-tree-id159 . -7) (undo-tree-id160 . -7) (undo-tree-id161 . -7) (undo-tree-id162 . -7) (undo-tree-id163 . -7) (undo-tree-id164 . -7) (undo-tree-id165 . -7) (undo-tree-id166 . -7) (undo-tree-id167 . -7) (undo-tree-id168 . -7) (undo-tree-id169 . -7) (undo-tree-id170 . -7) (undo-tree-id171 . -7) (undo-tree-id172 . -7) (undo-tree-id173 . -7) (undo-tree-id174 . -7) (undo-tree-id175 . -7) (undo-tree-id176 . -7) (undo-tree-id177 . -7) (undo-tree-id178 . -7) (undo-tree-id179 . -7) (undo-tree-id180 . -7) (undo-tree-id181 . -7) (undo-tree-id182 . -7) (undo-tree-id183 . -7) (undo-tree-id184 . -7) (undo-tree-id185 . -7) (undo-tree-id186 . -7) (undo-tree-id187 . -7) (undo-tree-id188 . -7) (undo-tree-id189 . -7) (undo-tree-id190 . -7) (undo-tree-id191 . -7) (undo-tree-id192 . -7) (undo-tree-id193 . -7) (undo-tree-id194 . -7) (undo-tree-id195 . -7) (undo-tree-id196 . -7) (undo-tree-id197 . -7) (undo-tree-id198 . -7) (undo-tree-id199 . -7) (undo-tree-id200 . -7) (undo-tree-id201 . -7) (undo-tree-id202 . -7) (undo-tree-id203 . -7) (undo-tree-id204 . -7) (undo-tree-id205 . -7) (undo-tree-id206 . -7) (undo-tree-id207 . -7) (undo-tree-id208 . -7) (undo-tree-id209 . -7) (undo-tree-id210 . -7) (undo-tree-id211 . -7) (undo-tree-id212 . -7) (undo-tree-id213 . -7) (undo-tree-id214 . -7) (undo-tree-id215 . -7) (undo-tree-id216 . -7) (undo-tree-id217 . -7) (undo-tree-id218 . -7) (undo-tree-id219 . -7) (undo-tree-id220 . -7) (undo-tree-id221 . -7) (undo-tree-id222 . -7) (undo-tree-id223 . -7) (undo-tree-id224 . -7) (undo-tree-id225 . -7) (undo-tree-id226 . -7) (undo-tree-id227 . -7) (undo-tree-id228 . -7) (undo-tree-id229 . -7) (undo-tree-id230 . -7) (undo-tree-id231 . -7) (undo-tree-id232 . -7) (undo-tree-id233 . -7) (undo-tree-id234 . -7) (undo-tree-id235 . -7) (undo-tree-id236 . -7) (undo-tree-id237 . -7) (undo-tree-id238 . -7) (undo-tree-id239 . -7) (undo-tree-id240 . -7) (undo-tree-id241 . -7) (undo-tree-id242 . -7) (undo-tree-id243 . -7) (undo-tree-id244 . -7) (undo-tree-id245 . -7) (undo-tree-id246 . -7) (undo-tree-id247 . -7) (undo-tree-id248 . -7) (undo-tree-id249 . -7) (undo-tree-id250 . -7) (undo-tree-id251 . -7) (undo-tree-id252 . -7) (undo-tree-id253 . -7) (undo-tree-id254 . -7) (undo-tree-id255 . -7) (undo-tree-id256 . -7) (undo-tree-id257 . -7) (undo-tree-id258 . -7) (undo-tree-id259 . -7) (undo-tree-id260 . -7) (undo-tree-id261 . -7) (undo-tree-id262 . -7) (undo-tree-id263 . -7) (undo-tree-id264 . -7) (undo-tree-id265 . -7) (undo-tree-id266 . -7) (undo-tree-id267 . -7) (undo-tree-id268 . -7) (undo-tree-id269 . -7) (undo-tree-id270 . -7) (undo-tree-id271 . -7) (undo-tree-id272 . -7) (undo-tree-id273 . -7) (undo-tree-id274 . -7) (undo-tree-id275 . -7) (undo-tree-id276 . -7) (undo-tree-id277 . -7) (undo-tree-id278 . -7) (undo-tree-id279 . -7) (undo-tree-id280 . -7) (undo-tree-id281 . -7) (undo-tree-id282 . -7) (undo-tree-id283 . -7) (undo-tree-id284 . -7) (undo-tree-id285 . -7) (undo-tree-id286 . -7) (undo-tree-id287 . -7) (undo-tree-id288 . -7) (undo-tree-id289 . -7) (undo-tree-id290 . -7) (undo-tree-id291 . -7)) (25294 31497 843892 0) 0 nil])
([nil nil ((1373 . 1378) (1372 . 1374)) nil (25294 31516 442933 0) 0 nil])
([nil nil ((1380 . 1382)) ((#(" '" 0 2 (fontified t)) . 1380)) (25294 31497 482947 0) 0 nil])
([nil nil ((1373 . 1380) (#("requi" 0 5 (fontified t)) . -1373) (undo-tree-id855 . -5) 1378) nil (25294 31516 442931 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1379) (undo-tree-id0 . -1) (undo-tree-id1 . 1) (undo-tree-id2 . -1) 1380) ((1379 . 1380)) (25294 31497 207180 0) 0 nil])
([nil nil ((1380 . 1390)) nil (25294 31516 442919 0) 0 nil])
([nil nil ((1379 . 1380)) ((#("e" 0 1 (fontified t)) . 1379) (undo-tree-id11 . -1) (undo-tree-id12 . 1) (undo-tree-id13 . -1) (undo-tree-id14 . -1)) (25294 31497 207089 0) 0 nil])
([nil nil ((1391 . 1392)) nil (25294 31516 442914 0) 0 nil])
nil
([nil nil ((nil rear-nonsticky nil 1432 . 1433) (nil fontified nil 1392 . 1433) (1392 . 1433) (t 25294 31516 447438 810000)) nil (25294 31524 651042 0) 0 nil])
([nil nil ((1433 . 1434)) nil (25294 31524 651037 0) 0 nil])
([nil nil ((#("awesome-tab" 0 11 (face font-lock-string-face fontified t)) . 241) (undo-tree-id862 . -11) (undo-tree-id863 . -11) 252 (t 25294 31524 654800 352000)) nil (25294 31562 270244 0) 0 nil])
([nil nil ((241 . 242) (t 25294 31562 273737 901000)) nil (25294 31681 698114 0) 0 nil])
([nil nil ((#("/" 0 1 (fontified nil)) . -252) (224 . 253) (#("~/.emacs.d/tools/a" 0 18 (face font-lock-string-face fontified t)) . -224) (undo-tree-id8 . -18) 242) nil (25294 31681 698113 0) 0 nil])
([nil nil ((205 . 206) (254 . 255) (#("(" 0 1 (fontified nil)) . -254) (254 . 255)) nil (25294 31681 698110 0) 0 nil])
([nil nil ((205 . 207) (#(" " 0 1 (fontified nil)) . 204) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (205 . 206)) nil (25294 31681 698109 0) 0 nil])
([nil nil ((208 . 209)) nil (25294 31681 698106 0) 0 nil])
([nil nil ((#("E" 0 1 (fontified t)) . -208) (undo-tree-id5 . -1) 209) nil (25294 31681 698105 0) 0 nil])
([nil nil ((257 . 262)) nil (25294 31681 698103 0) 0 nil])
([nil nil ((262 . 264)) nil (25294 31681 698102 0) 0 nil])
([nil nil ((263 . 266)) nil (25294 31681 698101 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified t)) . -265) (undo-tree-id4 . -1) 266) nil (25294 31681 698101 0) 0 nil])
([nil nil ((265 . 267)) nil (25294 31681 698099 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -266) (undo-tree-id3 . -1) 267) nil (25294 31681 698097 0) 0 nil])
([nil nil ((#("c" 0 1 (fontified nil)) . -267) (266 . 268)) nil (25294 31681 698095 0) 0 nil])
([nil nil ((#("a" 0 1 (fontified t)) . -266) (undo-tree-id2 . -1) 267) nil (25294 31681 698094 0) 0 nil])
([nil nil ((266 . 269)) nil (25294 31681 698091 0) 0 nil])
([nil nil ((269 . 274)) nil (25294 31681 698090 0) 0 nil])
([nil nil ((263 . 279) (#("expand-file" 0 11 (fontified t)) . -263) (undo-tree-id0 . -11) (undo-tree-id1 . -11) 274) nil (25294 31681 698088 0) 0 nil])
([nil nil ((280 . 282) (#("\"" 0 1 (fontified nil)) . -280) (279 . 281)) nil (25294 31681 698060 0) 0 nil])
([nil nil ((180 . 181) (t 25294 31681 702037 328000)) nil (25294 32931 291724 0) 0 nil])
([nil nil ((182 . 199) (181 . 183)) nil (25294 32931 291722 0) 0 nil])
([nil nil ((191 . 202) (#("init-cus" 0 8 (fontified t face font-lock-constant-face)) . -191) (undo-tree-id25 . -8) 199) nil (25294 32931 291721 0) 0 nil])
([nil nil ((203 . 204)) nil (25294 32931 291719 0) 0 nil])
([nil nil ((#("~" 0 1 (fontified t face font-lock-string-face)) . -251) (undo-tree-id8 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -252) (undo-tree-id9 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -253) (undo-tree-id10 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -254) (undo-tree-id11 . -1) (#("m" 0 1 (fontified t face font-lock-string-face)) . -255) (undo-tree-id12 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -256) (undo-tree-id13 . -1) (#("c" 0 1 (fontified t face font-lock-string-face)) . -257) (undo-tree-id14 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -258) (undo-tree-id15 . -1) (#("." 0 1 (fontified t face font-lock-string-face)) . -259) (undo-tree-id16 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -260) (undo-tree-id17 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -261) (undo-tree-id18 . -1) (#("t" 0 1 (fontified t face font-lock-string-face)) . -262) (undo-tree-id19 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -263) (undo-tree-id20 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -264) (undo-tree-id21 . -1) (#("l" 0 1 (fontified t face font-lock-string-face)) . -265) (undo-tree-id22 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -266) (undo-tree-id23 . -1) (#("/" 0 1 (fontified t face font-lock-string-face)) . -267) (undo-tree-id24 . -1) 268) nil (25294 32931 291716 0) 0 nil])
([nil nil ((263 . 270)) nil (25294 32931 291698 0) 0 nil])
([nil nil ((264 . 294) (#("dragon" 0 6 (fontified t)) . -264) (undo-tree-id7 . -6) 270) nil (25294 32931 291697 0) 0 nil])
([nil nil ((319 . 322)) nil (25294 32931 291695 0) 0 nil])
([nil nil ((322 . 326)) nil (25294 32931 291694 0) 0 nil])
([nil nil ((#("m" 0 1 (fontified t face font-lock-string-face)) . -322) (undo-tree-id3 . -1) (#("o" 0 1 (fontified t face font-lock-string-face)) . -323) (undo-tree-id4 . -1) (#("d" 0 1 (fontified t face font-lock-string-face)) . -324) (undo-tree-id5 . -1) (#("e" 0 1 (fontified t face font-lock-string-face)) . -325) (undo-tree-id6 . -1) 326) nil (25294 32931 291692 0) 0 nil])
([nil nil ((322 . 325)) nil (25294 32931 291688 0) 0 nil])
([nil nil ((325 . 327)) nil (25294 32931 291687 0) 0 nil])
([nil nil ((328 . 336)) nil (25294 32931 291686 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t)) . -334) (undo-tree-id1 . -1) (#("n" 0 1 (fontified t)) . -335) (undo-tree-id2 . -1) 336) nil (25294 32931 291685 0) 0 nil])
([nil nil ((334 . 335)) nil (25294 32931 291681 0) 0 nil])
([nil nil ((329 . 359) (#("dragon" 0 6 (fontified t)) . -329) (undo-tree-id0 . -6) 335) nil (25294 32931 291679 0) 0 nil])
([nil nil ((329 . 335) (#("dragonli-emacs-tools-file-path" 0 30 (fontified t)) . 329)) nil (25294 32931 291652 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -231) (undo-tree-id31 . -1) 232 (t 25294 32931 297136 825000)) nil (25294 33095 851689 0) 0 nil])
([nil nil ((#("
  " 0 1 (fontified t) 1 3 (fontified t)) . 228) (undo-tree-id30 . -3) 231) nil (25294 33095 851687 0) 0 nil])
([nil nil ((228 . 229)) nil (25294 33095 851685 0) 0 nil])
([nil nil ((#(" (expand-file-name \"org-bars\" dragon))" 0 19 (fontified t) 19 29 (fontified t face font-lock-string-face) 29 38 (fontified t)) . -296) (undo-tree-id25 . -38) (undo-tree-id26 . -38) (undo-tree-id27 . -38) (undo-tree-id28 . 1) (undo-tree-id29 . -38)) nil (25294 33095 851684 0) 0 nil])
([nil nil ((296 . 297)) nil (25294 33095 851679 0) 0 nil])
([nil nil ((#("≈" 0 1 (fontified t)) . -296) (undo-tree-id24 . -1) 297) nil (25294 33095 851678 0) 0 nil])
([nil nil ((#("
   " 0 1 (fontified t) 1 4 (fontified t)) . 292) (undo-tree-id19 . -4) (undo-tree-id20 . -4) (undo-tree-id21 . -4) (undo-tree-id22 . -4) (undo-tree-id23 . -4) 296) nil (25294 33095 851676 0) 0 nil])
([nil nil ((205 . 209) (#("(add" 0 4 (fontified t)) . 205)) nil (25294 33095 851671 0) 0 nil])
([nil nil ((293 . 294)) nil (25294 33095 851670 0) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -206) (undo-tree-id17 . -1) (undo-tree-id18 . -1) 207) nil (25294 33095 851669 0) 0 nil])
([nil nil ((206 . 207)) nil (25294 33095 851666 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 340 . 341) (nil fontified nil 295 . 341) (295 . 341)) nil (25294 33095 851665 0) 0 nil])
([nil nil ((#("
custom-declare-variable: Doc string is missing" 0 1 (fontified t) 1 46 (fontified t) 46 47 (fontified t rear-nonsticky t)) . 294) (undo-tree-id11 . -47) (undo-tree-id12 . -1) (undo-tree-id13 . -47) (undo-tree-id14 . -47) (undo-tree-id15 . -1) (undo-tree-id16 . -47)) nil (25294 33095 851664 0) 0 nil])
([nil nil ((294 . 295)) nil (25294 33095 851654 0) 0 nil])
([nil nil ((296 . 306) (295 . 297)) nil (25294 33095 851653 0) 0 nil])
([nil nil ((296 . 307) (#("add-to-lis" 0 10 (fontified t)) . -296) (undo-tree-id10 . -10) 306) nil (25294 33095 851652 0) 0 nil])
([nil nil ((307 . 310)) nil (25294 33095 851650 0) 0 nil])
([nil nil ((310 . 313)) nil (25294 33095 851649 0) 0 nil])
([nil nil ((313 . 316)) nil (25294 33095 851648 0) 0 nil])
([nil nil ((309 . 319) (#("load-pa" 0 7 (fontified t)) . -309) (undo-tree-id9 . -7) 316) nil (25294 33095 851647 0) 0 nil])
([nil nil ((#(":" 0 1 (fontified t face font-lock-builtin-face)) . -309) (undo-tree-id8 . -1) 310) nil (25294 33095 851645 0) 0 nil])
([nil nil ((320 . 330) (318 . 321)) nil (25294 33095 851643 0) 0 nil])
([nil nil ((#("f" 0 1 (fontified t)) . -327) (undo-tree-id5 . -1) (#("i" 0 1 (fontified t)) . -328) (undo-tree-id6 . -1) (#("l" 0 1 (fontified t)) . -329) (undo-tree-id7 . -1) 330) nil (25294 33095 851642 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 326) (undo-tree-id4 . -1) 327) nil (25294 33095 851638 0) 0 nil])
([nil nil ((326 . 331)) nil (25294 33095 851636 0) 0 nil])
([nil nil ((320 . 336) (#("expand-file" 0 11 (fontified t)) . -320) (undo-tree-id3 . -11) 331) nil (25294 33095 851635 0) 0 nil])
([nil nil ((338 . 342) (337 . 339) (#("\"" 0 1 (fontified nil)) . -337) (336 . 338)) nil (25294 33095 851633 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t face font-lock-string-face)) . -341) (undo-tree-id2 . -1) 342) nil (25294 33095 851631 0) 0 nil])
([nil nil ((341 . 344)) nil (25294 33095 851629 0) 0 nil])
([nil nil ((344 . 346)) nil (25294 33095 851628 0) 0 nil])
([nil nil ((347 . 354)) nil (25294 33095 851627 0) 0 nil])
([nil nil ((348 . 378) (#("dragon" 0 6 (fontified t)) . -348) (undo-tree-id0 . -6) (undo-tree-id1 . -6) 354) nil (25294 33095 851625 0) 0 nil])
([nil nil ((380 . 381)) nil (25294 33095 851599 0) 0 nil])
([nil nil ((229 . 231) (#(" " 0 1 (fontified nil)) . 228) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (229 . 230) (t 25294 33095 856078 330000)) nil (25294 33207 833859 0) 0 nil])
([nil nil ((294 . 297)) nil (25294 33207 833836 0) 0 nil])
([nil nil ((294 . 297) (t 25294 33207 837996 678000)) nil (25294 51722 852599 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 356 . 357) (nil fontified nil 325 . 357) (nil fontified nil 315 . 325) (nil fontified nil 297 . 315) (297 . 357)) nil (25294 51722 852598 0) 0 nil])
([nil nil ((363 . 364)) nil (25294 51722 852597 0) 0 nil])
([nil nil ((358 . 359) (231 . 232)) nil (25294 51722 852596 0) 0 nil])
([nil nil ((#("(" 0 1 (fontified t)) . -231) (undo-tree-id3 . -1) 232) nil (25294 51722 852595 0) 0 nil])
([nil nil ((#(")" 0 1 (fontified t)) . -357) (undo-tree-id0 . -1) (undo-tree-id1 . 1) (undo-tree-id2 . -1) 358) nil (25294 51722 852592 0) 0 nil])
([nil nil ((1628 . 1629)) nil (25294 51723 603765 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1884 . 1885) (nil fontified nil 1629 . 1885) (1629 . 1885)) nil (25294 51743 336893 0) 0 nil] [nil nil ((nil rear-nonsticky nil 1688 . 1689) (nil fontified nil 1657 . 1689) (nil fontified nil 1647 . 1657) (nil fontified nil 1629 . 1647) (1629 . 1689)) ((#("(expand-file-name \"org-bars\" dragonli-emacs-tools-file-path)" 0 18 (fontified nil) 18 28 (face font-lock-string-face fontified nil) 28 59 (fontified nil) 59 60 (rear-nonsticky nil fontified nil)) . 1629) (undo-tree-id8 . -60) (undo-tree-id9 . -60) (undo-tree-id10 . -60) (undo-tree-id11 . -60) (undo-tree-id12 . -60) (undo-tree-id13 . -60) (undo-tree-id14 . -60) (undo-tree-id15 . -60) (undo-tree-id16 . -60) (undo-tree-id17 . -60) (undo-tree-id18 . -60) (undo-tree-id19 . -60) (undo-tree-id20 . -60) (undo-tree-id21 . -60) (undo-tree-id22 . -60) (undo-tree-id23 . -60) (undo-tree-id24 . -60) (undo-tree-id25 . -60) (undo-tree-id26 . -60) (undo-tree-id27 . -60) (undo-tree-id28 . -60) (undo-tree-id29 . -60) (undo-tree-id30 . -60) (undo-tree-id31 . -60) (undo-tree-id32 . -60) (undo-tree-id33 . -60) (undo-tree-id34 . -60) (undo-tree-id35 . -60) (undo-tree-id36 . -60) (undo-tree-id37 . -60) (undo-tree-id38 . -60) (undo-tree-id39 . -60) (undo-tree-id40 . -60) (undo-tree-id41 . -60) (undo-tree-id42 . -60) (undo-tree-id43 . -60) (undo-tree-id44 . -60) (undo-tree-id45 . -60) (undo-tree-id46 . -60) (undo-tree-id47 . -60) (undo-tree-id48 . -60) (undo-tree-id49 . -60) (undo-tree-id50 . -60) (undo-tree-id51 . -60) (undo-tree-id52 . -60) (undo-tree-id53 . -60) (undo-tree-id54 . 1) (undo-tree-id55 . -60) (undo-tree-id56 . 60) (undo-tree-id57 . -1) (undo-tree-id58 . -60) (undo-tree-id59 . -60) (undo-tree-id60 . -60) (undo-tree-id61 . -60) (undo-tree-id62 . -60) (undo-tree-id63 . -60) (undo-tree-id64 . -60) (undo-tree-id65 . -60) (undo-tree-id66 . -60) (undo-tree-id67 . -60) (undo-tree-id68 . -60) (undo-tree-id69 . -60) (undo-tree-id70 . -60) (undo-tree-id71 . -60) (undo-tree-id72 . -60) (undo-tree-id73 . -60) (undo-tree-id74 . -60) (undo-tree-id75 . -60) (undo-tree-id76 . -60) (undo-tree-id77 . -60) (undo-tree-id78 . -60) (undo-tree-id79 . -60) (undo-tree-id80 . -60) (undo-tree-id81 . -60) (undo-tree-id82 . -60) (undo-tree-id83 . -60) (undo-tree-id84 . -60) (undo-tree-id85 . -60) (undo-tree-id86 . -60) (undo-tree-id87 . -60) (undo-tree-id88 . -60) (undo-tree-id89 . -60) (undo-tree-id90 . -60) (undo-tree-id91 . -60) (undo-tree-id92 . -60) (undo-tree-id93 . -60) (undo-tree-id94 . -60) (undo-tree-id95 . -60) (undo-tree-id96 . -60) (undo-tree-id97 . -60) (undo-tree-id98 . -60) (undo-tree-id99 . -60) (undo-tree-id100 . -60) (undo-tree-id101 . -60) (undo-tree-id102 . -60) (undo-tree-id103 . -60) (undo-tree-id104 . -60) (undo-tree-id105 . -60) (undo-tree-id106 . -60) (undo-tree-id107 . -60) (undo-tree-id108 . -60) (undo-tree-id109 . -60) (undo-tree-id110 . -60) (undo-tree-id111 . -60) (undo-tree-id112 . -60) (undo-tree-id113 . -60) (undo-tree-id114 . -60) (undo-tree-id115 . -60) (undo-tree-id116 . -60) (undo-tree-id117 . -60) (undo-tree-id118 . -60) (undo-tree-id119 . -60) (undo-tree-id120 . -60) (undo-tree-id121 . -60) (undo-tree-id122 . -60) (undo-tree-id123 . -60) (undo-tree-id124 . -60) (undo-tree-id125 . -60) (undo-tree-id126 . -60) (undo-tree-id127 . -60) (undo-tree-id128 . -60) (undo-tree-id129 . -60) (undo-tree-id130 . -60) (undo-tree-id131 . -60) (undo-tree-id132 . -60) (undo-tree-id133 . -60) (undo-tree-id134 . -60) (undo-tree-id135 . -60) (undo-tree-id136 . -60) (undo-tree-id137 . -60) (undo-tree-id138 . -60) (undo-tree-id139 . -60) (undo-tree-id140 . -60) (undo-tree-id141 . -60) (undo-tree-id142 . -60) (undo-tree-id143 . -60) (undo-tree-id144 . -60) (undo-tree-id145 . -60) (undo-tree-id146 . -60) (undo-tree-id147 . -60) (undo-tree-id148 . -60) (undo-tree-id149 . -60) (undo-tree-id150 . -60) (undo-tree-id151 . -60) (undo-tree-id152 . -60) (undo-tree-id153 . -60) (undo-tree-id154 . -60) (undo-tree-id155 . -60) (undo-tree-id156 . -60) (undo-tree-id157 . -60) (undo-tree-id158 . -60) (undo-tree-id159 . -60) (undo-tree-id160 . -60) (undo-tree-id161 . -60) (undo-tree-id162 . -60) (undo-tree-id163 . -60) (undo-tree-id164 . -60) (undo-tree-id165 . -60) (undo-tree-id166 . -60) (undo-tree-id167 . -60) (undo-tree-id168 . -60) (undo-tree-id169 . -60) (undo-tree-id170 . -60) (undo-tree-id171 . -60) (undo-tree-id172 . -60) (undo-tree-id173 . -60) (undo-tree-id174 . -60) (undo-tree-id175 . -60) (undo-tree-id176 . -60) (undo-tree-id177 . -60) (undo-tree-id178 . -60) (undo-tree-id179 . -60) (undo-tree-id180 . -60) (undo-tree-id181 . -60) (undo-tree-id182 . -60) (undo-tree-id183 . -60) (undo-tree-id184 . -60) (undo-tree-id185 . -60) (undo-tree-id186 . -60) (undo-tree-id187 . -60) (undo-tree-id188 . -60) (undo-tree-id189 . -60) (undo-tree-id190 . -60) (undo-tree-id191 . -60) (undo-tree-id192 . -60) (undo-tree-id193 . -60) (undo-tree-id194 . -60) (undo-tree-id195 . -60) (undo-tree-id196 . -60) (undo-tree-id197 . -60) (undo-tree-id198 . -60) (undo-tree-id199 . -60) (undo-tree-id200 . -60) (undo-tree-id201 . -60) (undo-tree-id202 . -60) (undo-tree-id203 . -60) (undo-tree-id204 . -60) (undo-tree-id205 . -60) (undo-tree-id206 . -60) (undo-tree-id207 . -60) (undo-tree-id208 . -60) (undo-tree-id209 . -60) (undo-tree-id210 . -60) (undo-tree-id211 . -60) (undo-tree-id212 . -60) (undo-tree-id213 . -60) (undo-tree-id214 . -60) (undo-tree-id215 . -60) (undo-tree-id216 . -60) (undo-tree-id217 . -60) (undo-tree-id218 . -60) (undo-tree-id219 . -60) (undo-tree-id220 . -60) (undo-tree-id221 . -60) (undo-tree-id222 . -60) (undo-tree-id223 . -60) (nil rear-nonsticky t 1688 . 1689)) (25294 51722 852638 0) 0 nil])
([nil nil ((1885 . 1886)) nil (25294 51743 336887 0) 0 nil])
([nil nil ((1689 . 1690)) ((#("
" 0 1 (fontified t)) . 1689) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1)) (25294 51722 852565 0) 0 nil])
([nil nil ((#("(expand-file-name \"org-bars\" dragonli-emacs-tools-file-path)
" 0 18 (fontified t) 18 28 (fontified t face font-lock-string-face) 28 61 (fontified t)) . 297) (undo-tree-id15 . -60) (undo-tree-id16 . -60) (undo-tree-id17 . -60) (undo-tree-id18 . -60) (undo-tree-id19 . -61) (undo-tree-id20 . -60) 357 (t 25294 51743 341173 94000)) nil (25294 51791 63010 0) 0 nil])
nil
([nil nil ((300 . 301) 297) nil (25294 51791 63000 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 228) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) 229) nil (25294 51791 62999 0) 0 nil])
([nil nil ((#(" " 0 1 (fontified t)) . 228) (undo-tree-id10 . -1) (undo-tree-id11 . -1) 229) nil (25294 51791 62996 0) 0 nil])
([nil nil ((#("
    " 0 1 (fontified t) 1 3 (fontified t) 3 5 (fontified t)) . 292) (undo-tree-id2 . -5) (undo-tree-id3 . -3) (undo-tree-id4 . -3) (undo-tree-id5 . 2) (undo-tree-id6 . -3) (undo-tree-id7 . -3) (undo-tree-id8 . -1) (undo-tree-id9 . -5) 297) nil (25294 51791 62992 0) 0 nil])
([nil nil ((#(";" 0 1 (fontified t face font-lock-comment-delimiter-face)) . -296) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 297) nil (25294 51791 62982 0) 0 nil])
([nil nil ((1762 . 1765) (t 25294 51791 67102 838000)) nil (25294 51865 796534 0) 0 nil])
([nil nil ((#("(defun org-no-ellipsis-in-headlines ()
  \"Remove use of ellipsis in headlines.
See `buffer-invisibility-spec'.\"
  (remove-from-invisibility-spec '(outline . t))
  (add-to-invisibility-spec 'outline))" 0 1 (fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 35 (face font-lock-function-name-face fontified t) 35 41 (fontified t) 41 84 (face font-lock-doc-face fontified t) 84 108 (face (font-lock-constant-face font-lock-doc-face) fontified t) 108 111 (face font-lock-doc-face fontified t) 111 199 (fontified t)) . 1561) (undo-tree-id0 . -39) (undo-tree-id1 . -199) (undo-tree-id2 . 199) (undo-tree-id3 . -1) (undo-tree-id4 . 1) (undo-tree-id5 . -199) (undo-tree-id6 . -199) (undo-tree-id7 . -199)) nil (25294 51865 796530 0) 0 nil])
([nil nil ((1543 . 1544) (t 25294 51865 800416 239000)) nil (25294 60118 711722 0) 0 nil])
([nil nil ((#("A" 0 1 (fontified t)) . -1543) (undo-tree-id0 . -1) 1544) nil (25294 60118 711720 0) 0 nil])
([nil nil ((1498 . 1500)) nil (25294 60118 711704 0) 0 nil])
([nil nil ((1520 . 1522)) nil (25294 60118 711700 0) 0 nil])
([nil nil ((1565 . 1566) (t 25294 60118 715947 507000)) nil (25294 60146 34010 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1838 . 1839) (nil fontified nil 1566 . 1839) (1566 . 1839)) nil (25294 60146 34005 0) 0 nil])
([nil nil ((#("0" 0 1 (fontified t)) . -1656) (undo-tree-id5 . -1) (undo-tree-id6 . -1) 1657 (t 25294 60146 37013 724000)) nil (25294 60339 752640 0) 0 nil])
([nil nil ((1656 . 1657)) nil (25294 60339 752637 0) 0 nil])
([nil nil ((#("e" 0 1 (fontified t)) . -1656) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 1657) nil (25294 60339 752636 0) 0 nil])
([nil nil ((1656 . 1657)) nil (25294 60339 752633 0) 0 nil])
([nil nil ((#("2" 0 1 (fontified t)) . -1656) (undo-tree-id1 . -1) 1657) nil (25294 60339 752632 0) 0 nil])
([nil nil ((1656 . 1658)) nil (25294 60339 752629 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -1657) (undo-tree-id0 . -1) 1658) nil (25294 60339 752625 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1642 . 1643) (nil fontified nil 1642 . 1643) (1642 . 1643) (t 25294 60339 756815 181000)) nil (25294 60478 696811 0) 0 nil])
([nil nil ((#("^" 0 1 (face font-lock-string-face fontified t)) . -1642) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) 1643 (t 25294 60478 701030 272000)) nil (25294 60527 61596 0) 0 nil])
([nil nil ((1647 . 1648) (t 25294 60527 65683 417000)) nil (25294 60582 326725 0) 0 nil])
([nil nil ((#("  " 0 2 (face font-lock-string-face fontified t)) . 1646) (undo-tree-id107 . -2) (undo-tree-id108 . -2) (undo-tree-id109 . -2) (undo-tree-id110 . -2) (undo-tree-id111 . -2) (undo-tree-id112 . -2) (undo-tree-id113 . -2) (undo-tree-id114 . -2) (undo-tree-id115 . -2) (undo-tree-id116 . -2) (undo-tree-id117 . -2) (undo-tree-id118 . -2) (undo-tree-id119 . -2) (undo-tree-id120 . -2) (undo-tree-id121 . -2) (undo-tree-id122 . -2) (undo-tree-id123 . -2) (undo-tree-id124 . -2) (undo-tree-id125 . -2) (undo-tree-id126 . -2) (undo-tree-id127 . -2) (undo-tree-id128 . -2) (undo-tree-id129 . -2) (undo-tree-id130 . -2) (undo-tree-id131 . -2) (undo-tree-id132 . -2) (undo-tree-id133 . -2) (undo-tree-id134 . -2) (undo-tree-id135 . -2) (undo-tree-id136 . -2) (undo-tree-id137 . -2) (undo-tree-id138 . -2) (undo-tree-id139 . -2) (undo-tree-id140 . -2) (undo-tree-id141 . -2) (undo-tree-id142 . -2) (undo-tree-id143 . -2) (undo-tree-id144 . -2) (undo-tree-id145 . -2) (undo-tree-id146 . -2) (undo-tree-id147 . -2) (undo-tree-id148 . -2) (undo-tree-id149 . -2) (undo-tree-id150 . -2) (undo-tree-id151 . -2) (undo-tree-id152 . -2) (undo-tree-id153 . -2) (undo-tree-id154 . -2) (undo-tree-id155 . -2) (undo-tree-id156 . -2) (undo-tree-id157 . -2) (undo-tree-id158 . -2) (undo-tree-id159 . -2) (undo-tree-id160 . -2) (undo-tree-id161 . -2) (undo-tree-id162 . -2) (undo-tree-id163 . -2) (undo-tree-id164 . -2) (undo-tree-id165 . -2) (undo-tree-id166 . -2) (undo-tree-id167 . -2) (undo-tree-id168 . -2) (undo-tree-id169 . -2) (undo-tree-id170 . -2) (undo-tree-id171 . -2) (undo-tree-id172 . -2) (undo-tree-id173 . -2) (undo-tree-id174 . -2) (undo-tree-id175 . -2) (undo-tree-id176 . -2) (undo-tree-id177 . -2) (undo-tree-id178 . -2) (undo-tree-id179 . -2) (undo-tree-id180 . -2) (undo-tree-id181 . -2) (undo-tree-id182 . -2) (undo-tree-id183 . -2) (undo-tree-id184 . -2) (undo-tree-id185 . -2) (undo-tree-id186 . -2) (undo-tree-id187 . -2) (undo-tree-id188 . -2) (undo-tree-id189 . -2) (undo-tree-id190 . -2) (undo-tree-id191 . -2) (undo-tree-id192 . -2) (undo-tree-id193 . -2) (undo-tree-id194 . -2) (undo-tree-id195 . -2) (undo-tree-id196 . -2) (undo-tree-id197 . -2) (undo-tree-id198 . -2) (undo-tree-id199 . -2) (undo-tree-id200 . -2) (undo-tree-id201 . -2) (undo-tree-id202 . -2) (undo-tree-id203 . -2) (undo-tree-id204 . -2) (undo-tree-id205 . -2) (undo-tree-id206 . -2) (undo-tree-id207 . -2) (undo-tree-id208 . -2) (undo-tree-id209 . -2) (undo-tree-id210 . -2) (undo-tree-id211 . -2) (undo-tree-id212 . -2) (undo-tree-id213 . -2) (undo-tree-id214 . -2) (undo-tree-id215 . -2) (undo-tree-id216 . -2) (undo-tree-id217 . -2) (undo-tree-id218 . -2) (undo-tree-id219 . -2) (undo-tree-id220 . -2) (undo-tree-id221 . -2) (undo-tree-id222 . -2) (undo-tree-id223 . -2) (undo-tree-id224 . -2) (undo-tree-id225 . -2) (undo-tree-id226 . -2) (undo-tree-id227 . -2) (undo-tree-id228 . -2) (undo-tree-id229 . -2) (undo-tree-id230 . -2) (undo-tree-id231 . -2) (undo-tree-id232 . -2) (undo-tree-id233 . -2) (undo-tree-id234 . -2) (undo-tree-id235 . -2) (undo-tree-id236 . -2) (undo-tree-id237 . -2) (undo-tree-id238 . -2) (undo-tree-id239 . -2) (undo-tree-id240 . -2) (undo-tree-id241 . -2) (undo-tree-id242 . -2) (undo-tree-id243 . -2) (undo-tree-id244 . -2) (undo-tree-id245 . -2) (undo-tree-id246 . -2) (undo-tree-id247 . -2) (undo-tree-id248 . -2) (undo-tree-id249 . -2) (undo-tree-id250 . -2) (undo-tree-id251 . -2) (undo-tree-id252 . -2) (undo-tree-id253 . -2) (undo-tree-id254 . -2) (undo-tree-id255 . -2) (undo-tree-id256 . -2) (undo-tree-id257 . -2) (undo-tree-id258 . -2) (undo-tree-id259 . -2) (undo-tree-id260 . -2) (undo-tree-id261 . -2) (undo-tree-id262 . -2) (undo-tree-id263 . -2) (undo-tree-id264 . -2) (undo-tree-id265 . -2) (undo-tree-id266 . -2) (undo-tree-id267 . -2) (undo-tree-id268 . -2) (undo-tree-id269 . -2) (undo-tree-id270 . -2) (undo-tree-id271 . -2) (undo-tree-id272 . -2) (undo-tree-id273 . -2) (undo-tree-id274 . -2) (undo-tree-id275 . -2) (undo-tree-id276 . -2) (undo-tree-id277 . -2) (undo-tree-id278 . -2) (undo-tree-id279 . -2) (undo-tree-id280 . -2) (undo-tree-id281 . -2) (undo-tree-id282 . -2) (undo-tree-id283 . -2) (undo-tree-id284 . -2) (undo-tree-id285 . -2) (undo-tree-id286 . -2) (undo-tree-id287 . -2) (undo-tree-id288 . -2) (undo-tree-id289 . -2) (undo-tree-id290 . -2) (undo-tree-id291 . -2) (undo-tree-id292 . -2) (undo-tree-id293 . -2) (undo-tree-id294 . -2) (undo-tree-id295 . -2) (undo-tree-id296 . -2) (undo-tree-id297 . -2) (undo-tree-id298 . -2) (undo-tree-id299 . -2) (undo-tree-id300 . -2) (undo-tree-id301 . -2) (undo-tree-id302 . -2) (undo-tree-id303 . -2) (undo-tree-id304 . -2) (undo-tree-id305 . -2) (undo-tree-id306 . -2) (undo-tree-id307 . -2) (undo-tree-id308 . -2) (undo-tree-id309 . -2) (undo-tree-id310 . -2) (undo-tree-id311 . -2) (undo-tree-id312 . -2) (undo-tree-id313 . -2) (undo-tree-id314 . -2) (undo-tree-id315 . -2) (undo-tree-id316 . -2) (undo-tree-id317 . -2) (undo-tree-id318 . -2) (undo-tree-id319 . -2) (undo-tree-id320 . -2) (undo-tree-id321 . -2) (undo-tree-id322 . -2) (undo-tree-id323 . -2) (undo-tree-id324 . -2) (undo-tree-id325 . -2) (undo-tree-id326 . -2) (undo-tree-id327 . -2) (undo-tree-id328 . -2) (undo-tree-id329 . -2) (undo-tree-id330 . -2) (undo-tree-id331 . -2) (undo-tree-id332 . -2) (undo-tree-id333 . -2) (undo-tree-id334 . -2) (undo-tree-id335 . -2) (undo-tree-id336 . -2) (undo-tree-id337 . -2) (undo-tree-id338 . -2) (undo-tree-id339 . -2) (undo-tree-id340 . -2) (undo-tree-id341 . -2) (undo-tree-id342 . -2) (undo-tree-id343 . -2) (undo-tree-id344 . -2) (undo-tree-id345 . -2) (undo-tree-id346 . -2) (undo-tree-id347 . -2) (undo-tree-id348 . -2) (undo-tree-id349 . -2) (undo-tree-id350 . -2) (undo-tree-id351 . -2) 1648) nil (25294 60582 326717 0) 0 nil])
([nil nil ((1646 . 1647)) nil (25294 60582 326541 0) 0 nil])
([nil nil ((1787 . 1789) (t 25294 60582 330797 932000)) nil (25294 60985 416060 0) 0 nil])
([nil nil ((#("b" 0 1 (fontified t face font-lock-string-face)) . -343) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (#("a" 0 1 (fontified t face font-lock-string-face)) . -344) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (#("r" 0 1 (fontified t face font-lock-string-face)) . -345) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (#("s" 0 1 (fontified t face font-lock-string-face)) . -346) (undo-tree-id26 . -1) (undo-tree-id27 . -1) 347 (t 25294 60985 421160 537000)) nil (25294 61924 853977 0) 0 nil])
([nil nil ((343 . 345)) nil (25294 61924 853972 0) 0 nil])
([nil nil ((#("r" 0 1 (fontified t face font-lock-string-face)) . -340) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (#("g" 0 1 (fontified t face font-lock-string-face)) . -341) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (#("-" 0 1 (fontified t face font-lock-string-face)) . -342) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (#("v" 0 1 (fontified t face font-lock-string-face)) . -343) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (#("i" 0 1 (fontified t face font-lock-string-face)) . -344) (undo-tree-id19 . -1) 345) nil (25294 61924 853970 0) 0 nil])
([nil nil ((#("o" 0 1 (fontified t face font-lock-string-face)) . -339) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) 340) nil (25294 61924 853960 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 356 . 357) (nil fontified nil 339 . 357) (339 . 357)) nil (25294 61924 853941 0) 0 nil])
([nil nil ((1912 . 1913) (t 25294 61924 858134 820000)) nil (25294 61939 933901 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2023 . 2024) (nil fontified nil 1913 . 2024) (1913 . 2024)) nil (25294 61939 933900 0) 0 nil])
([nil nil ((2024 . 2025)) nil (25294 61939 933894 0) 0 nil])
([nil nil ((#("(require 'org-dynamic-bullets)
(require 'org-visual-indent)
(org-dynamic-bullets-mode)
(org-visual-indent-mode)

" 0 1 (fontified t) 1 8 (face font-lock-keyword-face fontified t) 8 10 (fontified t) 10 29 (face font-lock-constant-face fontified t) 29 32 (fontified t) 32 39 (face font-lock-keyword-face fontified t) 39 41 (fontified t) 41 58 (face font-lock-constant-face fontified t) 58 112 (fontified t) 112 113 (fontified t)) . 1913) (undo-tree-id2 . -112) (undo-tree-id3 . -31) (undo-tree-id4 . -112) (undo-tree-id5 . -112) (undo-tree-id6 . -112) (undo-tree-id7 . -113) (undo-tree-id8 . 113) (undo-tree-id9 . -1) (undo-tree-id10 . 84) (undo-tree-id11 . -30) (t 25294 61939 938263 582000)) nil (25294 62150 192038 0) 0 nil])
([nil nil ((#("-visual-outline" 0 15 (face font-lock-string-face fontified t)) . -342) (undo-tree-id0 . -15) (undo-tree-id1 . -15) 357) nil (25294 62150 192029 0) 0 nil])
([nil nil ((342 . 344)) nil (25294 62150 192004 0) 0 nil])
([nil nil ((344 . 347)) nil (25294 62150 191999 0) 0 nil])
([nil nil ((#("(defun me-org-mode-remove-stars ()
  (font-lock-add-keywords
   nil
   '((\"^\\\\*+ \"
      (0
       (prog1 nil
         (put-text-property (match-beginning 0) (match-end 0)
                            'invisible t)))))))" 0 1 (fontified t) 1 6 (face font-lock-keyword-face fontified t) 6 7 (fontified t) 7 31 (face font-lock-function-name-face fontified t) 31 61 (fontified t) 61 68 (fontified t) 68 74 (fontified t) 74 82 (face font-lock-string-face fontified t) 82 100 (fontified t) 100 105 (face font-lock-keyword-face fontified t) 105 219 (fontified t)) . 1566) (undo-tree-id16 . -219) (undo-tree-id17 . -68) (undo-tree-id18 . -35) (undo-tree-id19 . 219) (undo-tree-id20 . -1) (undo-tree-id21 . 1) (undo-tree-id22 . -219) (undo-tree-id23 . -219) (undo-tree-id24 . -219) (undo-tree-id25 . -219) (undo-tree-id26 . -156) (undo-tree-id27 . -219) (t 25294 62150 196405 797000)) nil (25295 25340 945023 0) 0 nil])
([nil nil ((#(";;(add-hook 'org-mode-hook #'me-org-mode-remove-stars)" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 54 (face font-lock-comment-face fontified t)) . 1568) (undo-tree-id8 . -54) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -54) (undo-tree-id13 . -54) (undo-tree-id14 . -54) (undo-tree-id15 . -54)) nil (25295 25340 945015 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1621 . 1622) (nil fontified nil 1570 . 1622) (nil fontified nil 1568 . 1570) (1568 . 1622)) nil (25295 25340 945010 0) 0 nil])
([nil nil ((1570 . 1571)) nil (25295 25340 945009 0) 0 nil])
([nil nil ((1653 . 1654)) nil (25295 25340 945008 0) 0 nil])
([nil nil ((#(";; (add-hook 'org-mode-hook #'me-org-mode-remove-stars)

;; (add-hook 'org-mode-hook #'org-no-ellipsis-in-headlines)" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 54 (face font-lock-comment-face fontified t) 54 55 (face font-lock-comment-face rear-nonsticky t fontified t) 55 56 (face font-lock-comment-face fontified t) 56 57 (fontified t) 57 60 (face font-lock-comment-delimiter-face fontified t) 60 116 (face font-lock-comment-face fontified t)) . 1568) (undo-tree-id0 . -116) (undo-tree-id1 . -57) (undo-tree-id2 . 58) (undo-tree-id3 . -57) (undo-tree-id4 . -57) (undo-tree-id5 . -56) (undo-tree-id6 . -116) (undo-tree-id7 . -116)) nil (25295 25340 945004 0) 0 nil])
([nil nil ((#("




" 0 1 (fontified t face font-lock-comment-face) 1 5 (fontified t)) . 1563) (undo-tree-id0 . -5) (undo-tree-id1 . -5) (undo-tree-id2 . -5) 1568 (t 25295 25340 948904 147000)) nil (25295 28345 556007 0) 0 nil])
([nil current ((apply 4 1497 1559 undo--wrap-and-run-primitive-undo 1497 1559 ((#(";;" 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1518) (#(";;" 0 2 (fontified t face font-lock-comment-delimiter-face)) . -1498) 1497))) nil (25295 28345 555986 0) 0 nil])
nil
