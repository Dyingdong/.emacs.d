(undo-tree-save-format-version . 1)
"cc2c732397d0ba4693a279ad7ad8449978a5c2b2"
[nil nil nil nil (25293 29777 614087 0) 0 nil]
([nil nil ((nil rear-nonsticky nil 120 . 121) (nil fontified nil 1 . 121) (1 . 121) (t 25293 29777 615620 378000)) nil (25293 29813 554391 0) 0 nil])
([nil nil ((121 . 123)) nil (25293 29813 554390 0) 0 nil])
([nil nil ((1 . 2)) nil (25293 29813 554389 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1036 . 1037) (nil fontified nil 1 . 1037) (1 . 1037)) nil (25293 29813 554389 0) 0 nil])
([nil nil ((1037 . 1038)) nil (25293 29813 554388 0) 0 nil])
([nil nil ((#(";; Author: Vincent Zhang <seagle0128@gmail.com>
;; URL: https://github.com/seagle0128/.emacs.d

;; This file is not part of GNU Emacs.
;;
;; This program is free software; you can redistribute it and/or
;; modify it under the terms of the GNU General Public License as
;; published by the Free Software Foundation; either version 3, or
;; (at your option) any later version.
;;
;; This program is distributed in the hope that it will be useful,
;; but WITHOUT ANY WARRANTY; without even the implied warranty of
;; MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
;; General Public License for more details.
;;
;; You should have received a copy of the GNU General Public License
;; along with this program; see the file COPYING.  If not, write to
;; the Free Software Foundation, Inc., 51 Franklin Street, Fifth
;; Floor, Boston, MA 02110-1301, USA.
;;" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 48 (face font-lock-comment-face fontified t) 48 51 (face font-lock-comment-delimiter-face fontified t) 51 95 (face font-lock-comment-face fontified t) 95 96 (fontified t) 96 99 (face font-lock-comment-delimiter-face fontified t) 99 135 (face font-lock-comment-face fontified t) 135 137 (face font-lock-comment-delimiter-face fontified t) 137 138 (face font-lock-comment-face fontified t) 138 141 (face font-lock-comment-delimiter-face fontified t) 141 203 (face font-lock-comment-face fontified t) 203 206 (face font-lock-comment-delimiter-face fontified t) 206 269 (face font-lock-comment-face fontified t) 269 272 (face font-lock-comment-delimiter-face fontified t) 272 336 (face font-lock-comment-face fontified t) 336 339 (face font-lock-comment-delimiter-face fontified t) 339 375 (face font-lock-comment-face fontified t) 375 377 (face font-lock-comment-delimiter-face fontified t) 377 378 (face font-lock-comment-face fontified t) 378 381 (face font-lock-comment-delimiter-face fontified t) 381 445 (face font-lock-comment-face fontified t) 445 448 (face font-lock-comment-delimiter-face fontified t) 448 511 (face font-lock-comment-face fontified t) 511 514 (face font-lock-comment-delimiter-face fontified t) 514 580 (face font-lock-comment-face fontified t) 580 583 (face font-lock-comment-delimiter-face fontified t) 583 624 (face font-lock-comment-face fontified t) 624 626 (face font-lock-comment-delimiter-face fontified t) 626 627 (face font-lock-comment-face fontified t) 627 630 (face font-lock-comment-delimiter-face fontified t) 630 696 (face font-lock-comment-face fontified t) 696 699 (face font-lock-comment-delimiter-face fontified t) 699 764 (face font-lock-comment-face fontified t) 764 767 (face font-lock-comment-delimiter-face fontified t) 767 829 (face font-lock-comment-face fontified t) 829 832 (face font-lock-comment-delimiter-face fontified t) 832 867 (face font-lock-comment-face fontified t) 867 869 (face font-lock-comment-delimiter-face fontified t)) . 116) (undo-tree-id16 . -48) (undo-tree-id17 . -869) (undo-tree-id18 . -869) (undo-tree-id19 . -869)) nil (25293 29813 554387 0) 0 nil])
([nil nil ((#("

" 0 1 (face font-lock-comment-face fontified t) 1 2 (fontified t)) . 114) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) 116) nil (25293 29813 554384 0) 0 nil])
([nil nil ((#("
;; Copyright (C) 2006-2022 Vincent Zhang" 0 1 (fontified t) 1 4 (face font-lock-comment-delimiter-face fontified t) 4 41 (face font-lock-comment-face fontified t)) . 73) (undo-tree-id6 . -1) (undo-tree-id7 . -41) (undo-tree-id8 . -41) (undo-tree-id9 . -41) (undo-tree-id10 . -41) (undo-tree-id11 . -41)) nil (25293 29813 554380 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 72) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 73) nil (25293 29813 554375 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 370 . 371) (nil fontified nil 248 . 371) (248 . 371)) nil (25293 29813 554357 0) 0 nil])
([nil nil ((371 . 372)) nil (25293 29813 554352 0) 0 nil])
([nil nil ((125 . 126) (t 25293 29813 555968 937000)) nil (25294 5930 201221 0) 0 nil])
([nil nil ((126 . 127)) nil (25294 5930 201220 0) 0 nil])
([nil nil ((127 . 128)) nil (25294 5930 201219 0) 0 nil])
([nil nil ((128 . 141)) nil (25294 5930 201219 0) 0 nil])
([nil nil ((263 . 264)) nil (25294 5930 201218 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2778 . 2779) (nil fontified nil 264 . 2779) (264 . 2779)) nil (25294 5930 201217 0) 0 nil])
([nil nil ((2781 . 2782) (2746 . 2747) (2779 . 2780)) nil (25294 5930 201267 0) 0 nil])
([nil nil ((2781 . 2782)) nil (25294 5946 792399 0) 0 nil] [nil nil ((2782 . 2783)) ((#("" 0 1 (fontified t)) . 2782) (undo-tree-id0 . -1) (undo-tree-id1 . -1)) (25294 5930 201210 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t) 1 2 (fontified t)) . 2780) (undo-tree-id2 . -2) (undo-tree-id3 . -1) (undo-tree-id4 . -1) 2782) nil (25294 5946 792397 0) 0 nil])
nil
([nil nil ((2780 . 2782)) nil (25294 5946 792461 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 2782 . 2783) (nil fontified nil 2782 . 2783) (2782 . 2783)) nil (25294 5956 823513 0) 0 nil] [nil nil ((2782 . 2783)) ((#("" 0 1 (fontified t)) . 2782) (undo-tree-id5 . -1) (undo-tree-id6 . -1)) (25294 5946 792383 0) 0 nil])
([nil nil ((#("melpa" 0 5 (fontified t)) . 2178) (t 25294 5956 825381 760000)) nil (25294 8375 559126 0) 0 nil])
nil
([nil nil ((2178 . 2182)) nil (25294 8375 559122 0) 0 nil])
([nil nil ((#("u" 0 1 (fontified t)) . -2178) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (#("s" 0 1 (fontified t)) . -2179) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (#("t" 0 1 (fontified t)) . -2180) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (#("c" 0 1 (fontified t)) . -2181) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 2182 (t 25294 8375 560861 381000)) nil (25294 9907 870125 0) 0 nil])
([nil nil ((2178 . 2179)) nil (25294 9907 870114 0) 0 nil])
([nil nil ((2179 . 2183)) nil (25294 9907 870113 0) 0 nil])
([nil current ((#("i" 0 1 (fontified t)) . -2182) (undo-tree-id0 . -1) (undo-tree-id1 . -1) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) 2183) nil (25294 9907 870106 0) 0 nil])
nil
