(undo-tree-save-format-version . 1)
"31eff50a74532f23e9290b0880d2a17d827099c0"
[nil nil nil nil (25293 25420 550757 0) 0 nil]
([nil nil ((#(";;===========================================================================

;;===========================================================================

;;使用 M-x shell 来学习命令行操作，可以参考 https://missing.csail.mit.edu/2020/ 来学习，living in Emacs。" 0 2 (face font-lock-comment-delimiter-face fontified t) 2 78 (face font-lock-comment-face fontified t) 78 79 (fontified t) 79 81 (face font-lock-comment-delimiter-face fontified t) 81 157 (face font-lock-comment-face fontified t) 157 158 (fontified t) 158 160 (face font-lock-comment-delimiter-face fontified t) 160 176 (face font-lock-comment-face fontified t) 176 243 (face font-lock-comment-face fontified t)) . 1658) (undo-tree-id22 . -176) (undo-tree-id23 . -78) (undo-tree-id24 . -243) (undo-tree-id25 . -243) (undo-tree-id26 . -243) (undo-tree-id27 . -243) (undo-tree-id28 . -243) (undo-tree-id29 . -243) (undo-tree-id30 . -243) (undo-tree-id31 . -243) (t 25291 34559 398428 834000)) nil (25293 25568 467724 0) 0 nil])
([nil nil ((#("

" 0 2 (fontified t)) . 1656) (undo-tree-id12 . -2) (undo-tree-id13 . -2) (undo-tree-id14 . -2) (undo-tree-id15 . -2) (undo-tree-id16 . -2) (undo-tree-id17 . -2) (undo-tree-id18 . -2) (undo-tree-id19 . -2) (undo-tree-id20 . -2) (undo-tree-id21 . -2) 1658) nil (25293 25568 467716 0) 0 nil])
([nil nil ((#(";; Package Management
(require 'init-packages)" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 22 (face font-lock-comment-face fontified t) 22 23 (fontified t) 23 30 (face font-lock-keyword-face fontified t) 30 32 (fontified t) 32 45 (face font-lock-constant-face fontified t) 45 46 (fontified t)) . 1391) (undo-tree-id7 . -46) (undo-tree-id8 . -22) (undo-tree-id9 . -46) (undo-tree-id10 . -46) (undo-tree-id11 . -46)) nil (25293 25568 467709 0) 0 nil])
([nil nil ((#("

" 0 2 (fontified t)) . 1389) (undo-tree-id2 . -2) (undo-tree-id3 . -2) (undo-tree-id4 . -2) (undo-tree-id5 . -2) (undo-tree-id6 . -2) 1391) nil (25293 25568 467705 0) 0 nil])
([nil nil ((1389 . 1390)) nil (25293 25568 467701 0) 0 nil])
([nil nil ((#("\\" 0 1 (fontified t)) . -1389) (undo-tree-id1 . -1) 1390) nil (25293 25568 467700 0) 0 nil])
([nil nil ((1286 . 1287)) nil (25293 25568 467698 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 1332 . 1333) (nil fontified nil 1332 . 1333) (nil fontified nil 1319 . 1332) (nil fontified nil 1317 . 1319) (nil fontified nil 1310 . 1317) (nil fontified nil 1309 . 1310) (nil fontified nil 1290 . 1309) (nil fontified nil 1287 . 1290) (1287 . 1333)) nil (25293 25568 467697 0) 0 nil])
([nil nil ((1333 . 1334)) nil (25293 25568 467695 0) 0 nil])
([nil nil ((1395 . 1396)) nil (25293 25568 467694 0) 0 nil])
([nil nil ((1397 . 1402) (1396 . 1398)) nil (25293 25568 467693 0) 0 nil])
([nil nil ((#("i" 0 1 (fontified t)) . -1401) (undo-tree-id0 . -1) 1402) nil (25293 25568 467691 0) 0 nil])
([nil nil ((1401 . 1414)) nil (25293 25568 467672 0) 0 nil])
([nil nil ((1414 . 1416)) nil (25293 25568 467667 0) 0 nil])
([nil nil ((1416 . 1417) (t 25293 25568 471254 508000)) nil (25293 25630 980515 0) 0 nil])
([nil nil ((#("." 0 1 (face font-lock-constant-face fontified t)) . -1416) (undo-tree-id32 . -1) 1417) nil (25293 25630 980511 0) 0 nil])
([nil nil ((#("照" 0 1 (face font-lock-comment-face fontified t)) . -399) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (#("搬" 0 1 (face font-lock-comment-face fontified t)) . -400) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (#("自" 0 1 (face font-lock-comment-face fontified t)) . -401) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) 402 (t 25293 25630 983065 14000)) nil (25294 55417 941237 0) 0 nil])
([nil nil ((399 . 407)) nil (25294 55417 941230 0) 0 nil])
([nil nil ((#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -408) (undo-tree-id2 . -1) (#(";" 0 1 (face font-lock-comment-delimiter-face fontified t)) . -409) (undo-tree-id3 . -1) 410) nil (25294 55417 941229 0) 0 nil])
([nil nil ((#("
" 0 1 (face font-lock-comment-face fontified t)) . 407) (undo-tree-id0 . -1) (undo-tree-id1 . -1) 408) nil (25294 55417 941224 0) 0 nil])
([nil nil ((#(";; ---------------------------------------------------------------------------" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 78 (face font-lock-comment-face fontified t)) . 317) (t 25294 55417 944292 400000)) nil (25294 55428 359057 0) 0 nil])
([nil nil ((317 . 318)) nil (25294 55428 359056 0) 0 nil])
([nil nil ((852 . 853)) nil (25294 55428 359055 0) 0 nil])
([nil nil ((#(";; ---------------------------------------------------------------------------" 0 3 (face font-lock-comment-delimiter-face fontified t) 3 78 (face font-lock-comment-face fontified t)) . 853) (undo-tree-id13 . -78)) nil (25294 55428 359051 0) 0 nil])
([nil nil ((1508 . 1509) (t 25294 55428 361550 620000)) nil (25294 55500 185945 0) 0 nil])
([nil nil ((1510 . 1515) (1509 . 1511)) nil (25294 55500 185944 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified nil)) . -1515) (1515 . 1516)) nil (25294 55500 185943 0) 0 nil])
([nil nil ((1510 . 1517) (#("requi" 0 5 (fontified t)) . -1510) (undo-tree-id158 . -5) (undo-tree-id159 . -5) 1515) nil (25294 55500 185942 0) 0 nil])
([nil nil ((1517 . 1520)) nil (25294 55500 185940 0) 0 nil])
([nil nil ((#("-" 0 1 (fontified t)) . -1517) (undo-tree-id154 . -1) (undo-tree-id155 . -1) (#("i" 0 1 (fontified t)) . -1518) (undo-tree-id156 . -1) (#("n" 0 1 (fontified t)) . -1519) (undo-tree-id157 . -1) 1520) nil (25294 55500 185939 0) 0 nil])
([nil nil ((1517 . 1526)) nil (25294 55500 185935 0) 0 nil])
([nil nil ((1526 . 1533)) nil (25294 55500 185934 0) 0 nil])
([nil nil ((#("
" 0 1 (fontified t)) . 1534) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) (undo-tree-id152 . -1) (undo-tree-id153 . -1) 1535) nil (25294 55500 185928 0) 0 nil])
([nil nil ((1380 . 1382) (t 25294 55500 189964 650000)) nil (25299 47362 655319 0) 0 nil])
([nil nil ((1382 . 1383)) nil (25299 47362 655317 0) 0 nil])
([nil nil ((1381 . 1395)) nil (25299 47362 655316 0) 0 nil])
([nil current ((1395 . 1404)) nil (25299 47362 655311 0) 0 nil])
nil
