(((elisp org-element--headline-cache) . #s(avl-tree- [[[nil nil #6=(headline (:raw-value #1="Tasks" :begin 1 :end 9 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 1 :priority nil :tags nil :todo-keyword nil :todo-type nil :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 1 :title #1# :mode first-section :granularity element :cached t :parent #3=(org-data (:begin 1 :contents-begin 1 :contents-end 138 :end 138 :robust-begin 3 :robust-end 136 :post-blank 0 :post-affiliated 1 :path "c:/Users/dongyinghua/Nutstore/1/org_gtd/Inbox.org" :mode org-data :CATEGORY "Inbox" :cached t :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil #12=(headline (:raw-value #2="给“世界迷雾”添加路径" :begin 119 :end 138 :pre-blank 0 :contents-begin nil :contents-end nil :robust-begin nil :robust-end nil :level 1 :priority nil :tags nil :todo-keyword #("TODO" 0 4 (fontified nil)) :todo-type todo :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 119 :title #2# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] #5=(headline (:raw-value #4="梳理一下emacs的配置" :begin 9 :end 119 :pre-blank 0 :contents-begin 29 :contents-end 119 :robust-begin 31 :robust-end 117 :level 1 :priority nil :tags nil :todo-keyword #("TODO" 0 4 (fontified nil)) :todo-type todo :post-blank 0 :footnote-section-p nil :archivedp nil :commentedp nil :post-affiliated 9 :title #4# :mode nil :granularity element :cached t :parent #3# :org-element--cache-sync-key nil)) 0] nil nil 0] org-element--cache-compare)) ((elisp org-element--cache) . #s(avl-tree- [[[[[nil nil #3# 0] [nil nil #5# 0] #6# 0] [[nil nil #8=(plain-list (:type unordered :begin 29 :end 119 :contents-begin 29 :contents-end 119 :structure #7=((29 0 "+ " nil nil nil 37) (37 0 "+ " nil nil nil 64) (64 0 "+ " nil nil nil 94) (94 0 "+ " nil nil nil 119)) :post-blank 0 :post-affiliated 29 :mode planning :granularity element :cached t :parent #10=(section (:begin 29 :end 119 :contents-begin 29 :contents-end 119 :robust-begin 29 :robust-end 117 :post-blank 0 :post-affiliated 29 :mode section :granularity element :cached t :parent #5# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil (paragraph (:begin 31 :end 37 :contents-begin 31 :contents-end 37 :post-blank 0 :post-affiliated 31 :mode nil :granularity element :cached t :parent #9=(item (:bullet "+ " :begin 29 :end 37 :contents-begin 31 :contents-end 37 :checkbox nil :counter nil :structure #7# :pre-blank 0 :post-blank 0 :post-affiliated 29 :tag nil :mode item :granularity element :cached t :parent #8# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #9# 0] #10# 0] [[[nil nil (paragraph (:begin 39 :end 64 :contents-begin 39 :contents-end 64 :post-blank 0 :post-affiliated 39 :mode nil :granularity element :cached t :parent #14=(item (:bullet "+ " :begin 37 :end 64 :contents-begin 39 :contents-end 64 :checkbox nil :counter nil :structure #7# :pre-blank 0 :post-blank 0 :post-affiliated 37 :tag nil :mode item :granularity element :cached t :parent #8# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] [nil nil (paragraph (:begin 66 :end 94 :contents-begin 66 :contents-end 94 :post-blank 0 :post-affiliated 66 :mode nil :granularity element :cached t :parent #11=(item (:bullet "+ " :begin 64 :end 94 :contents-begin 66 :contents-end 94 :checkbox nil :counter nil :structure #7# :pre-blank 0 :post-blank 0 :post-affiliated 64 :tag nil :mode item :granularity element :cached t :parent #8# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] #11# 0] [[nil nil (paragraph (:begin 96 :end 119 :contents-begin 96 :contents-end 119 :post-blank 0 :post-affiliated 96 :mode nil :granularity element :cached t :parent #13=(item (:bullet "+ " :begin 94 :end 119 :contents-begin 96 :contents-end 119 :checkbox nil :counter nil :structure #7# :pre-blank 0 :post-blank 0 :post-affiliated 94 :tag nil :mode item :granularity element :cached t :parent #8# :org-element--cache-sync-key nil)) :org-element--cache-sync-key nil)) 0] nil #12# -1] #13# 0] #14# 0] nil nil 0] org-element--cache-compare)))